"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@auth";
exports.ids = ["vendor-chunks/@auth"];
exports.modules = {

/***/ "(action-browser)/./node_modules/@auth/core/node_modules/cookie/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@auth/core/node_modules/cookie/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ exports.parse = parse;\nexports.serialize = serialize;\n/**\n * Module variables.\n * @private\n */ var __toString = Object.prototype.toString;\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */ var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */ function parse(str, options) {\n    if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n    }\n    var obj = {};\n    var opt = options || {};\n    var dec = opt.decode || decode;\n    var index = 0;\n    while(index < str.length){\n        var eqIdx = str.indexOf(\"=\", index);\n        // no more cookie pairs\n        if (eqIdx === -1) {\n            break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n            endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        // only assign once\n        if (undefined === obj[key]) {\n            var val = str.slice(eqIdx + 1, endIdx).trim();\n            // quoted values\n            if (val.charCodeAt(0) === 0x22) {\n                val = val.slice(1, -1);\n            }\n            obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n    }\n    return obj;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */ function serialize(name, val, options) {\n    var opt = options || {};\n    var enc = opt.encode || encode;\n    if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n    }\n    var value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n    }\n    var str = name + \"=\" + value;\n    if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n    }\n    if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n            throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (opt.secure) {\n        str += \"; Secure\";\n    }\n    if (opt.partitioned) {\n        str += \"; Partitioned\";\n    }\n    if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch(priority){\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(\"option priority is invalid\");\n        }\n    }\n    if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch(sameSite){\n            case true:\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(\"option sameSite is invalid\");\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */ function decode(str) {\n    return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n}\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */ function encode(val) {\n    return encodeURIComponent(val);\n}\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */ function isDate(val) {\n    return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */ function tryDecode(str, decode) {\n    try {\n        return decode(str);\n    } catch (e) {\n        return str;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/node_modules/cookie/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/errors.js":
/*!*******************************************!*\
  !*** ./node_modules/@auth/core/errors.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessDenied: () => (/* binding */ AccessDenied),\n/* harmony export */   AccountNotLinked: () => (/* binding */ AccountNotLinked),\n/* harmony export */   AdapterError: () => (/* binding */ AdapterError),\n/* harmony export */   AuthError: () => (/* binding */ AuthError),\n/* harmony export */   CallbackRouteError: () => (/* binding */ CallbackRouteError),\n/* harmony export */   CredentialsSignin: () => (/* binding */ CredentialsSignin),\n/* harmony export */   DuplicateConditionalUI: () => (/* binding */ DuplicateConditionalUI),\n/* harmony export */   EmailSignInError: () => (/* binding */ EmailSignInError),\n/* harmony export */   ErrorPageLoop: () => (/* binding */ ErrorPageLoop),\n/* harmony export */   EventError: () => (/* binding */ EventError),\n/* harmony export */   ExperimentalFeatureNotEnabled: () => (/* binding */ ExperimentalFeatureNotEnabled),\n/* harmony export */   InvalidCallbackUrl: () => (/* binding */ InvalidCallbackUrl),\n/* harmony export */   InvalidCheck: () => (/* binding */ InvalidCheck),\n/* harmony export */   InvalidEndpoints: () => (/* binding */ InvalidEndpoints),\n/* harmony export */   InvalidProvider: () => (/* binding */ InvalidProvider),\n/* harmony export */   JWTSessionError: () => (/* binding */ JWTSessionError),\n/* harmony export */   MissingAdapter: () => (/* binding */ MissingAdapter),\n/* harmony export */   MissingAdapterMethods: () => (/* binding */ MissingAdapterMethods),\n/* harmony export */   MissingAuthorize: () => (/* binding */ MissingAuthorize),\n/* harmony export */   MissingCSRF: () => (/* binding */ MissingCSRF),\n/* harmony export */   MissingSecret: () => (/* binding */ MissingSecret),\n/* harmony export */   MissingWebAuthnAutocomplete: () => (/* binding */ MissingWebAuthnAutocomplete),\n/* harmony export */   OAuthAccountNotLinked: () => (/* binding */ OAuthAccountNotLinked),\n/* harmony export */   OAuthCallbackError: () => (/* binding */ OAuthCallbackError),\n/* harmony export */   OAuthProfileParseError: () => (/* binding */ OAuthProfileParseError),\n/* harmony export */   OAuthSignInError: () => (/* binding */ OAuthSignInError),\n/* harmony export */   SessionTokenError: () => (/* binding */ SessionTokenError),\n/* harmony export */   SignInError: () => (/* binding */ SignInError),\n/* harmony export */   SignOutError: () => (/* binding */ SignOutError),\n/* harmony export */   UnknownAction: () => (/* binding */ UnknownAction),\n/* harmony export */   UnsupportedStrategy: () => (/* binding */ UnsupportedStrategy),\n/* harmony export */   UntrustedHost: () => (/* binding */ UntrustedHost),\n/* harmony export */   Verification: () => (/* binding */ Verification),\n/* harmony export */   WebAuthnVerificationError: () => (/* binding */ WebAuthnVerificationError),\n/* harmony export */   isClientError: () => (/* binding */ isClientError)\n/* harmony export */ });\n/**\n * Base error class for all Auth.js errors.\n * It's optimized to be printed in the server logs in a nicely formatted way\n * via the [`logger.error`](https://authjs.dev/reference/core#logger) option.\n */ class AuthError extends Error {\n    constructor(message, errorOptions){\n        if (message instanceof Error) {\n            super(undefined, {\n                cause: {\n                    err: message,\n                    ...message.cause,\n                    ...errorOptions\n                }\n            });\n        } else if (typeof message === \"string\") {\n            if (errorOptions instanceof Error) {\n                errorOptions = {\n                    err: errorOptions,\n                    ...errorOptions.cause\n                };\n            }\n            super(message, errorOptions);\n        } else {\n            super(undefined, message);\n        }\n        this.name = this.constructor.name;\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.type = this.constructor.type ?? \"AuthError\";\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.kind = this.constructor.kind ?? \"error\";\n        Error.captureStackTrace?.(this, this.constructor);\n        const url = `https://errors.authjs.dev#${this.type.toLowerCase()}`;\n        this.message += `${this.message ? \". \" : \"\"}Read more at ${url}`;\n    }\n}\nclass SignInError extends AuthError {\n}\nSignInError.kind = \"signIn\";\n/**\n * One of the database [`Adapter` methods](https://authjs.dev/reference/core/adapters#methods)\n * failed during execution.\n *\n * :::tip\n * If `debug: true` is set, you can check out `[auth][debug]` in the logs to learn more about the failed adapter method execution.\n * @example\n * ```sh\n * [auth][debug]: adapter_getUserByEmail\n * { \"args\": [undefined] }\n * ```\n * :::\n */ class AdapterError extends AuthError {\n}\nAdapterError.type = \"AdapterError\";\n/**\n * Thrown when the execution of the [`signIn` callback](https://authjs.dev/reference/core/types#signin) fails\n * or if it returns `false`.\n */ class AccessDenied extends AuthError {\n}\nAccessDenied.type = \"AccessDenied\";\n/**\n * This error occurs when the user cannot finish login.\n * Depending on the provider type, this could have happened for multiple reasons.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n *\n * For an [OAuth provider](https://authjs.dev/reference/core/providers/oauth), possible causes are:\n * - The user denied access to the application\n * - There was an error parsing the OAuth Profile:\n *   Check out the provider's `profile` or `userinfo.request` method to make sure\n *   it correctly fetches the user's profile.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * For an [Email provider](https://authjs.dev/reference/core/providers/email), possible causes are:\n * - The provided email/token combination was invalid/missing:\n *   Check if the provider's `sendVerificationRequest` method correctly sends the email.\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n *\n * For a [Credentials provider](https://authjs.dev/reference/core/providers/credentials), possible causes are:\n * - The `authorize` method threw an uncaught error:\n *   Check the provider's `authorize` method.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * :::tip\n * Check out `[auth][cause]` in the error message for more details.\n * It will show the original stack trace.\n * :::\n */ class CallbackRouteError extends AuthError {\n}\nCallbackRouteError.type = \"CallbackRouteError\";\n/**\n * Thrown when Auth.js is misconfigured and accidentally tried to require authentication on a custom error page.\n * To prevent an infinite loop, Auth.js will instead render its default error page.\n *\n * To fix this, make sure that the `error` page does not require authentication.\n *\n * Learn more at [Guide: Error pages](https://authjs.dev/guides/basics/pages)\n */ class ErrorPageLoop extends AuthError {\n}\nErrorPageLoop.type = \"ErrorPageLoop\";\n/**\n * One of the [`events` methods](https://authjs.dev/reference/core/types#eventcallbacks)\n * failed during execution.\n *\n * Make sure that the `events` methods are implemented correctly and uncaught errors are handled.\n *\n * Learn more at [`events`](https://authjs.dev/reference/core/types#eventcallbacks)\n */ class EventError extends AuthError {\n}\nEventError.type = \"EventError\";\n/**\n * Thrown when Auth.js is unable to verify a `callbackUrl` value.\n * The browser either disabled cookies or the `callbackUrl` is not a valid URL.\n *\n * Somebody might have tried to manipulate the callback URL that Auth.js uses to redirect the user back to the configured `callbackUrl`/page.\n * This could be a malicious hacker trying to redirect the user to a phishing site.\n * To prevent this, Auth.js checks if the callback URL is valid and throws this error if it is not.\n *\n * There is no action required, but it might be an indicator that somebody is trying to attack your application.\n */ class InvalidCallbackUrl extends AuthError {\n}\nInvalidCallbackUrl.type = \"InvalidCallbackUrl\";\n/**\n * Can be thrown from the `authorize` callback of the Credentials provider.\n * When an error occurs during the `authorize` callback, two things can happen:\n * 1. The user is redirected to the signin page, with `error=CredentialsSignin&code=credentials` in the URL. `code` is configurable.\n * 2. If you throw this error in a framework that handles form actions server-side, this error is thrown, instead of redirecting the user, so you'll need to handle.\n */ class CredentialsSignin extends SignInError {\n    constructor(){\n        super(...arguments);\n        /**\n         * The error code that is set in the `code` query parameter of the redirect URL.\n         *\n         *\n         * ⚠ NOTE: This property is going to be included in the URL, so make sure it does not hint at sensitive errors.\n         *\n         * The full error is always logged on the server, if you need to debug.\n         *\n         * Generally, we don't recommend hinting specifically if the user had either a wrong username or password specifically,\n         * try rather something like \"Invalid credentials\".\n         */ this.code = \"credentials\";\n    }\n}\nCredentialsSignin.type = \"CredentialsSignin\";\n/**\n * One of the configured OAuth or OIDC providers is missing the `authorization`, `token` or `userinfo`, or `issuer` configuration.\n * To perform OAuth or OIDC sign in, at least one of these endpoints is required.\n *\n * Learn more at [`OAuth2Config`](https://authjs.dev/reference/core/providers#oauth2configprofile) or [Guide: OAuth Provider](https://authjs.dev/guides/providers/custom-provider)\n */ class InvalidEndpoints extends AuthError {\n}\nInvalidEndpoints.type = \"InvalidEndpoints\";\n/**\n * Thrown when a PKCE, state or nonce OAuth check could not be performed.\n * This could happen if the OAuth provider is configured incorrectly or if the browser is blocking cookies.\n *\n * Learn more at [`checks`](https://authjs.dev/reference/core/providers#checks)\n */ class InvalidCheck extends AuthError {\n}\nInvalidCheck.type = \"InvalidCheck\";\n/**\n * Logged on the server when Auth.js could not decode or encode a JWT-based (`strategy: \"jwt\"`) session.\n *\n * Possible causes are either a misconfigured `secret` or a malformed JWT or `encode/decode` methods.\n *\n * :::note\n * When this error is logged, the session cookie is destroyed.\n * :::\n *\n * Learn more at [`secret`](https://authjs.dev/reference/core#secret), [`jwt.encode`](https://authjs.dev/reference/core/jwt#encode) or [`jwt.decode`](https://authjs.dev/reference/core/jwt#decode) for more information.\n */ class JWTSessionError extends AuthError {\n}\nJWTSessionError.type = \"JWTSessionError\";\n/**\n * Thrown if Auth.js is misonfigured. This could happen if you configured an Email provider but did not set up a database adapter,\n * or tried using a `strategy: \"database\"` session without a database adapter.\n * In both cases, make sure you either remove the configuration or add the missing adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/getting-started/adapters), [Email provider](https://authjs.dev/reference/core/providers/email) or [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database)\n */ class MissingAdapter extends AuthError {\n}\nMissingAdapter.type = \"MissingAdapter\";\n/**\n * Thrown similarily to [`MissingAdapter`](https://authjs.dev/reference/core/errors#missingadapter), but only some required methods were missing.\n *\n * Make sure you either remove the configuration or add the missing methods to the adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/reference/core/adapters)\n */ class MissingAdapterMethods extends AuthError {\n}\nMissingAdapterMethods.type = \"MissingAdapterMethods\";\n/**\n * Thrown when a Credentials provider is missing the `authorize` configuration.\n * To perform credentials sign in, the `authorize` method is required.\n *\n * Learn more at [Credentials provider](https://authjs.dev/reference/core/providers/credentials)\n */ class MissingAuthorize extends AuthError {\n}\nMissingAuthorize.type = \"MissingAuthorize\";\n/**\n * Auth.js requires a secret or multiple secrets to be set, but none was not found. This is used to encrypt cookies, JWTs and other sensitive data.\n *\n * :::note\n * If you are using a framework like Next.js, we try to automatically infer the secret from the `AUTH_SECRET`, `AUTH_SECRET_1`, etc. environment variables.\n * Alternatively, you can also explicitly set the [`AuthConfig.secret`](https://authjs.dev/reference/core#secret) option.\n * :::\n *\n *\n * :::tip\n * To generate a random string, you can use the Auth.js CLI: `npx auth secret`\n * :::\n */ class MissingSecret extends AuthError {\n}\nMissingSecret.type = \"MissingSecret\";\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an OAuth account that is not linked to it.\n *\n * For security reasons, Auth.js does not automatically link OAuth accounts to existing accounts if the user is not signed in.\n *\n * :::tip\n * If you trust the OAuth provider to have verified the user's email address,\n * you can enable automatic account linking by setting [`allowDangerousEmailAccountLinking: true`](https://authjs.dev/reference/core/providers#allowdangerousemailaccountlinking)\n * in the provider configuration.\n * :::\n */ class OAuthAccountNotLinked extends SignInError {\n}\nOAuthAccountNotLinked.type = \"OAuthAccountNotLinked\";\n/**\n * Thrown when an OAuth provider returns an error during the sign in process.\n * This could happen for example if the user denied access to the application or there was a configuration error.\n *\n * For a full list of possible reasons, check out the specification [Authorization Code Grant: Error Response](https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1)\n */ class OAuthCallbackError extends SignInError {\n}\nOAuthCallbackError.type = \"OAuthCallbackError\";\n/**\n * This error occurs during an OAuth sign in attempt when the provider's\n * response could not be parsed. This could for example happen if the provider's API\n * changed, or the [`OAuth2Config.profile`](https://authjs.dev/reference/core/providers/oauth#profile) method is not implemented correctly.\n */ class OAuthProfileParseError extends AuthError {\n}\nOAuthProfileParseError.type = \"OAuthProfileParseError\";\n/**\n * Logged on the server when Auth.js could not retrieve a session from the database (`strategy: \"database\"`).\n *\n * The database adapter might be misconfigured or the database is not reachable.\n *\n * Learn more at [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database)\n */ class SessionTokenError extends AuthError {\n}\nSessionTokenError.type = \"SessionTokenError\";\n/**\n * Happens when login by [OAuth](https://authjs.dev/getting-started/providers/oauth-tutorial) could not be started.\n *\n * Possible causes are:\n * - The Authorization Server is not compliant with the [OAuth 2.0](https://www.ietf.org/rfc/rfc6749.html) or the [OIDC](https://openid.net/specs/openid-connect-core-1_0.html) specification.\n *   Check the details in the error message.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n */ class OAuthSignInError extends SignInError {\n}\nOAuthSignInError.type = \"OAuthSignInError\";\n/**\n * Happens when the login by an [Email provider](https://authjs.dev/getting-started/providers/email-tutorial) could not be started.\n *\n * Possible causes are:\n * - The email sent from the client is invalid, could not be normalized by [`EmailConfig.normalizeIdentifier`](https://authjs.dev/reference/core/providers/email#normalizeidentifier)\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n */ class EmailSignInError extends SignInError {\n}\nEmailSignInError.type = \"EmailSignInError\";\n/**\n * Represents an error that occurs during the sign-out process. This error\n * is logged when there are issues in terminating a user's session, either\n * by failing to delete the session from the database (in database session\n * strategies) or encountering issues during other parts of the sign-out\n * process, such as emitting sign-out events or clearing session cookies.\n *\n * The session cookie(s) are emptied even if this error is logged.\n *\n */ class SignOutError extends AuthError {\n}\nSignOutError.type = \"SignOutError\";\n/**\n * Auth.js was requested to handle an operation that it does not support.\n *\n * See [`AuthAction`](https://authjs.dev/reference/core/types#authaction) for the supported actions.\n */ class UnknownAction extends AuthError {\n}\nUnknownAction.type = \"UnknownAction\";\n/**\n * Thrown when a Credentials provider is present but the JWT strategy (`strategy: \"jwt\"`) is not enabled.\n *\n * Learn more at [`strategy`](https://authjs.dev/reference/core#strategy) or [Credentials provider](https://authjs.dev/reference/core/providers/credentials)\n */ class UnsupportedStrategy extends AuthError {\n}\nUnsupportedStrategy.type = \"UnsupportedStrategy\";\n/** Thrown when an endpoint was incorrectly called without a provider, or with an unsupported provider. */ class InvalidProvider extends AuthError {\n}\nInvalidProvider.type = \"InvalidProvider\";\n/**\n * Thrown when the `trustHost` option was not set to `true`.\n *\n * Auth.js requires the `trustHost` option to be set to `true` since it's relying on the request headers' `host` value.\n *\n * :::note\n * Official Auth.js libraries might attempt to automatically set the `trustHost` option to `true` if the request is coming from a trusted host on a trusted platform.\n * :::\n *\n * Learn more at [`trustHost`](https://authjs.dev/reference/core#trusthost) or [Guide: Deployment](https://authjs.dev/getting-started/deployment)\n */ class UntrustedHost extends AuthError {\n}\nUntrustedHost.type = \"UntrustedHost\";\n/**\n * The user's email/token combination was invalid.\n * This could be because the email/token combination was not found in the database,\n * or because the token has expired. Ask the user to log in again.\n */ class Verification extends AuthError {\n}\nVerification.type = \"Verification\";\n/**\n * Error for missing CSRF tokens in client-side actions (`signIn`, `signOut`, `useSession#update`).\n * Thrown when actions lack the double submit cookie, essential for CSRF protection.\n *\n * CSRF ([Cross-Site Request Forgery](https://owasp.org/www-community/attacks/csrf))\n * is an attack leveraging authenticated user credentials for unauthorized actions.\n *\n * Double submit cookie pattern, a CSRF defense, requires matching values in a cookie\n * and request parameter. More on this at [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/Security/CSRF).\n */ class MissingCSRF extends SignInError {\n}\nMissingCSRF.type = \"MissingCSRF\";\nconst clientErrors = new Set([\n    \"CredentialsSignin\",\n    \"OAuthAccountNotLinked\",\n    \"OAuthCallbackError\",\n    \"AccessDenied\",\n    \"Verification\",\n    \"MissingCSRF\",\n    \"AccountNotLinked\",\n    \"WebAuthnVerificationError\"\n]);\n/**\n * Used to only allow sending a certain subset of errors to the client.\n * Errors are always logged on the server, but to prevent leaking sensitive information,\n * only a subset of errors are sent to the client as-is.\n */ function isClientError(error) {\n    if (error instanceof AuthError) return clientErrors.has(error.type);\n    return false;\n}\n/**\n * Thrown when multiple providers have `enableConditionalUI` set to `true`.\n * Only one provider can have this option enabled at a time.\n */ class DuplicateConditionalUI extends AuthError {\n}\nDuplicateConditionalUI.type = \"DuplicateConditionalUI\";\n/**\n * Thrown when a WebAuthn provider has `enableConditionalUI` set to `true` but no formField has `webauthn` in its autocomplete param.\n *\n * The `webauthn` autocomplete param is required for conditional UI to work.\n */ class MissingWebAuthnAutocomplete extends AuthError {\n}\nMissingWebAuthnAutocomplete.type = \"MissingWebAuthnAutocomplete\";\n/**\n * Thrown when a WebAuthn provider fails to verify a client response.\n */ class WebAuthnVerificationError extends AuthError {\n}\nWebAuthnVerificationError.type = \"WebAuthnVerificationError\";\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an account that is not linked to it.\n *\n * For security reasons, Auth.js does not automatically link accounts to existing accounts if the user is not signed in.\n */ class AccountNotLinked extends SignInError {\n}\nAccountNotLinked.type = \"AccountNotLinked\";\n/**\n * Thrown when an experimental feature is used but not enabled.\n */ class ExperimentalFeatureNotEnabled extends AuthError {\n}\nExperimentalFeatureNotEnabled.type = \"ExperimentalFeatureNotEnabled\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/errors.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/index.js":
/*!******************************************!*\
  !*** ./node_modules/@auth/core/index.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: () => (/* binding */ Auth),\n/* harmony export */   createActionURL: () => (/* reexport safe */ _lib_utils_env_js__WEBPACK_IMPORTED_MODULE_3__.createActionURL),\n/* harmony export */   isAuthAction: () => (/* reexport safe */ _lib_utils_actions_js__WEBPACK_IMPORTED_MODULE_7__.isAuthAction),\n/* harmony export */   raw: () => (/* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.raw),\n/* harmony export */   setEnvDefaults: () => (/* reexport safe */ _lib_utils_env_js__WEBPACK_IMPORTED_MODULE_3__.setEnvDefaults),\n/* harmony export */   skipCSRFCheck: () => (/* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.skipCSRFCheck)\n/* harmony export */ });\n/* harmony import */ var _lib_utils_assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/utils/assert.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/assert.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/index.js */ \"(action-browser)/./node_modules/@auth/core/lib/index.js\");\n/* harmony import */ var _lib_utils_env_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/utils/env.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/env.js\");\n/* harmony import */ var _lib_pages_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/pages/index.js */ \"(action-browser)/./node_modules/@auth/core/lib/pages/index.js\");\n/* harmony import */ var _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/utils/logger.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/logger.js\");\n/* harmony import */ var _lib_utils_web_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/utils/web.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _lib_utils_actions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/utils/actions.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/actions.js\");\n/**\n *\n * :::warning Experimental\n * `@auth/core` is under active development.\n * :::\n *\n * This is the main entry point to the Auth.js library.\n *\n * Based on the {@link https://developer.mozilla.org/en-US/docs/Web/API/Request Request}\n * and {@link https://developer.mozilla.org/en-US/docs/Web/API/Response Response} Web standard APIs.\n * Primarily used to implement [framework](https://authjs.dev/concepts/frameworks)-specific packages,\n * but it can also be used directly.\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install @auth/core\n * ```\n *\n * ## Usage\n *\n * ```ts\n * import { Auth } from \"@auth/core\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await Auth(request, {...})\n *\n * console.log(response instanceof Response) // true\n * ```\n *\n * ## Resources\n *\n * - [Getting started](https://authjs.dev/getting-started/introduction)\n * - [Most common use case guides](https://authjs.dev/guides)\n *\n * @module @auth/core\n */ \n\n\n\n\n\n\n\n\n/**\n * Core functionality provided by Auth.js.\n *\n * Receives a standard {@link Request} and returns a {@link Response}.\n *\n * @example\n * ```ts\n * import Auth from \"@auth/core\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await AuthHandler(request, {\n *   providers: [...],\n *   secret: \"...\",\n *   trustHost: true,\n * })\n *```\n * @see [Documentation](https://authjs.dev)\n */ async function Auth(request, config) {\n    (0,_lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.setLogger)(config.logger, config.debug);\n    const internalRequest = await (0,_lib_utils_web_js__WEBPACK_IMPORTED_MODULE_6__.toInternalRequest)(request, config);\n    // There was an error parsing the request\n    if (!internalRequest) return Response.json(`Bad request.`, {\n        status: 400\n    });\n    const warningsOrError = (0,_lib_utils_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertConfig)(internalRequest, config);\n    if (Array.isArray(warningsOrError)) {\n        warningsOrError.forEach(_lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.warn);\n    } else if (warningsOrError) {\n        // If there's an error in the user config, bail out early\n        _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.error(warningsOrError);\n        const htmlPages = new Set([\n            \"signin\",\n            \"signout\",\n            \"error\",\n            \"verify-request\"\n        ]);\n        if (!htmlPages.has(internalRequest.action) || internalRequest.method !== \"GET\") {\n            const message = \"There was a problem with the server configuration. Check the server logs for more information.\";\n            return Response.json({\n                message\n            }, {\n                status: 500\n            });\n        }\n        const { pages, theme } = config;\n        // If this is true, the config required auth on the error page\n        // which could cause a redirect loop\n        const authOnErrorPage = pages?.error && internalRequest.url.searchParams.get(\"callbackUrl\")?.startsWith(pages.error);\n        // Either there was no error page configured or the configured one contains infinite redirects\n        if (!pages?.error || authOnErrorPage) {\n            if (authOnErrorPage) {\n                _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_1__.ErrorPageLoop(`The error page ${pages?.error} should not require authentication`));\n            }\n            const page = (0,_lib_pages_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\n                theme\n            }).error(\"Configuration\");\n            return (0,_lib_utils_web_js__WEBPACK_IMPORTED_MODULE_6__.toResponse)(page);\n        }\n        return Response.redirect(`${pages.error}?error=Configuration`);\n    }\n    const isRedirect = request.headers?.has(\"X-Auth-Return-Redirect\");\n    const isRaw = config.raw === _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.raw;\n    try {\n        const internalResponse = await (0,_lib_index_js__WEBPACK_IMPORTED_MODULE_2__.AuthInternal)(internalRequest, config);\n        if (isRaw) return internalResponse;\n        const response = (0,_lib_utils_web_js__WEBPACK_IMPORTED_MODULE_6__.toResponse)(internalResponse);\n        const url = response.headers.get(\"Location\");\n        if (!isRedirect || !url) return response;\n        return Response.json({\n            url\n        }, {\n            headers: response.headers\n        });\n    } catch (e) {\n        const error = e;\n        _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_5__.logger.error(error);\n        const isAuthError = error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthError;\n        if (isAuthError && isRaw && !isRedirect) throw error;\n        // If the CSRF check failed for POST/session, return a 400 status code.\n        // We should not redirect to a page as this is an API route\n        if (request.method === \"POST\" && internalRequest.action === \"session\") return Response.json(null, {\n            status: 400\n        });\n        const isClientSafeErrorType = (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.isClientError)(error);\n        const type = isClientSafeErrorType ? error.type : \"Configuration\";\n        const params = new URLSearchParams({\n            error: type\n        });\n        if (error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_1__.CredentialsSignin) params.set(\"code\", error.code);\n        const pageKind = isAuthError && error.kind || \"error\";\n        const pagePath = config.pages?.[pageKind] ?? `${config.basePath}/${pageKind.toLowerCase()}`;\n        const url = `${internalRequest.url.origin}${pagePath}?${params}`;\n        if (isRedirect) return Response.json({\n            url\n        });\n        return Response.redirect(url);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/jwt.js":
/*!****************************************!*\
  !*** ./node_modules/@auth/core/jwt.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   getToken: () => (/* binding */ getToken)\n/* harmony export */ });\n/* harmony import */ var _panva_hkdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @panva/hkdf */ \"(action-browser)/./node_modules/@panva/hkdf/dist/node/esm/index.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(action-browser)/./node_modules/jose/dist/node/esm/index.js\");\n/* harmony import */ var _lib_utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/utils/cookie.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cookie */ \"(action-browser)/./node_modules/@auth/core/node_modules/cookie/index.js\");\n/**\n *\n *\n * This module contains functions and types\n * to encode and decode {@link https://authjs.dev/concepts/session-strategies#jwt JWT}s\n * issued and used by Auth.js.\n *\n * The JWT issued by Auth.js is _encrypted by default_, using the _A256CBC-HS512_ algorithm ({@link https://www.rfc-editor.org/rfc/rfc7518.html#section-5.2.5 JWE}).\n * It uses the `AUTH_SECRET` environment variable or the passed `secret` propery to derive a suitable encryption key.\n *\n * :::info Note\n * Auth.js JWTs are meant to be used by the same app that issued them.\n * If you need JWT authentication for your third-party API, you should rely on your Identity Provider instead.\n * :::\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install @auth/core\n * ```\n *\n * You can then import this submodule from `@auth/core/jwt`.\n *\n * ## Usage\n *\n * :::warning Warning\n * This module *will* be refactored/changed. We do not recommend relying on it right now.\n * :::\n *\n *\n * ## Resources\n *\n * - [What is a JWT session strategy](https://authjs.dev/concepts/session-strategies#jwt)\n * - [RFC7519 - JSON Web Token (JWT)](https://www.rfc-editor.org/rfc/rfc7519)\n *\n * @module jwt\n */ \n\n\n\n\nconst DEFAULT_MAX_AGE = 30 * 24 * 60 * 60; // 30 days\nconst now = ()=>Date.now() / 1000 | 0;\nconst alg = \"dir\";\nconst enc = \"A256CBC-HS512\";\n/** Issues a JWT. By default, the JWT is encrypted using \"A256CBC-HS512\". */ async function encode(params) {\n    const { token = {}, secret, maxAge = DEFAULT_MAX_AGE, salt } = params;\n    const secrets = Array.isArray(secret) ? secret : [\n        secret\n    ];\n    const encryptionSecret = await getDerivedEncryptionKey(enc, secrets[0], salt);\n    const thumbprint = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.calculateJwkThumbprint)({\n        kty: \"oct\",\n        k: jose__WEBPACK_IMPORTED_MODULE_1__.base64url.encode(encryptionSecret)\n    }, `sha${encryptionSecret.byteLength << 3}`);\n    // @ts-expect-error `jose` allows any object as payload.\n    return await new jose__WEBPACK_IMPORTED_MODULE_1__.EncryptJWT(token).setProtectedHeader({\n        alg,\n        enc,\n        kid: thumbprint\n    }).setIssuedAt().setExpirationTime(now() + maxAge).setJti(crypto.randomUUID()).encrypt(encryptionSecret);\n}\n/** Decodes a Auth.js issued JWT. */ async function decode(params) {\n    const { token, secret, salt } = params;\n    const secrets = Array.isArray(secret) ? secret : [\n        secret\n    ];\n    if (!token) return null;\n    const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.jwtDecrypt)(token, async ({ kid, enc })=>{\n        for (const secret of secrets){\n            const encryptionSecret = await getDerivedEncryptionKey(enc, secret, salt);\n            if (kid === undefined) return encryptionSecret;\n            const thumbprint = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.calculateJwkThumbprint)({\n                kty: \"oct\",\n                k: jose__WEBPACK_IMPORTED_MODULE_1__.base64url.encode(encryptionSecret)\n            }, `sha${encryptionSecret.byteLength << 3}`);\n            if (kid === thumbprint) return encryptionSecret;\n        }\n        throw new Error(\"no matching decryption secret\");\n    }, {\n        clockTolerance: 15,\n        keyManagementAlgorithms: [\n            alg\n        ],\n        contentEncryptionAlgorithms: [\n            enc,\n            \"A256GCM\"\n        ]\n    });\n    return payload;\n}\nasync function getToken(params) {\n    const { secureCookie, cookieName = secureCookie ? \"__Secure-authjs.session-token\" : \"authjs.session-token\", decode: _decode = decode, salt = cookieName, secret, logger = console, raw, req } = params;\n    if (!req) throw new Error(\"Must pass `req` to JWT getToken()\");\n    if (!secret) throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.MissingSecret(\"Must pass `secret` if not set to JWT getToken()\");\n    const headers = req.headers instanceof Headers ? req.headers : new Headers(req.headers);\n    const sessionStore = new _lib_utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__.SessionStore({\n        name: cookieName,\n        options: {\n            secure: secureCookie\n        }\n    }, (0,cookie__WEBPACK_IMPORTED_MODULE_4__.parse)(headers.get(\"cookie\") ?? \"\"), logger);\n    let token = sessionStore.value;\n    const authorizationHeader = headers.get(\"authorization\");\n    if (!token && authorizationHeader?.split(\" \")[0] === \"Bearer\") {\n        const urlEncodedToken = authorizationHeader.split(\" \")[1];\n        token = decodeURIComponent(urlEncodedToken);\n    }\n    if (!token) return null;\n    if (raw) return token;\n    try {\n        return await _decode({\n            token,\n            secret,\n            salt\n        });\n    } catch  {\n        return null;\n    }\n}\nasync function getDerivedEncryptionKey(enc, keyMaterial, salt) {\n    let length;\n    switch(enc){\n        case \"A256CBC-HS512\":\n            length = 64;\n            break;\n        case \"A256GCM\":\n            length = 32;\n            break;\n        default:\n            throw new Error(\"Unsupported JWT Content Encryption Algorithm\");\n    }\n    return await (0,_panva_hkdf__WEBPACK_IMPORTED_MODULE_0__.hkdf)(\"sha256\", keyMaterial, salt, `Auth.js Generated Encryption Key (${salt})`, length);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/jwt.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/callback/handle-login.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/handle-login.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleLoginOrRegister: () => (/* binding */ handleLoginOrRegister)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/date.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/date.js\");\n\n\n/**\n * This function handles the complex flow of signing users in, and either creating,\n * linking (or not linking) accounts depending on if the user is currently logged\n * in, if they have account already and the authentication mechanism they are using.\n *\n * It prevents insecure behaviour, such as linking OAuth accounts unless a user is\n * signed in and authenticated with an existing valid account.\n *\n * All verification (e.g. OAuth flows or email address verification flows) are\n * done prior to this handler being called to avoid additional complexity in this\n * handler.\n */ async function handleLoginOrRegister(sessionToken, _profile, _account, options) {\n    // Input validation\n    if (!_account?.providerAccountId || !_account.type) throw new Error(\"Missing or invalid provider account\");\n    if (![\n        \"email\",\n        \"oauth\",\n        \"oidc\",\n        \"webauthn\"\n    ].includes(_account.type)) throw new Error(\"Provider not supported\");\n    const { adapter, jwt, events, session: { strategy: sessionStrategy, generateSessionToken } } = options;\n    // If no adapter is configured then we don't have a database and cannot\n    // persist data; in this mode we just return a dummy session object.\n    if (!adapter) {\n        return {\n            user: _profile,\n            account: _account\n        };\n    }\n    const profile = _profile;\n    let account = _account;\n    const { createUser, updateUser, getUser, getUserByAccount, getUserByEmail, linkAccount, createSession, getSessionAndUser, deleteSession } = adapter;\n    let session = null;\n    let user = null;\n    let isNewUser = false;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (sessionToken) {\n        if (useJwtSession) {\n            try {\n                const salt = options.cookies.sessionToken.name;\n                session = await jwt.decode({\n                    ...jwt,\n                    token: sessionToken,\n                    salt\n                });\n                if (session && \"sub\" in session && session.sub) {\n                    user = await getUser(session.sub);\n                }\n            } catch  {\n            // If session can't be verified, treat as no session\n            }\n        } else {\n            const userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession) {\n                session = userAndSession.session;\n                user = userAndSession.user;\n            }\n        }\n    }\n    if (account.type === \"email\") {\n        // If signing in with an email, check if an account with the same email address exists already\n        const userByEmail = await getUserByEmail(profile.email);\n        if (userByEmail) {\n            // If they are not already signed in as the same user, this flow will\n            // sign them out of the current session and sign them in as the new user\n            if (user?.id !== userByEmail.id && !useJwtSession && sessionToken) {\n                // Delete existing session if they are currently signed in as another user.\n                // This will switch user accounts for the session in cases where the user was\n                // already logged in with a different account.\n                await deleteSession(sessionToken);\n            }\n            // Update emailVerified property on the user object\n            user = await updateUser({\n                id: userByEmail.id,\n                emailVerified: new Date()\n            });\n            await events.updateUser?.({\n                user\n            });\n        } else {\n            // Create user account if there isn't one for the email address already\n            user = await createUser({\n                ...profile,\n                emailVerified: new Date()\n            });\n            await events.createUser?.({\n                user\n            });\n            isNewUser = true;\n        }\n        // Create new session\n        session = useJwtSession ? {} : await createSession({\n            sessionToken: generateSessionToken(),\n            userId: user.id,\n            expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge)\n        });\n        return {\n            session,\n            user,\n            isNewUser\n        };\n    } else if (account.type === \"webauthn\") {\n        // Check if the account exists\n        const userByAccount = await getUserByAccount({\n            providerAccountId: account.providerAccountId,\n            provider: account.provider\n        });\n        if (userByAccount) {\n            if (user) {\n                // If the user is already signed in with this account, we don't need to do anything\n                if (userByAccount.id === user.id) {\n                    const currentAccount = {\n                        ...account,\n                        userId: user.id\n                    };\n                    return {\n                        session,\n                        user,\n                        isNewUser,\n                        account: currentAccount\n                    };\n                }\n                // If the user is currently signed in, but the new account they are signing in\n                // with is already associated with another user, then we cannot link them\n                // and need to return an error.\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AccountNotLinked(\"The account is already associated with another user\", {\n                    provider: account.provider\n                });\n            }\n            // If there is no active session, but the account being signed in with is already\n            // associated with a valid user then create session to sign the user in.\n            session = useJwtSession ? {} : await createSession({\n                sessionToken: generateSessionToken(),\n                userId: userByAccount.id,\n                expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge)\n            });\n            const currentAccount = {\n                ...account,\n                userId: userByAccount.id\n            };\n            return {\n                session,\n                user: userByAccount,\n                isNewUser,\n                account: currentAccount\n            };\n        } else {\n            // If the account doesn't exist, we'll create it\n            if (user) {\n                // If the user is already signed in and the account isn't already associated\n                // with another user account then we can go ahead and link the accounts safely.\n                await linkAccount({\n                    ...account,\n                    userId: user.id\n                });\n                await events.linkAccount?.({\n                    user,\n                    account,\n                    profile\n                });\n                // As they are already signed in, we don't need to do anything after linking them\n                const currentAccount = {\n                    ...account,\n                    userId: user.id\n                };\n                return {\n                    session,\n                    user,\n                    isNewUser,\n                    account: currentAccount\n                };\n            }\n            // If the user is not signed in and it looks like a new account then we\n            // check there also isn't an user account already associated with the same\n            // email address as the one in the request.\n            const userByEmail = profile.email ? await getUserByEmail(profile.email) : null;\n            if (userByEmail) {\n                // We don't trust user-provided email addresses, so we don't want to link accounts\n                // if the email address associated with the new account is already associated with\n                // an existing account.\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AccountNotLinked(\"Another account already exists with the same e-mail address\", {\n                    provider: account.provider\n                });\n            } else {\n                // If the current user is not logged in and the profile isn't linked to any user\n                // accounts (by email or provider account id)...\n                //\n                // If no account matching the same [provider].id or .email exists, we can\n                // create a new account for the user, link it to the OAuth account and\n                // create a new session for them so they are signed in with it.\n                user = await createUser({\n                    ...profile\n                });\n            }\n            await events.createUser?.({\n                user\n            });\n            await linkAccount({\n                ...account,\n                userId: user.id\n            });\n            await events.linkAccount?.({\n                user,\n                account,\n                profile\n            });\n            session = useJwtSession ? {} : await createSession({\n                sessionToken: generateSessionToken(),\n                userId: user.id,\n                expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge)\n            });\n            const currentAccount = {\n                ...account,\n                userId: user.id\n            };\n            return {\n                session,\n                user,\n                isNewUser: true,\n                account: currentAccount\n            };\n        }\n    }\n    // If signing in with OAuth account, check to see if the account exists already\n    const userByAccount = await getUserByAccount({\n        providerAccountId: account.providerAccountId,\n        provider: account.provider\n    });\n    if (userByAccount) {\n        if (user) {\n            // If the user is already signed in with this account, we don't need to do anything\n            if (userByAccount.id === user.id) {\n                return {\n                    session,\n                    user,\n                    isNewUser\n                };\n            }\n            // If the user is currently signed in, but the new account they are signing in\n            // with is already associated with another user, then we cannot link them\n            // and need to return an error.\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.OAuthAccountNotLinked(\"The account is already associated with another user\", {\n                provider: account.provider\n            });\n        }\n        // If there is no active session, but the account being signed in with is already\n        // associated with a valid user then create session to sign the user in.\n        session = useJwtSession ? {} : await createSession({\n            sessionToken: generateSessionToken(),\n            userId: userByAccount.id,\n            expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge)\n        });\n        return {\n            session,\n            user: userByAccount,\n            isNewUser\n        };\n    } else {\n        const { provider: p } = options;\n        const { type, provider, providerAccountId, userId, ...tokenSet } = account;\n        const defaults = {\n            providerAccountId,\n            provider,\n            type,\n            userId\n        };\n        account = Object.assign(p.account(tokenSet) ?? {}, defaults);\n        if (user) {\n            // If the user is already signed in and the OAuth account isn't already associated\n            // with another user account then we can go ahead and link the accounts safely.\n            await linkAccount({\n                ...account,\n                userId: user.id\n            });\n            await events.linkAccount?.({\n                user,\n                account,\n                profile\n            });\n            // As they are already signed in, we don't need to do anything after linking them\n            return {\n                session,\n                user,\n                isNewUser\n            };\n        }\n        // If the user is not signed in and it looks like a new OAuth account then we\n        // check there also isn't an user account already associated with the same\n        // email address as the one in the OAuth profile.\n        //\n        // This step is often overlooked in OAuth implementations, but covers the following cases:\n        //\n        // 1. It makes it harder for someone to accidentally create two accounts.\n        //    e.g. by signin in with email, then again with an oauth account connected to the same email.\n        // 2. It makes it harder to hijack a user account using a 3rd party OAuth account.\n        //    e.g. by creating an oauth account then changing the email address associated with it.\n        //\n        // It's quite common for services to automatically link accounts in this case, but it's\n        // better practice to require the user to sign in *then* link accounts to be sure\n        // someone is not exploiting a problem with a third party OAuth service.\n        //\n        // OAuth providers should require email address verification to prevent this, but in\n        // practice that is not always the case; this helps protect against that.\n        const userByEmail = profile.email ? await getUserByEmail(profile.email) : null;\n        if (userByEmail) {\n            const provider = options.provider;\n            if (provider?.allowDangerousEmailAccountLinking) {\n                // If you trust the oauth provider to correctly verify email addresses, you can opt-in to\n                // account linking even when the user is not signed-in.\n                user = userByEmail;\n            } else {\n                // We end up here when we don't have an account with the same [provider].id *BUT*\n                // we do already have an account with the same email address as the one in the\n                // OAuth profile the user has just tried to sign in with.\n                //\n                // We don't want to have two accounts with the same email address, and we don't\n                // want to link them in case it's not safe to do so, so instead we prompt the user\n                // to sign in via email to verify their identity and then link the accounts.\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.OAuthAccountNotLinked(\"Another account already exists with the same e-mail address\", {\n                    provider: account.provider\n                });\n            }\n        } else {\n            // If the current user is not logged in and the profile isn't linked to any user\n            // accounts (by email or provider account id)...\n            //\n            // If no account matching the same [provider].id or .email exists, we can\n            // create a new account for the user, link it to the OAuth account and\n            // create a new session for them so they are signed in with it.\n            user = await createUser({\n                ...profile,\n                emailVerified: null\n            });\n        }\n        await events.createUser?.({\n            user\n        });\n        await linkAccount({\n            ...account,\n            userId: user.id\n        });\n        await events.linkAccount?.({\n            user,\n            account,\n            profile\n        });\n        session = useJwtSession ? {} : await createSession({\n            sessionToken: generateSessionToken(),\n            userId: user.id,\n            expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge)\n        });\n        return {\n            session,\n            user,\n            isNewUser: true\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/callback/handle-login.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/callback/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callback: () => (/* binding */ callback)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _handle_login_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handle-login.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/callback/handle-login.js\");\n/* harmony import */ var _oauth_callback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./oauth/callback.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/callback.js\");\n/* harmony import */ var _oauth_checks_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./oauth/checks.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var _utils_web_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/web.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/webauthn-utils.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/webauthn-utils.js\");\n// TODO: Make this file smaller\n\n\n\n\n\n\n/** Handle callbacks from login services */ async function callback(request, options, sessionStore, cookies) {\n    if (!options.provider) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidProvider(\"Callback route called without provider\");\n    const { query, body, method, headers } = request;\n    const { provider, adapter, url, callbackUrl, pages, jwt, events, callbacks, session: { strategy: sessionStrategy, maxAge: sessionMaxAge }, logger } = options;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    try {\n        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n            const { proxyRedirect, randomState } = (0,_oauth_checks_js__WEBPACK_IMPORTED_MODULE_3__.handleState)(query, provider, options.isOnRedirectProxy);\n            if (proxyRedirect) {\n                logger.debug(\"proxy redirect\", {\n                    proxyRedirect,\n                    randomState\n                });\n                return {\n                    redirect: proxyRedirect\n                };\n            }\n            const authorizationResult = await (0,_oauth_callback_js__WEBPACK_IMPORTED_MODULE_2__.handleOAuth)(query, request.cookies, options, randomState);\n            if (authorizationResult.cookies.length) {\n                cookies.push(...authorizationResult.cookies);\n            }\n            logger.debug(\"authorization result\", authorizationResult);\n            const { user: userFromProvider, account, profile: OAuthProfile } = authorizationResult;\n            // If we don't have a profile object then either something went wrong\n            // or the user cancelled signing in. We don't know which, so we just\n            // direct the user to the signin page for now. We could do something\n            // else in future.\n            // TODO: Handle user cancelling signin\n            if (!userFromProvider || !account || !OAuthProfile) {\n                return {\n                    redirect: `${url}/signin`,\n                    cookies\n                };\n            }\n            // Check if user is allowed to sign in\n            // Attempt to get Profile from OAuth provider details before invoking\n            // signIn callback - but if no user object is returned, that is fine\n            // (that just means it's a new user signing in for the first time).\n            let userByAccount;\n            if (adapter) {\n                const { getUserByAccount } = adapter;\n                userByAccount = await getUserByAccount({\n                    providerAccountId: account.providerAccountId,\n                    provider: provider.id\n                });\n            }\n            const redirect = await handleAuthorized({\n                user: userByAccount ?? userFromProvider,\n                account,\n                profile: OAuthProfile\n            }, options);\n            if (redirect) return {\n                redirect,\n                cookies\n            };\n            const { user, session, isNewUser } = await (0,_handle_login_js__WEBPACK_IMPORTED_MODULE_1__.handleLoginOrRegister)(sessionStore.value, userFromProvider, account, options);\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: user.name,\n                    email: user.email,\n                    picture: user.image,\n                    sub: user.id?.toString()\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user,\n                    account,\n                    profile: OAuthProfile,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\"\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                } else {\n                    const salt = options.cookies.sessionToken.name;\n                    // Encode token\n                    const newToken = await jwt.encode({\n                        ...jwt,\n                        token,\n                        salt\n                    });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            } else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires\n                    }\n                });\n            }\n            await events.signIn?.({\n                user,\n                account,\n                profile: OAuthProfile,\n                isNewUser\n            });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({\n                        callbackUrl\n                    })}`,\n                    cookies\n                };\n            }\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        } else if (provider.type === \"email\") {\n            const token = query?.token;\n            const identifier = query?.email;\n            if (!token || !identifier) {\n                const e = new TypeError(\"Missing token or email. The sign-in URL was manually opened without token/identifier or the link was not sent correctly in the email.\", {\n                    cause: {\n                        hasToken: !!token,\n                        hasEmail: !!identifier\n                    }\n                });\n                e.name = \"Configuration\";\n                throw e;\n            }\n            const secret = provider.secret ?? options.secret;\n            // @ts-expect-error -- Verified in `assertConfig`.\n            const invite = await adapter.useVerificationToken({\n                identifier,\n                token: await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_4__.createHash)(`${token}${secret}`)\n            });\n            const hasInvite = !!invite;\n            const expired = invite ? invite.expires.valueOf() < Date.now() : undefined;\n            const invalidInvite = !hasInvite || expired;\n            if (invalidInvite) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.Verification({\n                hasInvite,\n                expired\n            });\n            const user = await adapter.getUserByEmail(identifier) ?? {\n                id: crypto.randomUUID(),\n                email: identifier,\n                emailVerified: null\n            };\n            const account = {\n                providerAccountId: user.email,\n                userId: user.id,\n                type: \"email\",\n                provider: provider.id\n            };\n            const redirect = await handleAuthorized({\n                user,\n                account\n            }, options);\n            if (redirect) return {\n                redirect,\n                cookies\n            };\n            // Sign user in\n            const { user: loggedInUser, session, isNewUser } = await (0,_handle_login_js__WEBPACK_IMPORTED_MODULE_1__.handleLoginOrRegister)(sessionStore.value, user, account, options);\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: loggedInUser.name,\n                    email: loggedInUser.email,\n                    picture: loggedInUser.image,\n                    sub: loggedInUser.id?.toString()\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user: loggedInUser,\n                    account,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\"\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                } else {\n                    const salt = options.cookies.sessionToken.name;\n                    // Encode token\n                    const newToken = await jwt.encode({\n                        ...jwt,\n                        token,\n                        salt\n                    });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            } else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires\n                    }\n                });\n            }\n            await events.signIn?.({\n                user: loggedInUser,\n                account,\n                isNewUser\n            });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({\n                        callbackUrl\n                    })}`,\n                    cookies\n                };\n            }\n            // Callback URL is already verified at this point, so safe to use if specified\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        } else if (provider.type === \"credentials\" && method === \"POST\") {\n            const credentials = body ?? {};\n            // TODO: Forward the original request as is, instead of reconstructing it\n            Object.entries(query ?? {}).forEach(([k, v])=>url.searchParams.set(k, v));\n            const userFromAuthorize = await provider.authorize(credentials, // prettier-ignore\n            new Request(url, {\n                headers,\n                method,\n                body: JSON.stringify(body)\n            }));\n            const user = userFromAuthorize;\n            if (!user) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.CredentialsSignin();\n            else user.id = user.id?.toString() ?? crypto.randomUUID();\n            const account = {\n                providerAccountId: user.id,\n                type: \"credentials\",\n                provider: provider.id\n            };\n            const redirect = await handleAuthorized({\n                user,\n                account,\n                credentials\n            }, options);\n            if (redirect) return {\n                redirect,\n                cookies\n            };\n            const defaultToken = {\n                name: user.name,\n                email: user.email,\n                picture: user.image,\n                sub: user.id\n            };\n            const token = await callbacks.jwt({\n                token: defaultToken,\n                user,\n                account,\n                isNewUser: false,\n                trigger: \"signIn\"\n            });\n            // Clear cookies if token is null\n            if (token === null) {\n                cookies.push(...sessionStore.clean());\n            } else {\n                const salt = options.cookies.sessionToken.name;\n                // Encode token\n                const newToken = await jwt.encode({\n                    ...jwt,\n                    token,\n                    salt\n                });\n                // Set cookie expiry date\n                const cookieExpires = new Date();\n                cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: cookieExpires\n                });\n                cookies.push(...sessionCookies);\n            }\n            await events.signIn?.({\n                user,\n                account\n            });\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        } else if (provider.type === \"webauthn\" && method === \"POST\") {\n            // Get callback action from request. It should be either \"authenticate\" or \"register\"\n            const action = request.body?.action;\n            if (typeof action !== \"string\" || action !== \"authenticate\" && action !== \"register\") {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Invalid action parameter\");\n            }\n            // Return an error if the adapter is missing or if the provider\n            // is not a webauthn provider.\n            const localOptions = (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_5__.assertInternalOptionsWebAuthn)(options);\n            // Verify request to get user, account and authenticator\n            let user;\n            let account;\n            let authenticator;\n            switch(action){\n                case \"authenticate\":\n                    {\n                        const verified = await (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_5__.verifyAuthenticate)(localOptions, request, cookies);\n                        user = verified.user;\n                        account = verified.account;\n                        break;\n                    }\n                case \"register\":\n                    {\n                        const verified = await (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_5__.verifyRegister)(options, request, cookies);\n                        user = verified.user;\n                        account = verified.account;\n                        authenticator = verified.authenticator;\n                        break;\n                    }\n            }\n            // Check if user is allowed to sign in\n            await handleAuthorized({\n                user,\n                account\n            }, options);\n            // Sign user in, creating them and their account if needed\n            const { user: loggedInUser, isNewUser, session, account: currentAccount } = await (0,_handle_login_js__WEBPACK_IMPORTED_MODULE_1__.handleLoginOrRegister)(sessionStore.value, user, account, options);\n            if (!currentAccount) {\n                // This is mostly for type checking. It should never actually happen.\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Error creating or finding account\");\n            }\n            // Create new authenticator if needed\n            if (authenticator && loggedInUser.id) {\n                await localOptions.adapter.createAuthenticator({\n                    ...authenticator,\n                    userId: loggedInUser.id\n                });\n            }\n            // Do the session registering dance\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: loggedInUser.name,\n                    email: loggedInUser.email,\n                    picture: loggedInUser.image,\n                    sub: loggedInUser.id?.toString()\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user: loggedInUser,\n                    account: currentAccount,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\"\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                } else {\n                    const salt = options.cookies.sessionToken.name;\n                    // Encode token\n                    const newToken = await jwt.encode({\n                        ...jwt,\n                        token,\n                        salt\n                    });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            } else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires\n                    }\n                });\n            }\n            await events.signIn?.({\n                user: loggedInUser,\n                account: currentAccount,\n                isNewUser\n            });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({\n                        callbackUrl\n                    })}`,\n                    cookies\n                };\n            }\n            // Callback URL is already verified at this point, so safe to use if specified\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        }\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidProvider(`Callback for provider type (${provider.type}) is not supported`);\n    } catch (e) {\n        if (e instanceof _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError) throw e;\n        const error = new _errors_js__WEBPACK_IMPORTED_MODULE_0__.CallbackRouteError(e, {\n            provider: provider.id\n        });\n        logger.debug(\"callback route error details\", {\n            method,\n            query,\n            body\n        });\n        throw error;\n    }\n}\nasync function handleAuthorized(params, config) {\n    let authorized;\n    const { signIn, redirect } = config.callbacks;\n    try {\n        authorized = await signIn(params);\n    } catch (e) {\n        if (e instanceof _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError) throw e;\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AccessDenied(e);\n    }\n    if (!authorized) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AccessDenied(\"AccessDenied\");\n    if (typeof authorized !== \"string\") return;\n    return await redirect({\n        url: authorized,\n        baseUrl: config.url.origin\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/callback/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/callback.js":
/*!************************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/oauth/callback.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserAndAccount: () => (/* binding */ getUserAndAccount),\n/* harmony export */   handleOAuth: () => (/* binding */ handleOAuth)\n/* harmony export */ });\n/* harmony import */ var _checks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./checks.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! oauth4webapi */ \"(action-browser)/./node_modules/oauth4webapi/build/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n\n\n\n/**\n * Handles the following OAuth steps.\n * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n * https://openid.net/specs/openid-connect-core-1_0.html#UserInfoRequest\n *\n * @note Although requesting userinfo is not required by the OAuth2.0 spec,\n * we fetch it anyway. This is because we always want a user profile.\n */ async function handleOAuth(query, cookies, options, randomState) {\n    const { logger, provider } = options;\n    let as;\n    const { token, userinfo } = provider;\n    // Falls back to authjs.dev if the user only passed params\n    if ((!token?.url || token.url.host === \"authjs.dev\") && (!userinfo?.url || userinfo.url.host === \"authjs.dev\")) {\n        // We assume that issuer is always defined as this has been asserted earlier\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const issuer = new URL(provider.issuer);\n        const discoveryResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.discoveryRequest(issuer);\n        const discoveredAs = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.processDiscoveryResponse(issuer, discoveryResponse);\n        if (!discoveredAs.token_endpoint) throw new TypeError(\"TODO: Authorization server did not provide a token endpoint.\");\n        if (!discoveredAs.userinfo_endpoint) throw new TypeError(\"TODO: Authorization server did not provide a userinfo endpoint.\");\n        as = discoveredAs;\n    } else {\n        as = {\n            issuer: provider.issuer ?? \"https://authjs.dev\",\n            token_endpoint: token?.url.toString(),\n            userinfo_endpoint: userinfo?.url.toString()\n        };\n    }\n    const client = {\n        client_id: provider.clientId,\n        client_secret: provider.clientSecret,\n        ...provider.client\n    };\n    const resCookies = [];\n    const state = await _checks_js__WEBPACK_IMPORTED_MODULE_0__.state.use(cookies, resCookies, options, randomState);\n    const codeGrantParams = oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.validateAuthResponse(as, client, new URLSearchParams(query), provider.checks.includes(\"state\") ? state : oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.skipStateCheck);\n    /** https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1 */ if (oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.isOAuth2Error(codeGrantParams)) {\n        const cause = {\n            providerId: provider.id,\n            ...codeGrantParams\n        };\n        logger.debug(\"OAuthCallbackError\", cause);\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.OAuthCallbackError(\"OAuth Provider returned an error\", cause);\n    }\n    const codeVerifier = await _checks_js__WEBPACK_IMPORTED_MODULE_0__.pkce.use(cookies, resCookies, options);\n    let redirect_uri = provider.callbackUrl;\n    if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {\n        redirect_uri = provider.redirectProxyUrl;\n    }\n    let codeGrantResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.authorizationCodeGrantRequest(as, client, codeGrantParams, redirect_uri, codeVerifier ?? \"auth\" // TODO: review fallback code verifier\n    );\n    if (provider.token?.conform) {\n        codeGrantResponse = await provider.token.conform(codeGrantResponse.clone()) ?? codeGrantResponse;\n    }\n    let challenges;\n    if (challenges = oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.parseWwwAuthenticateChallenges(codeGrantResponse)) {\n        for (const challenge of challenges){\n            console.log(\"challenge\", challenge);\n        }\n        throw new Error(\"TODO: Handle www-authenticate challenges as needed\");\n    }\n    let profile = {};\n    let tokens;\n    if (provider.type === \"oidc\") {\n        const nonce = await _checks_js__WEBPACK_IMPORTED_MODULE_0__.nonce.use(cookies, resCookies, options);\n        const result = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.processAuthorizationCodeOpenIDResponse(as, client, codeGrantResponse, nonce ?? oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.expectNoNonce);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.isOAuth2Error(result)) {\n            console.log(\"error\", result);\n            throw new Error(\"TODO: Handle OIDC response body error\");\n        }\n        profile = oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.getValidatedIdTokenClaims(result);\n        tokens = result;\n    } else {\n        tokens = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.processAuthorizationCodeOAuth2Response(as, client, codeGrantResponse);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.isOAuth2Error(tokens)) {\n            console.log(\"error\", tokens);\n            throw new Error(\"TODO: Handle OAuth 2.0 response body error\");\n        }\n        if (userinfo?.request) {\n            const _profile = await userinfo.request({\n                tokens,\n                provider\n            });\n            if (_profile instanceof Object) profile = _profile;\n        } else if (userinfo?.url) {\n            const userinfoResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.userInfoRequest(as, client, tokens.access_token);\n            profile = await userinfoResponse.json();\n        } else {\n            throw new TypeError(\"No userinfo endpoint configured\");\n        }\n    }\n    if (tokens.expires_in) {\n        tokens.expires_at = Math.floor(Date.now() / 1000) + Number(tokens.expires_in);\n    }\n    const profileResult = await getUserAndAccount(profile, provider, tokens, logger);\n    return {\n        ...profileResult,\n        profile,\n        cookies: resCookies\n    };\n}\n/**\n * Returns the user and account that is going to be created in the database.\n * @internal\n */ async function getUserAndAccount(OAuthProfile, provider, tokens, logger) {\n    try {\n        const userFromProfile = await provider.profile(OAuthProfile, tokens);\n        const user = {\n            ...userFromProfile,\n            id: crypto.randomUUID(),\n            email: userFromProfile.email?.toLowerCase()\n        };\n        return {\n            user,\n            account: {\n                ...tokens,\n                provider: provider.id,\n                type: provider.type,\n                providerAccountId: userFromProfile.id ?? crypto.randomUUID()\n            }\n        };\n    } catch (e) {\n        // If we didn't get a response either there was a problem with the provider\n        // response *or* the user cancelled the action with the provider.\n        //\n        // Unfortunately, we can't tell which - at least not in a way that works for\n        // all providers, so we return an empty object; the user should then be\n        // redirected back to the sign up page. We log the error to help developers\n        // who might be trying to debug this when configuring a new provider.\n        logger.debug(\"getProfile error details\", OAuthProfile);\n        logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_1__.OAuthProfileParseError(e, {\n            provider: provider.id\n        }));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/callback.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/oauth/checks.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeState: () => (/* binding */ decodeState),\n/* harmony export */   handleState: () => (/* binding */ handleState),\n/* harmony export */   nonce: () => (/* binding */ nonce),\n/* harmony export */   pkce: () => (/* binding */ pkce),\n/* harmony export */   signCookie: () => (/* binding */ signCookie),\n/* harmony export */   state: () => (/* binding */ state),\n/* harmony export */   webauthnChallenge: () => (/* binding */ webauthnChallenge)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jose */ \"(action-browser)/./node_modules/jose/dist/node/esm/index.js\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! oauth4webapi */ \"(action-browser)/./node_modules/oauth4webapi/build/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _jwt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../jwt.js */ \"(action-browser)/./node_modules/@auth/core/jwt.js\");\n\n\n\n\n/** Returns a signed cookie. */ async function signCookie(type, value, maxAge, options, data) {\n    const { cookies, logger } = options;\n    logger.debug(`CREATE_${type.toUpperCase()}`, {\n        value,\n        maxAge\n    });\n    const expires = new Date();\n    expires.setTime(expires.getTime() + maxAge * 1000);\n    const token = {\n        value\n    };\n    if (type === \"state\" && data) token.data = data;\n    const name = cookies[type].name;\n    return {\n        name,\n        value: await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.encode)({\n            ...options.jwt,\n            maxAge,\n            token,\n            salt: name\n        }),\n        options: {\n            ...cookies[type].options,\n            expires\n        }\n    };\n}\nconst PKCE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nconst pkce = {\n    async create (options) {\n        const code_verifier = oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.generateRandomCodeVerifier();\n        const value = await oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.calculatePKCECodeChallenge(code_verifier);\n        const maxAge = PKCE_MAX_AGE;\n        const cookie = await signCookie(\"pkceCodeVerifier\", code_verifier, maxAge, options);\n        return {\n            cookie,\n            value\n        };\n    },\n    /**\n     * Returns code_verifier if the provider is configured to use PKCE,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the code_verifier is missing or invalid.\n     * @see https://www.rfc-editor.org/rfc/rfc7636\n     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#pkce\n     */ async use (cookies, resCookies, options) {\n        const { provider } = options;\n        if (!provider?.checks?.includes(\"pkce\")) return;\n        const codeVerifier = cookies?.[options.cookies.pkceCodeVerifier.name];\n        if (!codeVerifier) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"PKCE code_verifier cookie was missing.\");\n        const value = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: codeVerifier,\n            salt: options.cookies.pkceCodeVerifier.name\n        });\n        if (!value?.value) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"PKCE code_verifier value could not be parsed.\");\n        // Clear the pkce code verifier cookie after use\n        resCookies.push({\n            name: options.cookies.pkceCodeVerifier.name,\n            value: \"\",\n            options: {\n                ...options.cookies.pkceCodeVerifier.options,\n                maxAge: 0\n            }\n        });\n        return value.value;\n    }\n};\nconst STATE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nfunction decodeState(value) {\n    try {\n        const decoder = new TextDecoder();\n        return JSON.parse(decoder.decode(jose__WEBPACK_IMPORTED_MODULE_0__.base64url.decode(value)));\n    } catch  {}\n}\nconst state = {\n    async create (options, data) {\n        const { provider } = options;\n        if (!provider.checks.includes(\"state\")) {\n            if (data) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State data was provided but the provider is not configured to use state.\");\n            }\n            return;\n        }\n        const encodedState = jose__WEBPACK_IMPORTED_MODULE_0__.base64url.encode(JSON.stringify({\n            ...data,\n            random: oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.generateRandomState()\n        }));\n        const maxAge = STATE_MAX_AGE;\n        const cookie = await signCookie(\"state\", encodedState, maxAge, options, data);\n        return {\n            cookie,\n            value: encodedState\n        };\n    },\n    /**\n     * Returns state if the provider is configured to use state,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the state is missing or invalid.\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-10.12\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n     */ async use (cookies, resCookies, options, paramRandom) {\n        const { provider } = options;\n        if (!provider.checks.includes(\"state\")) return;\n        const state = cookies?.[options.cookies.state.name];\n        if (!state) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State cookie was missing.\");\n        // IDEA: Let the user do something with the returned state\n        const encodedState = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: state,\n            salt: options.cookies.state.name\n        });\n        if (!encodedState?.value) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State (cookie) value could not be parsed.\");\n        const decodedState = decodeState(encodedState.value);\n        if (!decodedState) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State (encoded) value could not be parsed.\");\n        if (decodedState.random !== paramRandom) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(`Random state values did not match. Expected: ${decodedState.random}. Got: ${paramRandom}`);\n        // Clear the state cookie after use\n        resCookies.push({\n            name: options.cookies.state.name,\n            value: \"\",\n            options: {\n                ...options.cookies.state.options,\n                maxAge: 0\n            }\n        });\n        return encodedState.value;\n    }\n};\nconst NONCE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nconst nonce = {\n    async create (options) {\n        if (!options.provider.checks.includes(\"nonce\")) return;\n        const value = oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.generateRandomNonce();\n        const maxAge = NONCE_MAX_AGE;\n        const cookie = await signCookie(\"nonce\", value, maxAge, options);\n        return {\n            cookie,\n            value\n        };\n    },\n    /**\n     * Returns nonce if the provider is configured to use nonce,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the nonce is missing or invalid.\n     * @see https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes\n     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#nonce\n     */ async use (cookies, resCookies, options) {\n        const { provider } = options;\n        if (!provider?.checks?.includes(\"nonce\")) return;\n        const nonce = cookies?.[options.cookies.nonce.name];\n        if (!nonce) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Nonce cookie was missing.\");\n        const value = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: nonce,\n            salt: options.cookies.nonce.name\n        });\n        if (!value?.value) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Nonce value could not be parsed.\");\n        // Clear the nonce cookie after use\n        resCookies.push({\n            name: options.cookies.nonce.name,\n            value: \"\",\n            options: {\n                ...options.cookies.nonce.options,\n                maxAge: 0\n            }\n        });\n        return value.value;\n    }\n};\n/**\n * When the authorization flow contains a state, we check if it's a redirect proxy\n * and if so, we return the random state and the original redirect URL.\n */ function handleState(query, provider, isOnRedirectProxy) {\n    let randomState;\n    let proxyRedirect;\n    if (provider.redirectProxyUrl && !query?.state) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Missing state in query, but required for redirect proxy\");\n    }\n    const state = decodeState(query?.state);\n    randomState = state?.random;\n    if (isOnRedirectProxy) {\n        if (!state?.origin) return {\n            randomState\n        };\n        proxyRedirect = `${state.origin}?${new URLSearchParams(query)}`;\n    }\n    return {\n        randomState,\n        proxyRedirect\n    };\n}\nconst WEBAUTHN_CHALLENGE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nconst webauthnChallenge = {\n    async create (options, challenge, registerData) {\n        const maxAge = WEBAUTHN_CHALLENGE_MAX_AGE;\n        const data = {\n            challenge,\n            registerData\n        };\n        const cookie = await signCookie(\"webauthnChallenge\", JSON.stringify(data), maxAge, options);\n        return {\n            cookie\n        };\n    },\n    /**\n     * Returns challenge if present,\n     */ async use (options, cookies, resCookies) {\n        const challenge = cookies?.[options.cookies.webauthnChallenge.name];\n        if (!challenge) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Challenge cookie missing.\");\n        const value = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: challenge,\n            salt: options.cookies.webauthnChallenge.name\n        });\n        if (!value?.value) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Challenge value could not be parsed.\");\n        // Clear the pkce code verifier cookie after use\n        const cookie = {\n            name: options.cookies.webauthnChallenge.name,\n            value: \"\",\n            options: {\n                ...options.cookies.webauthnChallenge.options,\n                maxAge: 0\n            }\n        };\n        resCookies.push(cookie);\n        return JSON.parse(value.value);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL2NhbGxiYWNrL29hdXRoL2NoZWNrcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUE2QjtBQUNLO0FBQ21CO0FBQ0Q7QUFDcEQsNkJBQTZCLEdBQ3RCLGVBQWVLLFdBQVdDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsSUFBSTtJQUMvRCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsTUFBTSxFQUFFLEdBQUdIO0lBQzVCRyxPQUFPQyxLQUFLLENBQUMsQ0FBQyxPQUFPLEVBQUVQLEtBQUtRLFdBQVcsR0FBRyxDQUFDLEVBQUU7UUFBRVA7UUFBT0M7SUFBTztJQUM3RCxNQUFNTyxVQUFVLElBQUlDO0lBQ3BCRCxRQUFRRSxPQUFPLENBQUNGLFFBQVFHLE9BQU8sS0FBS1YsU0FBUztJQUM3QyxNQUFNVyxRQUFRO1FBQUVaO0lBQU07SUFDdEIsSUFBSUQsU0FBUyxXQUFXSSxNQUNwQlMsTUFBTVQsSUFBSSxHQUFHQTtJQUNqQixNQUFNVSxPQUFPVCxPQUFPLENBQUNMLEtBQUssQ0FBQ2MsSUFBSTtJQUMvQixPQUFPO1FBQ0hBO1FBQ0FiLE9BQU8sTUFBTUgsK0NBQU1BLENBQUM7WUFBRSxHQUFHSyxRQUFRWSxHQUFHO1lBQUViO1lBQVFXO1lBQU9HLE1BQU1GO1FBQUs7UUFDaEVYLFNBQVM7WUFBRSxHQUFHRSxPQUFPLENBQUNMLEtBQUssQ0FBQ0csT0FBTztZQUFFTTtRQUFRO0lBQ2pEO0FBQ0o7QUFDQSxNQUFNUSxlQUFlLEtBQUssSUFBSSx3QkFBd0I7QUFDL0MsTUFBTUMsT0FBTztJQUNoQixNQUFNQyxRQUFPaEIsT0FBTztRQUNoQixNQUFNaUIsZ0JBQWdCekIsb0VBQTRCO1FBQ2xELE1BQU1NLFFBQVEsTUFBTU4sb0VBQTRCLENBQUN5QjtRQUNqRCxNQUFNbEIsU0FBU2U7UUFDZixNQUFNTSxTQUFTLE1BQU14QixXQUFXLG9CQUFvQnFCLGVBQWVsQixRQUFRQztRQUMzRSxPQUFPO1lBQUVvQjtZQUFRdEI7UUFBTTtJQUMzQjtJQUNBOzs7Ozs7S0FNQyxHQUNELE1BQU11QixLQUFJbkIsT0FBTyxFQUFFb0IsVUFBVSxFQUFFdEIsT0FBTztRQUNsQyxNQUFNLEVBQUV1QixRQUFRLEVBQUUsR0FBR3ZCO1FBQ3JCLElBQUksQ0FBQ3VCLFVBQVVDLFFBQVFDLFNBQVMsU0FDNUI7UUFDSixNQUFNQyxlQUFleEIsU0FBUyxDQUFDRixRQUFRRSxPQUFPLENBQUN5QixnQkFBZ0IsQ0FBQ2hCLElBQUksQ0FBQztRQUNyRSxJQUFJLENBQUNlLGNBQ0QsTUFBTSxJQUFJakMsb0RBQVlBLENBQUM7UUFDM0IsTUFBTUssUUFBUSxNQUFNSiwrQ0FBTUEsQ0FBQztZQUN2QixHQUFHTSxRQUFRWSxHQUFHO1lBQ2RGLE9BQU9nQjtZQUNQYixNQUFNYixRQUFRRSxPQUFPLENBQUN5QixnQkFBZ0IsQ0FBQ2hCLElBQUk7UUFDL0M7UUFDQSxJQUFJLENBQUNiLE9BQU9BLE9BQ1IsTUFBTSxJQUFJTCxvREFBWUEsQ0FBQztRQUMzQixnREFBZ0Q7UUFDaEQ2QixXQUFXTSxJQUFJLENBQUM7WUFDWmpCLE1BQU1YLFFBQVFFLE9BQU8sQ0FBQ3lCLGdCQUFnQixDQUFDaEIsSUFBSTtZQUMzQ2IsT0FBTztZQUNQRSxTQUFTO2dCQUFFLEdBQUdBLFFBQVFFLE9BQU8sQ0FBQ3lCLGdCQUFnQixDQUFDM0IsT0FBTztnQkFBRUQsUUFBUTtZQUFFO1FBQ3RFO1FBQ0EsT0FBT0QsTUFBTUEsS0FBSztJQUN0QjtBQUNKLEVBQUU7QUFDRixNQUFNK0IsZ0JBQWdCLEtBQUssSUFBSSx3QkFBd0I7QUFDaEQsU0FBU0MsWUFBWWhDLEtBQUs7SUFDN0IsSUFBSTtRQUNBLE1BQU1pQyxVQUFVLElBQUlDO1FBQ3BCLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ0gsUUFBUXJDLE1BQU0sQ0FBQ0gsMkNBQWMsQ0FBQ0csTUFBTSxDQUFDSTtJQUMzRCxFQUNBLE9BQU0sQ0FBRTtBQUNaO0FBQ08sTUFBTXNDLFFBQVE7SUFDakIsTUFBTXBCLFFBQU9oQixPQUFPLEVBQUVDLElBQUk7UUFDdEIsTUFBTSxFQUFFc0IsUUFBUSxFQUFFLEdBQUd2QjtRQUNyQixJQUFJLENBQUN1QixTQUFTQyxNQUFNLENBQUNDLFFBQVEsQ0FBQyxVQUFVO1lBQ3BDLElBQUl4QixNQUFNO2dCQUNOLE1BQU0sSUFBSVIsb0RBQVlBLENBQUM7WUFDM0I7WUFDQTtRQUNKO1FBQ0EsTUFBTTRDLGVBQWU5QywyQ0FBYyxDQUFDSSxNQUFNLENBQUNzQyxLQUFLSyxTQUFTLENBQUM7WUFBRSxHQUFHckMsSUFBSTtZQUFFc0MsUUFBUS9DLDZEQUFxQjtRQUFHO1FBQ3JHLE1BQU1PLFNBQVM4QjtRQUNmLE1BQU1ULFNBQVMsTUFBTXhCLFdBQVcsU0FBU3lDLGNBQWN0QyxRQUFRQyxTQUFTQztRQUN4RSxPQUFPO1lBQUVtQjtZQUFRdEIsT0FBT3VDO1FBQWE7SUFDekM7SUFDQTs7Ozs7O0tBTUMsR0FDRCxNQUFNaEIsS0FBSW5CLE9BQU8sRUFBRW9CLFVBQVUsRUFBRXRCLE9BQU8sRUFBRXlDLFdBQVc7UUFDL0MsTUFBTSxFQUFFbEIsUUFBUSxFQUFFLEdBQUd2QjtRQUNyQixJQUFJLENBQUN1QixTQUFTQyxNQUFNLENBQUNDLFFBQVEsQ0FBQyxVQUMxQjtRQUNKLE1BQU1XLFFBQVFsQyxTQUFTLENBQUNGLFFBQVFFLE9BQU8sQ0FBQ2tDLEtBQUssQ0FBQ3pCLElBQUksQ0FBQztRQUNuRCxJQUFJLENBQUN5QixPQUNELE1BQU0sSUFBSTNDLG9EQUFZQSxDQUFDO1FBQzNCLDBEQUEwRDtRQUMxRCxNQUFNNEMsZUFBZSxNQUFNM0MsK0NBQU1BLENBQUM7WUFDOUIsR0FBR00sUUFBUVksR0FBRztZQUNkRixPQUFPMEI7WUFDUHZCLE1BQU1iLFFBQVFFLE9BQU8sQ0FBQ2tDLEtBQUssQ0FBQ3pCLElBQUk7UUFDcEM7UUFDQSxJQUFJLENBQUMwQixjQUFjdkMsT0FDZixNQUFNLElBQUlMLG9EQUFZQSxDQUFDO1FBQzNCLE1BQU1pRCxlQUFlWixZQUFZTyxhQUFhdkMsS0FBSztRQUNuRCxJQUFJLENBQUM0QyxjQUNELE1BQU0sSUFBSWpELG9EQUFZQSxDQUFDO1FBQzNCLElBQUlpRCxhQUFhSCxNQUFNLEtBQUtFLGFBQ3hCLE1BQU0sSUFBSWhELG9EQUFZQSxDQUFDLENBQUMsNkNBQTZDLEVBQUVpRCxhQUFhSCxNQUFNLENBQUMsT0FBTyxFQUFFRSxZQUFZLENBQUM7UUFDckgsbUNBQW1DO1FBQ25DbkIsV0FBV00sSUFBSSxDQUFDO1lBQ1pqQixNQUFNWCxRQUFRRSxPQUFPLENBQUNrQyxLQUFLLENBQUN6QixJQUFJO1lBQ2hDYixPQUFPO1lBQ1BFLFNBQVM7Z0JBQUUsR0FBR0EsUUFBUUUsT0FBTyxDQUFDa0MsS0FBSyxDQUFDcEMsT0FBTztnQkFBRUQsUUFBUTtZQUFFO1FBQzNEO1FBQ0EsT0FBT3NDLGFBQWF2QyxLQUFLO0lBQzdCO0FBQ0osRUFBRTtBQUNGLE1BQU02QyxnQkFBZ0IsS0FBSyxJQUFJLHdCQUF3QjtBQUNoRCxNQUFNQyxRQUFRO0lBQ2pCLE1BQU01QixRQUFPaEIsT0FBTztRQUNoQixJQUFJLENBQUNBLFFBQVF1QixRQUFRLENBQUNDLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDLFVBQ2xDO1FBQ0osTUFBTTNCLFFBQVFOLDZEQUFxQjtRQUNuQyxNQUFNTyxTQUFTNEM7UUFDZixNQUFNdkIsU0FBUyxNQUFNeEIsV0FBVyxTQUFTRSxPQUFPQyxRQUFRQztRQUN4RCxPQUFPO1lBQUVvQjtZQUFRdEI7UUFBTTtJQUMzQjtJQUNBOzs7Ozs7S0FNQyxHQUNELE1BQU11QixLQUFJbkIsT0FBTyxFQUFFb0IsVUFBVSxFQUFFdEIsT0FBTztRQUNsQyxNQUFNLEVBQUV1QixRQUFRLEVBQUUsR0FBR3ZCO1FBQ3JCLElBQUksQ0FBQ3VCLFVBQVVDLFFBQVFDLFNBQVMsVUFDNUI7UUFDSixNQUFNbUIsUUFBUTFDLFNBQVMsQ0FBQ0YsUUFBUUUsT0FBTyxDQUFDMEMsS0FBSyxDQUFDakMsSUFBSSxDQUFDO1FBQ25ELElBQUksQ0FBQ2lDLE9BQ0QsTUFBTSxJQUFJbkQsb0RBQVlBLENBQUM7UUFDM0IsTUFBTUssUUFBUSxNQUFNSiwrQ0FBTUEsQ0FBQztZQUN2QixHQUFHTSxRQUFRWSxHQUFHO1lBQ2RGLE9BQU9rQztZQUNQL0IsTUFBTWIsUUFBUUUsT0FBTyxDQUFDMEMsS0FBSyxDQUFDakMsSUFBSTtRQUNwQztRQUNBLElBQUksQ0FBQ2IsT0FBT0EsT0FDUixNQUFNLElBQUlMLG9EQUFZQSxDQUFDO1FBQzNCLG1DQUFtQztRQUNuQzZCLFdBQVdNLElBQUksQ0FBQztZQUNaakIsTUFBTVgsUUFBUUUsT0FBTyxDQUFDMEMsS0FBSyxDQUFDakMsSUFBSTtZQUNoQ2IsT0FBTztZQUNQRSxTQUFTO2dCQUFFLEdBQUdBLFFBQVFFLE9BQU8sQ0FBQzBDLEtBQUssQ0FBQzVDLE9BQU87Z0JBQUVELFFBQVE7WUFBRTtRQUMzRDtRQUNBLE9BQU9ELE1BQU1BLEtBQUs7SUFDdEI7QUFDSixFQUFFO0FBQ0Y7OztDQUdDLEdBQ00sU0FBU2dELFlBQVlDLEtBQUssRUFBRXhCLFFBQVEsRUFBRXlCLGlCQUFpQjtJQUMxRCxJQUFJQztJQUNKLElBQUlDO0lBQ0osSUFBSTNCLFNBQVM0QixnQkFBZ0IsSUFBSSxDQUFDSixPQUFPWCxPQUFPO1FBQzVDLE1BQU0sSUFBSTNDLG9EQUFZQSxDQUFDO0lBQzNCO0lBQ0EsTUFBTTJDLFFBQVFOLFlBQVlpQixPQUFPWDtJQUNqQ2EsY0FBY2IsT0FBT0c7SUFDckIsSUFBSVMsbUJBQW1CO1FBQ25CLElBQUksQ0FBQ1osT0FBT2dCLFFBQ1IsT0FBTztZQUFFSDtRQUFZO1FBQ3pCQyxnQkFBZ0IsQ0FBQyxFQUFFZCxNQUFNZ0IsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJQyxnQkFBZ0JOLE9BQU8sQ0FBQztJQUNuRTtJQUNBLE9BQU87UUFBRUU7UUFBYUM7SUFBYztBQUN4QztBQUNBLE1BQU1JLDZCQUE2QixLQUFLLElBQUksd0JBQXdCO0FBQzdELE1BQU1DLG9CQUFvQjtJQUM3QixNQUFNdkMsUUFBT2hCLE9BQU8sRUFBRXdELFNBQVMsRUFBRUMsWUFBWTtRQUN6QyxNQUFNMUQsU0FBU3VEO1FBQ2YsTUFBTXJELE9BQU87WUFBRXVEO1lBQVdDO1FBQWE7UUFDdkMsTUFBTXJDLFNBQVMsTUFBTXhCLFdBQVcscUJBQXFCcUMsS0FBS0ssU0FBUyxDQUFDckMsT0FBT0YsUUFBUUM7UUFDbkYsT0FBTztZQUFFb0I7UUFBTztJQUNwQjtJQUNBOztLQUVDLEdBQ0QsTUFBTUMsS0FBSXJCLE9BQU8sRUFBRUUsT0FBTyxFQUFFb0IsVUFBVTtRQUNsQyxNQUFNa0MsWUFBWXRELFNBQVMsQ0FBQ0YsUUFBUUUsT0FBTyxDQUFDcUQsaUJBQWlCLENBQUM1QyxJQUFJLENBQUM7UUFDbkUsSUFBSSxDQUFDNkMsV0FDRCxNQUFNLElBQUkvRCxvREFBWUEsQ0FBQztRQUMzQixNQUFNSyxRQUFRLE1BQU1KLCtDQUFNQSxDQUFDO1lBQ3ZCLEdBQUdNLFFBQVFZLEdBQUc7WUFDZEYsT0FBTzhDO1lBQ1AzQyxNQUFNYixRQUFRRSxPQUFPLENBQUNxRCxpQkFBaUIsQ0FBQzVDLElBQUk7UUFDaEQ7UUFDQSxJQUFJLENBQUNiLE9BQU9BLE9BQ1IsTUFBTSxJQUFJTCxvREFBWUEsQ0FBQztRQUMzQixnREFBZ0Q7UUFDaEQsTUFBTTJCLFNBQVM7WUFDWFQsTUFBTVgsUUFBUUUsT0FBTyxDQUFDcUQsaUJBQWlCLENBQUM1QyxJQUFJO1lBQzVDYixPQUFPO1lBQ1BFLFNBQVM7Z0JBQUUsR0FBR0EsUUFBUUUsT0FBTyxDQUFDcUQsaUJBQWlCLENBQUN2RCxPQUFPO2dCQUFFRCxRQUFRO1lBQUU7UUFDdkU7UUFDQXVCLFdBQVdNLElBQUksQ0FBQ1I7UUFDaEIsT0FBT2EsS0FBS0MsS0FBSyxDQUFDcEMsTUFBTUEsS0FBSztJQUNqQztBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvY2FsbGJhY2svb2F1dGgvY2hlY2tzLmpzP2I4N2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgam9zZSBmcm9tIFwiam9zZVwiO1xuaW1wb3J0ICogYXMgbyBmcm9tIFwib2F1dGg0d2ViYXBpXCI7XG5pbXBvcnQgeyBJbnZhbGlkQ2hlY2sgfSBmcm9tIFwiLi4vLi4vLi4vLi4vZXJyb3JzLmpzXCI7XG5pbXBvcnQgeyBkZWNvZGUsIGVuY29kZSB9IGZyb20gXCIuLi8uLi8uLi8uLi9qd3QuanNcIjtcbi8qKiBSZXR1cm5zIGEgc2lnbmVkIGNvb2tpZS4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduQ29va2llKHR5cGUsIHZhbHVlLCBtYXhBZ2UsIG9wdGlvbnMsIGRhdGEpIHtcbiAgICBjb25zdCB7IGNvb2tpZXMsIGxvZ2dlciB9ID0gb3B0aW9ucztcbiAgICBsb2dnZXIuZGVidWcoYENSRUFURV8ke3R5cGUudG9VcHBlckNhc2UoKX1gLCB7IHZhbHVlLCBtYXhBZ2UgfSk7XG4gICAgY29uc3QgZXhwaXJlcyA9IG5ldyBEYXRlKCk7XG4gICAgZXhwaXJlcy5zZXRUaW1lKGV4cGlyZXMuZ2V0VGltZSgpICsgbWF4QWdlICogMTAwMCk7XG4gICAgY29uc3QgdG9rZW4gPSB7IHZhbHVlIH07XG4gICAgaWYgKHR5cGUgPT09IFwic3RhdGVcIiAmJiBkYXRhKVxuICAgICAgICB0b2tlbi5kYXRhID0gZGF0YTtcbiAgICBjb25zdCBuYW1lID0gY29va2llc1t0eXBlXS5uYW1lO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIHZhbHVlOiBhd2FpdCBlbmNvZGUoeyAuLi5vcHRpb25zLmp3dCwgbWF4QWdlLCB0b2tlbiwgc2FsdDogbmFtZSB9KSxcbiAgICAgICAgb3B0aW9uczogeyAuLi5jb29raWVzW3R5cGVdLm9wdGlvbnMsIGV4cGlyZXMgfSxcbiAgICB9O1xufVxuY29uc3QgUEtDRV9NQVhfQUdFID0gNjAgKiAxNTsgLy8gMTUgbWludXRlcyBpbiBzZWNvbmRzXG5leHBvcnQgY29uc3QgcGtjZSA9IHtcbiAgICBhc3luYyBjcmVhdGUob3B0aW9ucykge1xuICAgICAgICBjb25zdCBjb2RlX3ZlcmlmaWVyID0gby5nZW5lcmF0ZVJhbmRvbUNvZGVWZXJpZmllcigpO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IG8uY2FsY3VsYXRlUEtDRUNvZGVDaGFsbGVuZ2UoY29kZV92ZXJpZmllcik7XG4gICAgICAgIGNvbnN0IG1heEFnZSA9IFBLQ0VfTUFYX0FHRTtcbiAgICAgICAgY29uc3QgY29va2llID0gYXdhaXQgc2lnbkNvb2tpZShcInBrY2VDb2RlVmVyaWZpZXJcIiwgY29kZV92ZXJpZmllciwgbWF4QWdlLCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIHsgY29va2llLCB2YWx1ZSB9O1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBjb2RlX3ZlcmlmaWVyIGlmIHRoZSBwcm92aWRlciBpcyBjb25maWd1cmVkIHRvIHVzZSBQS0NFLFxuICAgICAqIGFuZCBjbGVhcnMgdGhlIGNvbnRhaW5lciBjb29raWUgYWZ0ZXJ3YXJkcy5cbiAgICAgKiBBbiBlcnJvciBpcyB0aHJvd24gaWYgdGhlIGNvZGVfdmVyaWZpZXIgaXMgbWlzc2luZyBvciBpbnZhbGlkLlxuICAgICAqIEBzZWUgaHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvcmZjL3JmYzc2MzZcbiAgICAgKiBAc2VlIGh0dHBzOi8vZGFuaWVsZmV0dC5kZS8yMDIwLzA1LzE2L3BrY2UtdnMtbm9uY2UtZXF1aXZhbGVudC1vci1ub3QvI3BrY2VcbiAgICAgKi9cbiAgICBhc3luYyB1c2UoY29va2llcywgcmVzQ29va2llcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHByb3ZpZGVyIH0gPSBvcHRpb25zO1xuICAgICAgICBpZiAoIXByb3ZpZGVyPy5jaGVja3M/LmluY2x1ZGVzKFwicGtjZVwiKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgY29kZVZlcmlmaWVyID0gY29va2llcz8uW29wdGlvbnMuY29va2llcy5wa2NlQ29kZVZlcmlmaWVyLm5hbWVdO1xuICAgICAgICBpZiAoIWNvZGVWZXJpZmllcilcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJQS0NFIGNvZGVfdmVyaWZpZXIgY29va2llIHdhcyBtaXNzaW5nLlwiKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCBkZWNvZGUoe1xuICAgICAgICAgICAgLi4ub3B0aW9ucy5qd3QsXG4gICAgICAgICAgICB0b2tlbjogY29kZVZlcmlmaWVyLFxuICAgICAgICAgICAgc2FsdDogb3B0aW9ucy5jb29raWVzLnBrY2VDb2RlVmVyaWZpZXIubmFtZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghdmFsdWU/LnZhbHVlKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDaGVjayhcIlBLQ0UgY29kZV92ZXJpZmllciB2YWx1ZSBjb3VsZCBub3QgYmUgcGFyc2VkLlwiKTtcbiAgICAgICAgLy8gQ2xlYXIgdGhlIHBrY2UgY29kZSB2ZXJpZmllciBjb29raWUgYWZ0ZXIgdXNlXG4gICAgICAgIHJlc0Nvb2tpZXMucHVzaCh7XG4gICAgICAgICAgICBuYW1lOiBvcHRpb25zLmNvb2tpZXMucGtjZUNvZGVWZXJpZmllci5uYW1lLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgICBvcHRpb25zOiB7IC4uLm9wdGlvbnMuY29va2llcy5wa2NlQ29kZVZlcmlmaWVyLm9wdGlvbnMsIG1heEFnZTogMCB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnZhbHVlO1xuICAgIH0sXG59O1xuY29uc3QgU1RBVEVfTUFYX0FHRSA9IDYwICogMTU7IC8vIDE1IG1pbnV0ZXMgaW4gc2Vjb25kc1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0YXRlKHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShkZWNvZGVyLmRlY29kZShqb3NlLmJhc2U2NHVybC5kZWNvZGUodmFsdWUpKSk7XG4gICAgfVxuICAgIGNhdGNoIHsgfVxufVxuZXhwb3J0IGNvbnN0IHN0YXRlID0ge1xuICAgIGFzeW5jIGNyZWF0ZShvcHRpb25zLCBkYXRhKSB7XG4gICAgICAgIGNvbnN0IHsgcHJvdmlkZXIgfSA9IG9wdGlvbnM7XG4gICAgICAgIGlmICghcHJvdmlkZXIuY2hlY2tzLmluY2x1ZGVzKFwic3RhdGVcIikpIHtcbiAgICAgICAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDaGVjayhcIlN0YXRlIGRhdGEgd2FzIHByb3ZpZGVkIGJ1dCB0aGUgcHJvdmlkZXIgaXMgbm90IGNvbmZpZ3VyZWQgdG8gdXNlIHN0YXRlLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbmNvZGVkU3RhdGUgPSBqb3NlLmJhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoeyAuLi5kYXRhLCByYW5kb206IG8uZ2VuZXJhdGVSYW5kb21TdGF0ZSgpIH0pKTtcbiAgICAgICAgY29uc3QgbWF4QWdlID0gU1RBVEVfTUFYX0FHRTtcbiAgICAgICAgY29uc3QgY29va2llID0gYXdhaXQgc2lnbkNvb2tpZShcInN0YXRlXCIsIGVuY29kZWRTdGF0ZSwgbWF4QWdlLCBvcHRpb25zLCBkYXRhKTtcbiAgICAgICAgcmV0dXJuIHsgY29va2llLCB2YWx1ZTogZW5jb2RlZFN0YXRlIH07XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHN0YXRlIGlmIHRoZSBwcm92aWRlciBpcyBjb25maWd1cmVkIHRvIHVzZSBzdGF0ZSxcbiAgICAgKiBhbmQgY2xlYXJzIHRoZSBjb250YWluZXIgY29va2llIGFmdGVyd2FyZHMuXG4gICAgICogQW4gZXJyb3IgaXMgdGhyb3duIGlmIHRoZSBzdGF0ZSBpcyBtaXNzaW5nIG9yIGludmFsaWQuXG4gICAgICogQHNlZSBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjNjc0OSNzZWN0aW9uLTEwLjEyXG4gICAgICogQHNlZSBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjNjc0OSNzZWN0aW9uLTQuMS4xXG4gICAgICovXG4gICAgYXN5bmMgdXNlKGNvb2tpZXMsIHJlc0Nvb2tpZXMsIG9wdGlvbnMsIHBhcmFtUmFuZG9tKSB7XG4gICAgICAgIGNvbnN0IHsgcHJvdmlkZXIgfSA9IG9wdGlvbnM7XG4gICAgICAgIGlmICghcHJvdmlkZXIuY2hlY2tzLmluY2x1ZGVzKFwic3RhdGVcIikpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHN0YXRlID0gY29va2llcz8uW29wdGlvbnMuY29va2llcy5zdGF0ZS5uYW1lXTtcbiAgICAgICAgaWYgKCFzdGF0ZSlcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJTdGF0ZSBjb29raWUgd2FzIG1pc3NpbmcuXCIpO1xuICAgICAgICAvLyBJREVBOiBMZXQgdGhlIHVzZXIgZG8gc29tZXRoaW5nIHdpdGggdGhlIHJldHVybmVkIHN0YXRlXG4gICAgICAgIGNvbnN0IGVuY29kZWRTdGF0ZSA9IGF3YWl0IGRlY29kZSh7XG4gICAgICAgICAgICAuLi5vcHRpb25zLmp3dCxcbiAgICAgICAgICAgIHRva2VuOiBzdGF0ZSxcbiAgICAgICAgICAgIHNhbHQ6IG9wdGlvbnMuY29va2llcy5zdGF0ZS5uYW1lLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFlbmNvZGVkU3RhdGU/LnZhbHVlKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDaGVjayhcIlN0YXRlIChjb29raWUpIHZhbHVlIGNvdWxkIG5vdCBiZSBwYXJzZWQuXCIpO1xuICAgICAgICBjb25zdCBkZWNvZGVkU3RhdGUgPSBkZWNvZGVTdGF0ZShlbmNvZGVkU3RhdGUudmFsdWUpO1xuICAgICAgICBpZiAoIWRlY29kZWRTdGF0ZSlcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJTdGF0ZSAoZW5jb2RlZCkgdmFsdWUgY291bGQgbm90IGJlIHBhcnNlZC5cIik7XG4gICAgICAgIGlmIChkZWNvZGVkU3RhdGUucmFuZG9tICE9PSBwYXJhbVJhbmRvbSlcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soYFJhbmRvbSBzdGF0ZSB2YWx1ZXMgZGlkIG5vdCBtYXRjaC4gRXhwZWN0ZWQ6ICR7ZGVjb2RlZFN0YXRlLnJhbmRvbX0uIEdvdDogJHtwYXJhbVJhbmRvbX1gKTtcbiAgICAgICAgLy8gQ2xlYXIgdGhlIHN0YXRlIGNvb2tpZSBhZnRlciB1c2VcbiAgICAgICAgcmVzQ29va2llcy5wdXNoKHtcbiAgICAgICAgICAgIG5hbWU6IG9wdGlvbnMuY29va2llcy5zdGF0ZS5uYW1lLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgICBvcHRpb25zOiB7IC4uLm9wdGlvbnMuY29va2llcy5zdGF0ZS5vcHRpb25zLCBtYXhBZ2U6IDAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBlbmNvZGVkU3RhdGUudmFsdWU7XG4gICAgfSxcbn07XG5jb25zdCBOT05DRV9NQVhfQUdFID0gNjAgKiAxNTsgLy8gMTUgbWludXRlcyBpbiBzZWNvbmRzXG5leHBvcnQgY29uc3Qgbm9uY2UgPSB7XG4gICAgYXN5bmMgY3JlYXRlKG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCFvcHRpb25zLnByb3ZpZGVyLmNoZWNrcy5pbmNsdWRlcyhcIm5vbmNlXCIpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IG8uZ2VuZXJhdGVSYW5kb21Ob25jZSgpO1xuICAgICAgICBjb25zdCBtYXhBZ2UgPSBOT05DRV9NQVhfQUdFO1xuICAgICAgICBjb25zdCBjb29raWUgPSBhd2FpdCBzaWduQ29va2llKFwibm9uY2VcIiwgdmFsdWUsIG1heEFnZSwgb3B0aW9ucyk7XG4gICAgICAgIHJldHVybiB7IGNvb2tpZSwgdmFsdWUgfTtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIFJldHVybnMgbm9uY2UgaWYgdGhlIHByb3ZpZGVyIGlzIGNvbmZpZ3VyZWQgdG8gdXNlIG5vbmNlLFxuICAgICAqIGFuZCBjbGVhcnMgdGhlIGNvbnRhaW5lciBjb29raWUgYWZ0ZXJ3YXJkcy5cbiAgICAgKiBBbiBlcnJvciBpcyB0aHJvd24gaWYgdGhlIG5vbmNlIGlzIG1pc3Npbmcgb3IgaW52YWxpZC5cbiAgICAgKiBAc2VlIGh0dHBzOi8vb3BlbmlkLm5ldC9zcGVjcy9vcGVuaWQtY29ubmVjdC1jb3JlLTFfMC5odG1sI05vbmNlTm90ZXNcbiAgICAgKiBAc2VlIGh0dHBzOi8vZGFuaWVsZmV0dC5kZS8yMDIwLzA1LzE2L3BrY2UtdnMtbm9uY2UtZXF1aXZhbGVudC1vci1ub3QvI25vbmNlXG4gICAgICovXG4gICAgYXN5bmMgdXNlKGNvb2tpZXMsIHJlc0Nvb2tpZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBwcm92aWRlciB9ID0gb3B0aW9ucztcbiAgICAgICAgaWYgKCFwcm92aWRlcj8uY2hlY2tzPy5pbmNsdWRlcyhcIm5vbmNlXCIpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBub25jZSA9IGNvb2tpZXM/LltvcHRpb25zLmNvb2tpZXMubm9uY2UubmFtZV07XG4gICAgICAgIGlmICghbm9uY2UpXG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZENoZWNrKFwiTm9uY2UgY29va2llIHdhcyBtaXNzaW5nLlwiKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCBkZWNvZGUoe1xuICAgICAgICAgICAgLi4ub3B0aW9ucy5qd3QsXG4gICAgICAgICAgICB0b2tlbjogbm9uY2UsXG4gICAgICAgICAgICBzYWx0OiBvcHRpb25zLmNvb2tpZXMubm9uY2UubmFtZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghdmFsdWU/LnZhbHVlKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRDaGVjayhcIk5vbmNlIHZhbHVlIGNvdWxkIG5vdCBiZSBwYXJzZWQuXCIpO1xuICAgICAgICAvLyBDbGVhciB0aGUgbm9uY2UgY29va2llIGFmdGVyIHVzZVxuICAgICAgICByZXNDb29raWVzLnB1c2goe1xuICAgICAgICAgICAgbmFtZTogb3B0aW9ucy5jb29raWVzLm5vbmNlLm5hbWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIixcbiAgICAgICAgICAgIG9wdGlvbnM6IHsgLi4ub3B0aW9ucy5jb29raWVzLm5vbmNlLm9wdGlvbnMsIG1heEFnZTogMCB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnZhbHVlO1xuICAgIH0sXG59O1xuLyoqXG4gKiBXaGVuIHRoZSBhdXRob3JpemF0aW9uIGZsb3cgY29udGFpbnMgYSBzdGF0ZSwgd2UgY2hlY2sgaWYgaXQncyBhIHJlZGlyZWN0IHByb3h5XG4gKiBhbmQgaWYgc28sIHdlIHJldHVybiB0aGUgcmFuZG9tIHN0YXRlIGFuZCB0aGUgb3JpZ2luYWwgcmVkaXJlY3QgVVJMLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlU3RhdGUocXVlcnksIHByb3ZpZGVyLCBpc09uUmVkaXJlY3RQcm94eSkge1xuICAgIGxldCByYW5kb21TdGF0ZTtcbiAgICBsZXQgcHJveHlSZWRpcmVjdDtcbiAgICBpZiAocHJvdmlkZXIucmVkaXJlY3RQcm94eVVybCAmJiAhcXVlcnk/LnN0YXRlKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJNaXNzaW5nIHN0YXRlIGluIHF1ZXJ5LCBidXQgcmVxdWlyZWQgZm9yIHJlZGlyZWN0IHByb3h5XCIpO1xuICAgIH1cbiAgICBjb25zdCBzdGF0ZSA9IGRlY29kZVN0YXRlKHF1ZXJ5Py5zdGF0ZSk7XG4gICAgcmFuZG9tU3RhdGUgPSBzdGF0ZT8ucmFuZG9tO1xuICAgIGlmIChpc09uUmVkaXJlY3RQcm94eSkge1xuICAgICAgICBpZiAoIXN0YXRlPy5vcmlnaW4pXG4gICAgICAgICAgICByZXR1cm4geyByYW5kb21TdGF0ZSB9O1xuICAgICAgICBwcm94eVJlZGlyZWN0ID0gYCR7c3RhdGUub3JpZ2lufT8ke25ldyBVUkxTZWFyY2hQYXJhbXMocXVlcnkpfWA7XG4gICAgfVxuICAgIHJldHVybiB7IHJhbmRvbVN0YXRlLCBwcm94eVJlZGlyZWN0IH07XG59XG5jb25zdCBXRUJBVVRITl9DSEFMTEVOR0VfTUFYX0FHRSA9IDYwICogMTU7IC8vIDE1IG1pbnV0ZXMgaW4gc2Vjb25kc1xuZXhwb3J0IGNvbnN0IHdlYmF1dGhuQ2hhbGxlbmdlID0ge1xuICAgIGFzeW5jIGNyZWF0ZShvcHRpb25zLCBjaGFsbGVuZ2UsIHJlZ2lzdGVyRGF0YSkge1xuICAgICAgICBjb25zdCBtYXhBZ2UgPSBXRUJBVVRITl9DSEFMTEVOR0VfTUFYX0FHRTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHsgY2hhbGxlbmdlLCByZWdpc3RlckRhdGEgfTtcbiAgICAgICAgY29uc3QgY29va2llID0gYXdhaXQgc2lnbkNvb2tpZShcIndlYmF1dGhuQ2hhbGxlbmdlXCIsIEpTT04uc3RyaW5naWZ5KGRhdGEpLCBtYXhBZ2UsIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4geyBjb29raWUgfTtcbiAgICB9LFxuICAgIC8qKlxuICAgICAqIFJldHVybnMgY2hhbGxlbmdlIGlmIHByZXNlbnQsXG4gICAgICovXG4gICAgYXN5bmMgdXNlKG9wdGlvbnMsIGNvb2tpZXMsIHJlc0Nvb2tpZXMpIHtcbiAgICAgICAgY29uc3QgY2hhbGxlbmdlID0gY29va2llcz8uW29wdGlvbnMuY29va2llcy53ZWJhdXRobkNoYWxsZW5nZS5uYW1lXTtcbiAgICAgICAgaWYgKCFjaGFsbGVuZ2UpXG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZENoZWNrKFwiQ2hhbGxlbmdlIGNvb2tpZSBtaXNzaW5nLlwiKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCBkZWNvZGUoe1xuICAgICAgICAgICAgLi4ub3B0aW9ucy5qd3QsXG4gICAgICAgICAgICB0b2tlbjogY2hhbGxlbmdlLFxuICAgICAgICAgICAgc2FsdDogb3B0aW9ucy5jb29raWVzLndlYmF1dGhuQ2hhbGxlbmdlLm5hbWUsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXZhbHVlPy52YWx1ZSlcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQ2hlY2soXCJDaGFsbGVuZ2UgdmFsdWUgY291bGQgbm90IGJlIHBhcnNlZC5cIik7XG4gICAgICAgIC8vIENsZWFyIHRoZSBwa2NlIGNvZGUgdmVyaWZpZXIgY29va2llIGFmdGVyIHVzZVxuICAgICAgICBjb25zdCBjb29raWUgPSB7XG4gICAgICAgICAgICBuYW1lOiBvcHRpb25zLmNvb2tpZXMud2ViYXV0aG5DaGFsbGVuZ2UubmFtZSxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgICAgb3B0aW9uczogeyAuLi5vcHRpb25zLmNvb2tpZXMud2ViYXV0aG5DaGFsbGVuZ2Uub3B0aW9ucywgbWF4QWdlOiAwIH0sXG4gICAgICAgIH07XG4gICAgICAgIHJlc0Nvb2tpZXMucHVzaChjb29raWUpO1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh2YWx1ZS52YWx1ZSk7XG4gICAgfSxcbn07XG4iXSwibmFtZXMiOlsiam9zZSIsIm8iLCJJbnZhbGlkQ2hlY2siLCJkZWNvZGUiLCJlbmNvZGUiLCJzaWduQ29va2llIiwidHlwZSIsInZhbHVlIiwibWF4QWdlIiwib3B0aW9ucyIsImRhdGEiLCJjb29raWVzIiwibG9nZ2VyIiwiZGVidWciLCJ0b1VwcGVyQ2FzZSIsImV4cGlyZXMiLCJEYXRlIiwic2V0VGltZSIsImdldFRpbWUiLCJ0b2tlbiIsIm5hbWUiLCJqd3QiLCJzYWx0IiwiUEtDRV9NQVhfQUdFIiwicGtjZSIsImNyZWF0ZSIsImNvZGVfdmVyaWZpZXIiLCJnZW5lcmF0ZVJhbmRvbUNvZGVWZXJpZmllciIsImNhbGN1bGF0ZVBLQ0VDb2RlQ2hhbGxlbmdlIiwiY29va2llIiwidXNlIiwicmVzQ29va2llcyIsInByb3ZpZGVyIiwiY2hlY2tzIiwiaW5jbHVkZXMiLCJjb2RlVmVyaWZpZXIiLCJwa2NlQ29kZVZlcmlmaWVyIiwicHVzaCIsIlNUQVRFX01BWF9BR0UiLCJkZWNvZGVTdGF0ZSIsImRlY29kZXIiLCJUZXh0RGVjb2RlciIsIkpTT04iLCJwYXJzZSIsImJhc2U2NHVybCIsInN0YXRlIiwiZW5jb2RlZFN0YXRlIiwic3RyaW5naWZ5IiwicmFuZG9tIiwiZ2VuZXJhdGVSYW5kb21TdGF0ZSIsInBhcmFtUmFuZG9tIiwiZGVjb2RlZFN0YXRlIiwiTk9OQ0VfTUFYX0FHRSIsIm5vbmNlIiwiZ2VuZXJhdGVSYW5kb21Ob25jZSIsImhhbmRsZVN0YXRlIiwicXVlcnkiLCJpc09uUmVkaXJlY3RQcm94eSIsInJhbmRvbVN0YXRlIiwicHJveHlSZWRpcmVjdCIsInJlZGlyZWN0UHJveHlVcmwiLCJvcmlnaW4iLCJVUkxTZWFyY2hQYXJhbXMiLCJXRUJBVVRITl9DSEFMTEVOR0VfTUFYX0FHRSIsIndlYmF1dGhuQ2hhbGxlbmdlIiwiY2hhbGxlbmdlIiwicmVnaXN0ZXJEYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCSRFToken: () => (/* binding */ createCSRFToken),\n/* harmony export */   validateCSRF: () => (/* binding */ validateCSRF)\n/* harmony export */ });\n/* harmony import */ var _utils_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/web.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n\n\n/**\n * Ensure CSRF Token cookie is set for any subsequent requests.\n * Used as part of the strategy for mitigation for CSRF tokens.\n *\n * Creates a cookie like 'next-auth.csrf-token' with the value 'token|hash',\n * where 'token' is the CSRF token and 'hash' is a hash made of the token and\n * the secret, and the two values are joined by a pipe '|'. By storing the\n * value and the hash of the value (with the secret used as a salt) we can\n * verify the cookie was set by the server and not by a malicious attacker.\n *\n * For more details, see the following OWASP links:\n * https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie\n * https://owasp.org/www-chapter-london/assets/slides/David_Johansson-Double_Defeat_of_Double-Submit_Cookie.pdf\n */ async function createCSRFToken({ options, cookieValue, isPost, bodyValue }) {\n    if (cookieValue) {\n        const [csrfToken, csrfTokenHash] = cookieValue.split(\"|\");\n        const expectedCsrfTokenHash = await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.createHash)(`${csrfToken}${options.secret}`);\n        if (csrfTokenHash === expectedCsrfTokenHash) {\n            // If hash matches then we trust the CSRF token value\n            // If this is a POST request and the CSRF Token in the POST request matches\n            // the cookie we have already verified is the one we have set, then the token is verified!\n            const csrfTokenVerified = isPost && csrfToken === bodyValue;\n            return {\n                csrfTokenVerified,\n                csrfToken\n            };\n        }\n    }\n    // New CSRF token\n    const csrfToken = (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.randomString)(32);\n    const csrfTokenHash = await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.createHash)(`${csrfToken}${options.secret}`);\n    const cookie = `${csrfToken}|${csrfTokenHash}`;\n    return {\n        cookie,\n        csrfToken\n    };\n}\nfunction validateCSRF(action, verified) {\n    if (verified) return;\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingCSRF(`CSRF token was missing during an action ${action}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL2NhbGxiYWNrL29hdXRoL2NzcmYtdG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRTtBQUNiO0FBQ3BEOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxlQUFlRyxnQkFBZ0IsRUFBRUMsT0FBTyxFQUFFQyxXQUFXLEVBQUVDLE1BQU0sRUFBRUMsU0FBUyxFQUFHO0lBQzlFLElBQUlGLGFBQWE7UUFDYixNQUFNLENBQUNHLFdBQVdDLGNBQWMsR0FBR0osWUFBWUssS0FBSyxDQUFDO1FBQ3JELE1BQU1DLHdCQUF3QixNQUFNWCx5REFBVUEsQ0FBQyxDQUFDLEVBQUVRLFVBQVUsRUFBRUosUUFBUVEsTUFBTSxDQUFDLENBQUM7UUFDOUUsSUFBSUgsa0JBQWtCRSx1QkFBdUI7WUFDekMscURBQXFEO1lBQ3JELDJFQUEyRTtZQUMzRSwwRkFBMEY7WUFDMUYsTUFBTUUsb0JBQW9CUCxVQUFVRSxjQUFjRDtZQUNsRCxPQUFPO2dCQUFFTTtnQkFBbUJMO1lBQVU7UUFDMUM7SUFDSjtJQUNBLGlCQUFpQjtJQUNqQixNQUFNQSxZQUFZUCwyREFBWUEsQ0FBQztJQUMvQixNQUFNUSxnQkFBZ0IsTUFBTVQseURBQVVBLENBQUMsQ0FBQyxFQUFFUSxVQUFVLEVBQUVKLFFBQVFRLE1BQU0sQ0FBQyxDQUFDO0lBQ3RFLE1BQU1FLFNBQVMsQ0FBQyxFQUFFTixVQUFVLENBQUMsRUFBRUMsY0FBYyxDQUFDO0lBQzlDLE9BQU87UUFBRUs7UUFBUU47SUFBVTtBQUMvQjtBQUNPLFNBQVNPLGFBQWFDLE1BQU0sRUFBRUMsUUFBUTtJQUN6QyxJQUFJQSxVQUNBO0lBQ0osTUFBTSxJQUFJZixtREFBV0EsQ0FBQyxDQUFDLHdDQUF3QyxFQUFFYyxPQUFPLENBQUM7QUFDN0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvY2FsbGJhY2svb2F1dGgvY3NyZi10b2tlbi5qcz8wMzFjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUhhc2gsIHJhbmRvbVN0cmluZyB9IGZyb20gXCIuLi8uLi8uLi91dGlscy93ZWIuanNcIjtcbmltcG9ydCB7IE1pc3NpbmdDU1JGIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2Vycm9ycy5qc1wiO1xuLyoqXG4gKiBFbnN1cmUgQ1NSRiBUb2tlbiBjb29raWUgaXMgc2V0IGZvciBhbnkgc3Vic2VxdWVudCByZXF1ZXN0cy5cbiAqIFVzZWQgYXMgcGFydCBvZiB0aGUgc3RyYXRlZ3kgZm9yIG1pdGlnYXRpb24gZm9yIENTUkYgdG9rZW5zLlxuICpcbiAqIENyZWF0ZXMgYSBjb29raWUgbGlrZSAnbmV4dC1hdXRoLmNzcmYtdG9rZW4nIHdpdGggdGhlIHZhbHVlICd0b2tlbnxoYXNoJyxcbiAqIHdoZXJlICd0b2tlbicgaXMgdGhlIENTUkYgdG9rZW4gYW5kICdoYXNoJyBpcyBhIGhhc2ggbWFkZSBvZiB0aGUgdG9rZW4gYW5kXG4gKiB0aGUgc2VjcmV0LCBhbmQgdGhlIHR3byB2YWx1ZXMgYXJlIGpvaW5lZCBieSBhIHBpcGUgJ3wnLiBCeSBzdG9yaW5nIHRoZVxuICogdmFsdWUgYW5kIHRoZSBoYXNoIG9mIHRoZSB2YWx1ZSAod2l0aCB0aGUgc2VjcmV0IHVzZWQgYXMgYSBzYWx0KSB3ZSBjYW5cbiAqIHZlcmlmeSB0aGUgY29va2llIHdhcyBzZXQgYnkgdGhlIHNlcnZlciBhbmQgbm90IGJ5IGEgbWFsaWNpb3VzIGF0dGFja2VyLlxuICpcbiAqIEZvciBtb3JlIGRldGFpbHMsIHNlZSB0aGUgZm9sbG93aW5nIE9XQVNQIGxpbmtzOlxuICogaHR0cHM6Ly9jaGVhdHNoZWV0c2VyaWVzLm93YXNwLm9yZy9jaGVhdHNoZWV0cy9Dcm9zcy1TaXRlX1JlcXVlc3RfRm9yZ2VyeV9QcmV2ZW50aW9uX0NoZWF0X1NoZWV0Lmh0bWwjZG91YmxlLXN1Ym1pdC1jb29raWVcbiAqIGh0dHBzOi8vb3dhc3Aub3JnL3d3dy1jaGFwdGVyLWxvbmRvbi9hc3NldHMvc2xpZGVzL0RhdmlkX0pvaGFuc3Nvbi1Eb3VibGVfRGVmZWF0X29mX0RvdWJsZS1TdWJtaXRfQ29va2llLnBkZlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ1NSRlRva2VuKHsgb3B0aW9ucywgY29va2llVmFsdWUsIGlzUG9zdCwgYm9keVZhbHVlLCB9KSB7XG4gICAgaWYgKGNvb2tpZVZhbHVlKSB7XG4gICAgICAgIGNvbnN0IFtjc3JmVG9rZW4sIGNzcmZUb2tlbkhhc2hdID0gY29va2llVmFsdWUuc3BsaXQoXCJ8XCIpO1xuICAgICAgICBjb25zdCBleHBlY3RlZENzcmZUb2tlbkhhc2ggPSBhd2FpdCBjcmVhdGVIYXNoKGAke2NzcmZUb2tlbn0ke29wdGlvbnMuc2VjcmV0fWApO1xuICAgICAgICBpZiAoY3NyZlRva2VuSGFzaCA9PT0gZXhwZWN0ZWRDc3JmVG9rZW5IYXNoKSB7XG4gICAgICAgICAgICAvLyBJZiBoYXNoIG1hdGNoZXMgdGhlbiB3ZSB0cnVzdCB0aGUgQ1NSRiB0b2tlbiB2YWx1ZVxuICAgICAgICAgICAgLy8gSWYgdGhpcyBpcyBhIFBPU1QgcmVxdWVzdCBhbmQgdGhlIENTUkYgVG9rZW4gaW4gdGhlIFBPU1QgcmVxdWVzdCBtYXRjaGVzXG4gICAgICAgICAgICAvLyB0aGUgY29va2llIHdlIGhhdmUgYWxyZWFkeSB2ZXJpZmllZCBpcyB0aGUgb25lIHdlIGhhdmUgc2V0LCB0aGVuIHRoZSB0b2tlbiBpcyB2ZXJpZmllZCFcbiAgICAgICAgICAgIGNvbnN0IGNzcmZUb2tlblZlcmlmaWVkID0gaXNQb3N0ICYmIGNzcmZUb2tlbiA9PT0gYm9keVZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIHsgY3NyZlRva2VuVmVyaWZpZWQsIGNzcmZUb2tlbiB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIE5ldyBDU1JGIHRva2VuXG4gICAgY29uc3QgY3NyZlRva2VuID0gcmFuZG9tU3RyaW5nKDMyKTtcbiAgICBjb25zdCBjc3JmVG9rZW5IYXNoID0gYXdhaXQgY3JlYXRlSGFzaChgJHtjc3JmVG9rZW59JHtvcHRpb25zLnNlY3JldH1gKTtcbiAgICBjb25zdCBjb29raWUgPSBgJHtjc3JmVG9rZW59fCR7Y3NyZlRva2VuSGFzaH1gO1xuICAgIHJldHVybiB7IGNvb2tpZSwgY3NyZlRva2VuIH07XG59XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVDU1JGKGFjdGlvbiwgdmVyaWZpZWQpIHtcbiAgICBpZiAodmVyaWZpZWQpXG4gICAgICAgIHJldHVybjtcbiAgICB0aHJvdyBuZXcgTWlzc2luZ0NTUkYoYENTUkYgdG9rZW4gd2FzIG1pc3NpbmcgZHVyaW5nIGFuIGFjdGlvbiAke2FjdGlvbn1gKTtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVIYXNoIiwicmFuZG9tU3RyaW5nIiwiTWlzc2luZ0NTUkYiLCJjcmVhdGVDU1JGVG9rZW4iLCJvcHRpb25zIiwiY29va2llVmFsdWUiLCJpc1Bvc3QiLCJib2R5VmFsdWUiLCJjc3JmVG9rZW4iLCJjc3JmVG9rZW5IYXNoIiwic3BsaXQiLCJleHBlY3RlZENzcmZUb2tlbkhhc2giLCJzZWNyZXQiLCJjc3JmVG9rZW5WZXJpZmllZCIsImNvb2tpZSIsInZhbGlkYXRlQ1NSRiIsImFjdGlvbiIsInZlcmlmaWVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callback: () => (/* reexport safe */ _callback_index_js__WEBPACK_IMPORTED_MODULE_0__.callback),\n/* harmony export */   session: () => (/* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_1__.session),\n/* harmony export */   signIn: () => (/* reexport safe */ _signin_index_js__WEBPACK_IMPORTED_MODULE_2__.signIn),\n/* harmony export */   signOut: () => (/* reexport safe */ _signout_js__WEBPACK_IMPORTED_MODULE_3__.signOut),\n/* harmony export */   webAuthnOptions: () => (/* reexport safe */ _webauthn_options_js__WEBPACK_IMPORTED_MODULE_4__.webAuthnOptions)\n/* harmony export */ });\n/* harmony import */ var _callback_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./callback/index.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/callback/index.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./session.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/session.js\");\n/* harmony import */ var _signin_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signin/index.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/signin/index.js\");\n/* harmony import */ var _signout_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signout.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/signout.js\");\n/* harmony import */ var _webauthn_options_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./webauthn-options.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/webauthn-options.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBK0M7QUFDUjtBQUNJO0FBQ0o7QUFDaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvaW5kZXguanM/NGJhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBjYWxsYmFjayB9IGZyb20gXCIuL2NhbGxiYWNrL2luZGV4LmpzXCI7XG5leHBvcnQgeyBzZXNzaW9uIH0gZnJvbSBcIi4vc2Vzc2lvbi5qc1wiO1xuZXhwb3J0IHsgc2lnbkluIH0gZnJvbSBcIi4vc2lnbmluL2luZGV4LmpzXCI7XG5leHBvcnQgeyBzaWduT3V0IH0gZnJvbSBcIi4vc2lnbm91dC5qc1wiO1xuZXhwb3J0IHsgd2ViQXV0aG5PcHRpb25zIH0gZnJvbSBcIi4vd2ViYXV0aG4tb3B0aW9ucy5qc1wiO1xuIl0sIm5hbWVzIjpbImNhbGxiYWNrIiwic2Vzc2lvbiIsInNpZ25JbiIsInNpZ25PdXQiLCJ3ZWJBdXRobk9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/session.js":
/*!********************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/session.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   session: () => (/* binding */ session)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/date.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/date.js\");\n\n\n/** Return a session object filtered via `callbacks.session` */ async function session(options, sessionStore, cookies, isUpdate, newSession) {\n    const { adapter, jwt, events, callbacks, logger, session: { strategy: sessionStrategy, maxAge: sessionMaxAge } } = options;\n    const response = {\n        body: null,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        cookies\n    };\n    const sessionToken = sessionStore.value;\n    if (!sessionToken) return response;\n    if (sessionStrategy === \"jwt\") {\n        try {\n            const salt = options.cookies.sessionToken.name;\n            const payload = await jwt.decode({\n                ...jwt,\n                token: sessionToken,\n                salt\n            });\n            if (!payload) throw new Error(\"Invalid JWT\");\n            // @ts-expect-error\n            const token = await callbacks.jwt({\n                token: payload,\n                ...isUpdate && {\n                    trigger: \"update\"\n                },\n                session: newSession\n            });\n            const newExpires = (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(sessionMaxAge);\n            if (token !== null) {\n                // By default, only exposes a limited subset of information to the client\n                // as needed for presentation purposes (e.g. \"you are logged in as...\").\n                const session = {\n                    user: {\n                        name: token.name,\n                        email: token.email,\n                        image: token.picture\n                    },\n                    expires: newExpires.toISOString()\n                };\n                // @ts-expect-error\n                const newSession = await callbacks.session({\n                    session,\n                    token\n                });\n                // Return session payload as response\n                response.body = newSession;\n                // Refresh JWT expiry by re-signing it, with an updated expiry date\n                const newToken = await jwt.encode({\n                    ...jwt,\n                    token,\n                    salt\n                });\n                // Set cookie, to also update expiry date on cookie\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: newExpires\n                });\n                response.cookies?.push(...sessionCookies);\n                await events.session?.({\n                    session: newSession,\n                    token\n                });\n            } else {\n                response.cookies?.push(...sessionStore.clean());\n            }\n        } catch (e) {\n            logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTSessionError(e));\n            // If the JWT is not verifiable remove the broken session cookie(s).\n            response.cookies?.push(...sessionStore.clean());\n        }\n        return response;\n    }\n    // Retrieve session from database\n    try {\n        const { getSessionAndUser, deleteSession, updateSession } = adapter;\n        let userAndSession = await getSessionAndUser(sessionToken);\n        // If session has expired, clean up the database\n        if (userAndSession && userAndSession.session.expires.valueOf() < Date.now()) {\n            await deleteSession(sessionToken);\n            userAndSession = null;\n        }\n        if (userAndSession) {\n            const { user, session } = userAndSession;\n            const sessionUpdateAge = options.session.updateAge;\n            // Calculate last updated date to throttle write updates to database\n            // Formula: ({expiry date} - sessionMaxAge) + sessionUpdateAge\n            //     e.g. ({expiry date} - 30 days) + 1 hour\n            const sessionIsDueToBeUpdatedDate = session.expires.valueOf() - sessionMaxAge * 1000 + sessionUpdateAge * 1000;\n            const newExpires = (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(sessionMaxAge);\n            // Trigger update of session expiry date and write to database, only\n            // if the session was last updated more than {sessionUpdateAge} ago\n            if (sessionIsDueToBeUpdatedDate <= Date.now()) {\n                await updateSession({\n                    sessionToken: sessionToken,\n                    expires: newExpires\n                });\n            }\n            // Pass Session through to the session callback\n            const sessionPayload = await callbacks.session({\n                // TODO: user already passed below,\n                // remove from session object in https://github.com/nextauthjs/next-auth/pull/9702\n                // @ts-expect-error\n                session: {\n                    ...session,\n                    user\n                },\n                user,\n                newSession,\n                ...isUpdate ? {\n                    trigger: \"update\"\n                } : {}\n            });\n            // Return session payload as response\n            response.body = sessionPayload;\n            // Set cookie again to update expiry\n            response.cookies?.push({\n                name: options.cookies.sessionToken.name,\n                value: sessionToken,\n                options: {\n                    ...options.cookies.sessionToken.options,\n                    expires: newExpires\n                }\n            });\n            // @ts-expect-error\n            await events.session?.({\n                session: sessionPayload\n            });\n        } else if (sessionToken) {\n            // If `sessionToken` was found set but it's not valid for a session then\n            // remove the sessionToken cookie from browser.\n            response.cookies?.push(...sessionStore.clean());\n        }\n    } catch (e) {\n        logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_0__.SessionTokenError(e));\n    }\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/session.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/signin/authorization-url.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/signin/authorization-url.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAuthorizationUrl: () => (/* binding */ getAuthorizationUrl)\n/* harmony export */ });\n/* harmony import */ var _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../callback/oauth/checks.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! oauth4webapi */ \"(action-browser)/./node_modules/oauth4webapi/build/index.js\");\n\n\n/**\n * Generates an authorization/request token URL.\n *\n * [OAuth 2](https://www.oauth.com/oauth2-servers/authorization/the-authorization-request/)\n */ async function getAuthorizationUrl(query, options) {\n    const { logger, provider } = options;\n    let url = provider.authorization?.url;\n    let as;\n    // Falls back to authjs.dev if the user only passed params\n    if (!url || url.host === \"authjs.dev\") {\n        // If url is undefined, we assume that issuer is always defined\n        // We check this in assert.ts\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const issuer = new URL(provider.issuer);\n        const discoveryResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_1__.discoveryRequest(issuer);\n        const as = await oauth4webapi__WEBPACK_IMPORTED_MODULE_1__.processDiscoveryResponse(issuer, discoveryResponse);\n        if (!as.authorization_endpoint) {\n            throw new TypeError(\"Authorization server did not provide an authorization endpoint.\");\n        }\n        url = new URL(as.authorization_endpoint);\n    }\n    const authParams = url.searchParams;\n    let redirect_uri = provider.callbackUrl;\n    let data;\n    if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {\n        redirect_uri = provider.redirectProxyUrl;\n        data = {\n            origin: provider.callbackUrl\n        };\n        logger.debug(\"using redirect proxy\", {\n            redirect_uri,\n            data\n        });\n    }\n    const params = Object.assign({\n        response_type: \"code\",\n        // clientId can technically be undefined, should we check this in assert.ts or rely on the Authorization Server to do it?\n        client_id: provider.clientId,\n        redirect_uri,\n        // @ts-expect-error TODO:\n        ...provider.authorization?.params\n    }, Object.fromEntries(provider.authorization?.url.searchParams ?? []), query);\n    for(const k in params)authParams.set(k, params[k]);\n    const cookies = [];\n    const state = await _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__.state.create(options, data);\n    if (state) {\n        authParams.set(\"state\", state.value);\n        cookies.push(state.cookie);\n    }\n    if (provider.checks?.includes(\"pkce\")) {\n        if (as && !as.code_challenge_methods_supported?.includes(\"S256\")) {\n            // We assume S256 PKCE support, if the server does not advertise that,\n            // a random `nonce` must be used for CSRF protection.\n            if (provider.type === \"oidc\") provider.checks = [\n                \"nonce\"\n            ];\n        } else {\n            const { value, cookie } = await _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__.pkce.create(options);\n            authParams.set(\"code_challenge\", value);\n            authParams.set(\"code_challenge_method\", \"S256\");\n            cookies.push(cookie);\n        }\n    }\n    const nonce = await _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__.nonce.create(options);\n    if (nonce) {\n        authParams.set(\"nonce\", nonce.value);\n        cookies.push(nonce.cookie);\n    }\n    // TODO: This does not work in normalizeOAuth because authorization endpoint can come from discovery\n    // Need to make normalizeOAuth async\n    if (provider.type === \"oidc\" && !url.searchParams.has(\"scope\")) {\n        url.searchParams.set(\"scope\", \"openid profile email\");\n    }\n    logger.debug(\"authorization url is ready\", {\n        url,\n        cookies,\n        provider\n    });\n    return {\n        redirect: url.toString(),\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/signin/authorization-url.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/signin/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/signin/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signIn: () => (/* binding */ signIn)\n/* harmony export */ });\n/* harmony import */ var _authorization_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authorization-url.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/signin/authorization-url.js\");\n/* harmony import */ var _send_token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./send-token.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/signin/send-token.js\");\n\n\nasync function signIn(request, cookies, options) {\n    const signInUrl = `${options.url.origin}${options.basePath}/signin`;\n    if (!options.provider) return {\n        redirect: signInUrl,\n        cookies\n    };\n    switch(options.provider.type){\n        case \"oauth\":\n        case \"oidc\":\n            {\n                const { redirect, cookies: authCookies } = await (0,_authorization_url_js__WEBPACK_IMPORTED_MODULE_0__.getAuthorizationUrl)(request.query, options);\n                if (authCookies) cookies.push(...authCookies);\n                return {\n                    redirect,\n                    cookies\n                };\n            }\n        case \"email\":\n            {\n                const response = await (0,_send_token_js__WEBPACK_IMPORTED_MODULE_1__.sendToken)(request, options);\n                return {\n                    ...response,\n                    cookies\n                };\n            }\n        default:\n            return {\n                redirect: signInUrl,\n                cookies\n            };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25pbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkQ7QUFDakI7QUFDckMsZUFBZUUsT0FBT0MsT0FBTyxFQUFFQyxPQUFPLEVBQUVDLE9BQU87SUFDbEQsTUFBTUMsWUFBWSxDQUFDLEVBQUVELFFBQVFFLEdBQUcsQ0FBQ0MsTUFBTSxDQUFDLEVBQUVILFFBQVFJLFFBQVEsQ0FBQyxPQUFPLENBQUM7SUFDbkUsSUFBSSxDQUFDSixRQUFRSyxRQUFRLEVBQ2pCLE9BQU87UUFBRUMsVUFBVUw7UUFBV0Y7SUFBUTtJQUMxQyxPQUFRQyxRQUFRSyxRQUFRLENBQUNFLElBQUk7UUFDekIsS0FBSztRQUNMLEtBQUs7WUFBUTtnQkFDVCxNQUFNLEVBQUVELFFBQVEsRUFBRVAsU0FBU1MsV0FBVyxFQUFFLEdBQUcsTUFBTWIsMEVBQW1CQSxDQUFDRyxRQUFRVyxLQUFLLEVBQUVUO2dCQUNwRixJQUFJUSxhQUNBVCxRQUFRVyxJQUFJLElBQUlGO2dCQUNwQixPQUFPO29CQUFFRjtvQkFBVVA7Z0JBQVE7WUFDL0I7UUFDQSxLQUFLO1lBQVM7Z0JBQ1YsTUFBTVksV0FBVyxNQUFNZix5REFBU0EsQ0FBQ0UsU0FBU0U7Z0JBQzFDLE9BQU87b0JBQUUsR0FBR1csUUFBUTtvQkFBRVo7Z0JBQVE7WUFDbEM7UUFDQTtZQUNJLE9BQU87Z0JBQUVPLFVBQVVMO2dCQUFXRjtZQUFRO0lBQzlDO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvc2lnbmluL2luZGV4LmpzP2EwNmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QXV0aG9yaXphdGlvblVybCB9IGZyb20gXCIuL2F1dGhvcml6YXRpb24tdXJsLmpzXCI7XG5pbXBvcnQgeyBzZW5kVG9rZW4gfSBmcm9tIFwiLi9zZW5kLXRva2VuLmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbkluKHJlcXVlc3QsIGNvb2tpZXMsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBzaWduSW5VcmwgPSBgJHtvcHRpb25zLnVybC5vcmlnaW59JHtvcHRpb25zLmJhc2VQYXRofS9zaWduaW5gO1xuICAgIGlmICghb3B0aW9ucy5wcm92aWRlcilcbiAgICAgICAgcmV0dXJuIHsgcmVkaXJlY3Q6IHNpZ25JblVybCwgY29va2llcyB9O1xuICAgIHN3aXRjaCAob3B0aW9ucy5wcm92aWRlci50eXBlKSB7XG4gICAgICAgIGNhc2UgXCJvYXV0aFwiOlxuICAgICAgICBjYXNlIFwib2lkY1wiOiB7XG4gICAgICAgICAgICBjb25zdCB7IHJlZGlyZWN0LCBjb29raWVzOiBhdXRoQ29va2llcyB9ID0gYXdhaXQgZ2V0QXV0aG9yaXphdGlvblVybChyZXF1ZXN0LnF1ZXJ5LCBvcHRpb25zKTtcbiAgICAgICAgICAgIGlmIChhdXRoQ29va2llcylcbiAgICAgICAgICAgICAgICBjb29raWVzLnB1c2goLi4uYXV0aENvb2tpZXMpO1xuICAgICAgICAgICAgcmV0dXJuIHsgcmVkaXJlY3QsIGNvb2tpZXMgfTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiZW1haWxcIjoge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBzZW5kVG9rZW4ocmVxdWVzdCwgb3B0aW9ucyk7XG4gICAgICAgICAgICByZXR1cm4geyAuLi5yZXNwb25zZSwgY29va2llcyB9O1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4geyByZWRpcmVjdDogc2lnbkluVXJsLCBjb29raWVzIH07XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbImdldEF1dGhvcml6YXRpb25VcmwiLCJzZW5kVG9rZW4iLCJzaWduSW4iLCJyZXF1ZXN0IiwiY29va2llcyIsIm9wdGlvbnMiLCJzaWduSW5VcmwiLCJ1cmwiLCJvcmlnaW4iLCJiYXNlUGF0aCIsInByb3ZpZGVyIiwicmVkaXJlY3QiLCJ0eXBlIiwiYXV0aENvb2tpZXMiLCJxdWVyeSIsInB1c2giLCJyZXNwb25zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/signin/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/signin/send-token.js":
/*!******************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/signin/send-token.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendToken: () => (/* binding */ sendToken)\n/* harmony export */ });\n/* harmony import */ var _utils_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/web.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n\n\n/**\n * Starts an e-mail login flow, by generating a token,\n * and sending it to the user's e-mail (with the help of a DB adapter).\n * At the end, it returns a redirect to the `verify-request` page.\n */ async function sendToken(request, options) {\n    const { body } = request;\n    const { provider, callbacks, adapter } = options;\n    const normalizer = provider.normalizeIdentifier ?? defaultNormalizer;\n    const email = normalizer(body?.email);\n    const defaultUser = {\n        id: crypto.randomUUID(),\n        email,\n        emailVerified: null\n    };\n    const user = await adapter.getUserByEmail(email) ?? defaultUser;\n    const account = {\n        providerAccountId: email,\n        userId: user.id,\n        type: \"email\",\n        provider: provider.id\n    };\n    let authorized;\n    try {\n        authorized = await callbacks.signIn({\n            user,\n            account,\n            email: {\n                verificationRequest: true\n            }\n        });\n    } catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.AccessDenied(e);\n    }\n    if (!authorized) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.AccessDenied(\"AccessDenied\");\n    if (typeof authorized === \"string\") {\n        return {\n            redirect: await callbacks.redirect({\n                url: authorized,\n                baseUrl: options.url.origin\n            })\n        };\n    }\n    const { callbackUrl, theme } = options;\n    const token = await provider.generateVerificationToken?.() ?? (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.randomString)(32);\n    const ONE_DAY_IN_SECONDS = 86400;\n    const expires = new Date(Date.now() + (provider.maxAge ?? ONE_DAY_IN_SECONDS) * 1000);\n    const secret = provider.secret ?? options.secret;\n    const baseUrl = new URL(options.basePath, options.url.origin);\n    const sendRequest = provider.sendVerificationRequest({\n        identifier: email,\n        token,\n        expires,\n        url: `${baseUrl}/callback/${provider.id}?${new URLSearchParams({\n            callbackUrl,\n            token,\n            email\n        })}`,\n        provider,\n        theme,\n        request: (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.toRequest)(request)\n    });\n    const createToken = adapter.createVerificationToken?.({\n        identifier: email,\n        token: await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.createHash)(`${token}${secret}`),\n        expires\n    });\n    await Promise.all([\n        sendRequest,\n        createToken\n    ]);\n    return {\n        redirect: `${baseUrl}/verify-request?${new URLSearchParams({\n            provider: provider.id,\n            type: provider.type\n        })}`\n    };\n}\nfunction defaultNormalizer(email) {\n    if (!email) throw new Error(\"Missing email from request body.\");\n    // Get the first two elements only,\n    // separated by `@` from user input.\n    let [local, domain] = email.toLowerCase().trim().split(\"@\");\n    // The part before \"@\" can contain a \",\"\n    // but we remove it on the domain part\n    domain = domain.split(\",\")[0];\n    return `${local}@${domain}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25pbi9zZW5kLXRva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5RTtBQUN2QjtBQUNsRDs7OztDQUlDLEdBQ00sZUFBZUksVUFBVUMsT0FBTyxFQUFFQyxPQUFPO0lBQzVDLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEdBQUdGO0lBQ2pCLE1BQU0sRUFBRUcsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sRUFBRSxHQUFHSjtJQUN6QyxNQUFNSyxhQUFhSCxTQUFTSSxtQkFBbUIsSUFBSUM7SUFDbkQsTUFBTUMsUUFBUUgsV0FBV0osTUFBTU87SUFDL0IsTUFBTUMsY0FBYztRQUFFQyxJQUFJQyxPQUFPQyxVQUFVO1FBQUlKO1FBQU9LLGVBQWU7SUFBSztJQUMxRSxNQUFNQyxPQUFPLE1BQU9WLFFBQVFXLGNBQWMsQ0FBQ1AsVUFBV0M7SUFDdEQsTUFBTU8sVUFBVTtRQUNaQyxtQkFBbUJUO1FBQ25CVSxRQUFRSixLQUFLSixFQUFFO1FBQ2ZTLE1BQU07UUFDTmpCLFVBQVVBLFNBQVNRLEVBQUU7SUFDekI7SUFDQSxJQUFJVTtJQUNKLElBQUk7UUFDQUEsYUFBYSxNQUFNakIsVUFBVWtCLE1BQU0sQ0FBQztZQUNoQ1A7WUFDQUU7WUFDQVIsT0FBTztnQkFBRWMscUJBQXFCO1lBQUs7UUFDdkM7SUFDSixFQUNBLE9BQU9DLEdBQUc7UUFDTixNQUFNLElBQUkxQixvREFBWUEsQ0FBQzBCO0lBQzNCO0lBQ0EsSUFBSSxDQUFDSCxZQUNELE1BQU0sSUFBSXZCLG9EQUFZQSxDQUFDO0lBQzNCLElBQUksT0FBT3VCLGVBQWUsVUFBVTtRQUNoQyxPQUFPO1lBQ0hJLFVBQVUsTUFBTXJCLFVBQVVxQixRQUFRLENBQUM7Z0JBQy9CQyxLQUFLTDtnQkFDTE0sU0FBUzFCLFFBQVF5QixHQUFHLENBQUNFLE1BQU07WUFDL0I7UUFDSjtJQUNKO0lBQ0EsTUFBTSxFQUFFQyxXQUFXLEVBQUVDLEtBQUssRUFBRSxHQUFHN0I7SUFDL0IsTUFBTThCLFFBQVEsTUFBTzVCLFNBQVM2Qix5QkFBeUIsUUFBU3BDLDJEQUFZQSxDQUFDO0lBQzdFLE1BQU1xQyxxQkFBcUI7SUFDM0IsTUFBTUMsVUFBVSxJQUFJQyxLQUFLQSxLQUFLQyxHQUFHLEtBQUssQ0FBQ2pDLFNBQVNrQyxNQUFNLElBQUlKLGtCQUFpQixJQUFLO0lBQ2hGLE1BQU1LLFNBQVNuQyxTQUFTbUMsTUFBTSxJQUFJckMsUUFBUXFDLE1BQU07SUFDaEQsTUFBTVgsVUFBVSxJQUFJWSxJQUFJdEMsUUFBUXVDLFFBQVEsRUFBRXZDLFFBQVF5QixHQUFHLENBQUNFLE1BQU07SUFDNUQsTUFBTWEsY0FBY3RDLFNBQVN1Qyx1QkFBdUIsQ0FBQztRQUNqREMsWUFBWWxDO1FBQ1pzQjtRQUNBRztRQUNBUixLQUFLLENBQUMsRUFBRUMsUUFBUSxVQUFVLEVBQUV4QixTQUFTUSxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUlpQyxnQkFBZ0I7WUFDM0RmO1lBQ0FFO1lBQ0F0QjtRQUNKLEdBQUcsQ0FBQztRQUNKTjtRQUNBMkI7UUFDQTlCLFNBQVNILHdEQUFTQSxDQUFDRztJQUN2QjtJQUNBLE1BQU02QyxjQUFjeEMsUUFBUXlDLHVCQUF1QixHQUFHO1FBQ2xESCxZQUFZbEM7UUFDWnNCLE9BQU8sTUFBTXBDLHlEQUFVQSxDQUFDLENBQUMsRUFBRW9DLE1BQU0sRUFBRU8sT0FBTyxDQUFDO1FBQzNDSjtJQUNKO0lBQ0EsTUFBTWEsUUFBUUMsR0FBRyxDQUFDO1FBQUNQO1FBQWFJO0tBQVk7SUFDNUMsT0FBTztRQUNIcEIsVUFBVSxDQUFDLEVBQUVFLFFBQVEsZ0JBQWdCLEVBQUUsSUFBSWlCLGdCQUFnQjtZQUN2RHpDLFVBQVVBLFNBQVNRLEVBQUU7WUFDckJTLE1BQU1qQixTQUFTaUIsSUFBSTtRQUN2QixHQUFHLENBQUM7SUFDUjtBQUNKO0FBQ0EsU0FBU1osa0JBQWtCQyxLQUFLO0lBQzVCLElBQUksQ0FBQ0EsT0FDRCxNQUFNLElBQUl3QyxNQUFNO0lBQ3BCLG1DQUFtQztJQUNuQyxvQ0FBb0M7SUFDcEMsSUFBSSxDQUFDQyxPQUFPQyxPQUFPLEdBQUcxQyxNQUFNMkMsV0FBVyxHQUFHQyxJQUFJLEdBQUdDLEtBQUssQ0FBQztJQUN2RCx3Q0FBd0M7SUFDeEMsc0NBQXNDO0lBQ3RDSCxTQUFTQSxPQUFPRyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7SUFDN0IsT0FBTyxDQUFDLEVBQUVKLE1BQU0sQ0FBQyxFQUFFQyxPQUFPLENBQUM7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvc2lnbmluL3NlbmQtdG9rZW4uanM/Njk3NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVIYXNoLCByYW5kb21TdHJpbmcsIHRvUmVxdWVzdCB9IGZyb20gXCIuLi8uLi91dGlscy93ZWIuanNcIjtcbmltcG9ydCB7IEFjY2Vzc0RlbmllZCB9IGZyb20gXCIuLi8uLi8uLi9lcnJvcnMuanNcIjtcbi8qKlxuICogU3RhcnRzIGFuIGUtbWFpbCBsb2dpbiBmbG93LCBieSBnZW5lcmF0aW5nIGEgdG9rZW4sXG4gKiBhbmQgc2VuZGluZyBpdCB0byB0aGUgdXNlcidzIGUtbWFpbCAod2l0aCB0aGUgaGVscCBvZiBhIERCIGFkYXB0ZXIpLlxuICogQXQgdGhlIGVuZCwgaXQgcmV0dXJucyBhIHJlZGlyZWN0IHRvIHRoZSBgdmVyaWZ5LXJlcXVlc3RgIHBhZ2UuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZW5kVG9rZW4ocmVxdWVzdCwgb3B0aW9ucykge1xuICAgIGNvbnN0IHsgYm9keSB9ID0gcmVxdWVzdDtcbiAgICBjb25zdCB7IHByb3ZpZGVyLCBjYWxsYmFja3MsIGFkYXB0ZXIgfSA9IG9wdGlvbnM7XG4gICAgY29uc3Qgbm9ybWFsaXplciA9IHByb3ZpZGVyLm5vcm1hbGl6ZUlkZW50aWZpZXIgPz8gZGVmYXVsdE5vcm1hbGl6ZXI7XG4gICAgY29uc3QgZW1haWwgPSBub3JtYWxpemVyKGJvZHk/LmVtYWlsKTtcbiAgICBjb25zdCBkZWZhdWx0VXNlciA9IHsgaWQ6IGNyeXB0by5yYW5kb21VVUlEKCksIGVtYWlsLCBlbWFpbFZlcmlmaWVkOiBudWxsIH07XG4gICAgY29uc3QgdXNlciA9IChhd2FpdCBhZGFwdGVyLmdldFVzZXJCeUVtYWlsKGVtYWlsKSkgPz8gZGVmYXVsdFVzZXI7XG4gICAgY29uc3QgYWNjb3VudCA9IHtcbiAgICAgICAgcHJvdmlkZXJBY2NvdW50SWQ6IGVtYWlsLFxuICAgICAgICB1c2VySWQ6IHVzZXIuaWQsXG4gICAgICAgIHR5cGU6IFwiZW1haWxcIixcbiAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVyLmlkLFxuICAgIH07XG4gICAgbGV0IGF1dGhvcml6ZWQ7XG4gICAgdHJ5IHtcbiAgICAgICAgYXV0aG9yaXplZCA9IGF3YWl0IGNhbGxiYWNrcy5zaWduSW4oe1xuICAgICAgICAgICAgdXNlcixcbiAgICAgICAgICAgIGFjY291bnQsXG4gICAgICAgICAgICBlbWFpbDogeyB2ZXJpZmljYXRpb25SZXF1ZXN0OiB0cnVlIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyBuZXcgQWNjZXNzRGVuaWVkKGUpO1xuICAgIH1cbiAgICBpZiAoIWF1dGhvcml6ZWQpXG4gICAgICAgIHRocm93IG5ldyBBY2Nlc3NEZW5pZWQoXCJBY2Nlc3NEZW5pZWRcIik7XG4gICAgaWYgKHR5cGVvZiBhdXRob3JpemVkID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZWRpcmVjdDogYXdhaXQgY2FsbGJhY2tzLnJlZGlyZWN0KHtcbiAgICAgICAgICAgICAgICB1cmw6IGF1dGhvcml6ZWQsXG4gICAgICAgICAgICAgICAgYmFzZVVybDogb3B0aW9ucy51cmwub3JpZ2luLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IHsgY2FsbGJhY2tVcmwsIHRoZW1lIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHRva2VuID0gKGF3YWl0IHByb3ZpZGVyLmdlbmVyYXRlVmVyaWZpY2F0aW9uVG9rZW4/LigpKSA/PyByYW5kb21TdHJpbmcoMzIpO1xuICAgIGNvbnN0IE9ORV9EQVlfSU5fU0VDT05EUyA9IDg2NDAwO1xuICAgIGNvbnN0IGV4cGlyZXMgPSBuZXcgRGF0ZShEYXRlLm5vdygpICsgKHByb3ZpZGVyLm1heEFnZSA/PyBPTkVfREFZX0lOX1NFQ09ORFMpICogMTAwMCk7XG4gICAgY29uc3Qgc2VjcmV0ID0gcHJvdmlkZXIuc2VjcmV0ID8/IG9wdGlvbnMuc2VjcmV0O1xuICAgIGNvbnN0IGJhc2VVcmwgPSBuZXcgVVJMKG9wdGlvbnMuYmFzZVBhdGgsIG9wdGlvbnMudXJsLm9yaWdpbik7XG4gICAgY29uc3Qgc2VuZFJlcXVlc3QgPSBwcm92aWRlci5zZW5kVmVyaWZpY2F0aW9uUmVxdWVzdCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGVtYWlsLFxuICAgICAgICB0b2tlbixcbiAgICAgICAgZXhwaXJlcyxcbiAgICAgICAgdXJsOiBgJHtiYXNlVXJsfS9jYWxsYmFjay8ke3Byb3ZpZGVyLmlkfT8ke25ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgICAgICAgY2FsbGJhY2tVcmwsXG4gICAgICAgICAgICB0b2tlbixcbiAgICAgICAgICAgIGVtYWlsLFxuICAgICAgICB9KX1gLFxuICAgICAgICBwcm92aWRlcixcbiAgICAgICAgdGhlbWUsXG4gICAgICAgIHJlcXVlc3Q6IHRvUmVxdWVzdChyZXF1ZXN0KSxcbiAgICB9KTtcbiAgICBjb25zdCBjcmVhdGVUb2tlbiA9IGFkYXB0ZXIuY3JlYXRlVmVyaWZpY2F0aW9uVG9rZW4/Lih7XG4gICAgICAgIGlkZW50aWZpZXI6IGVtYWlsLFxuICAgICAgICB0b2tlbjogYXdhaXQgY3JlYXRlSGFzaChgJHt0b2tlbn0ke3NlY3JldH1gKSxcbiAgICAgICAgZXhwaXJlcyxcbiAgICB9KTtcbiAgICBhd2FpdCBQcm9taXNlLmFsbChbc2VuZFJlcXVlc3QsIGNyZWF0ZVRva2VuXSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVkaXJlY3Q6IGAke2Jhc2VVcmx9L3ZlcmlmeS1yZXF1ZXN0PyR7bmV3IFVSTFNlYXJjaFBhcmFtcyh7XG4gICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXIuaWQsXG4gICAgICAgICAgICB0eXBlOiBwcm92aWRlci50eXBlLFxuICAgICAgICB9KX1gLFxuICAgIH07XG59XG5mdW5jdGlvbiBkZWZhdWx0Tm9ybWFsaXplcihlbWFpbCkge1xuICAgIGlmICghZW1haWwpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgZW1haWwgZnJvbSByZXF1ZXN0IGJvZHkuXCIpO1xuICAgIC8vIEdldCB0aGUgZmlyc3QgdHdvIGVsZW1lbnRzIG9ubHksXG4gICAgLy8gc2VwYXJhdGVkIGJ5IGBAYCBmcm9tIHVzZXIgaW5wdXQuXG4gICAgbGV0IFtsb2NhbCwgZG9tYWluXSA9IGVtYWlsLnRvTG93ZXJDYXNlKCkudHJpbSgpLnNwbGl0KFwiQFwiKTtcbiAgICAvLyBUaGUgcGFydCBiZWZvcmUgXCJAXCIgY2FuIGNvbnRhaW4gYSBcIixcIlxuICAgIC8vIGJ1dCB3ZSByZW1vdmUgaXQgb24gdGhlIGRvbWFpbiBwYXJ0XG4gICAgZG9tYWluID0gZG9tYWluLnNwbGl0KFwiLFwiKVswXTtcbiAgICByZXR1cm4gYCR7bG9jYWx9QCR7ZG9tYWlufWA7XG59XG4iXSwibmFtZXMiOlsiY3JlYXRlSGFzaCIsInJhbmRvbVN0cmluZyIsInRvUmVxdWVzdCIsIkFjY2Vzc0RlbmllZCIsInNlbmRUb2tlbiIsInJlcXVlc3QiLCJvcHRpb25zIiwiYm9keSIsInByb3ZpZGVyIiwiY2FsbGJhY2tzIiwiYWRhcHRlciIsIm5vcm1hbGl6ZXIiLCJub3JtYWxpemVJZGVudGlmaWVyIiwiZGVmYXVsdE5vcm1hbGl6ZXIiLCJlbWFpbCIsImRlZmF1bHRVc2VyIiwiaWQiLCJjcnlwdG8iLCJyYW5kb21VVUlEIiwiZW1haWxWZXJpZmllZCIsInVzZXIiLCJnZXRVc2VyQnlFbWFpbCIsImFjY291bnQiLCJwcm92aWRlckFjY291bnRJZCIsInVzZXJJZCIsInR5cGUiLCJhdXRob3JpemVkIiwic2lnbkluIiwidmVyaWZpY2F0aW9uUmVxdWVzdCIsImUiLCJyZWRpcmVjdCIsInVybCIsImJhc2VVcmwiLCJvcmlnaW4iLCJjYWxsYmFja1VybCIsInRoZW1lIiwidG9rZW4iLCJnZW5lcmF0ZVZlcmlmaWNhdGlvblRva2VuIiwiT05FX0RBWV9JTl9TRUNPTkRTIiwiZXhwaXJlcyIsIkRhdGUiLCJub3ciLCJtYXhBZ2UiLCJzZWNyZXQiLCJVUkwiLCJiYXNlUGF0aCIsInNlbmRSZXF1ZXN0Iiwic2VuZFZlcmlmaWNhdGlvblJlcXVlc3QiLCJpZGVudGlmaWVyIiwiVVJMU2VhcmNoUGFyYW1zIiwiY3JlYXRlVG9rZW4iLCJjcmVhdGVWZXJpZmljYXRpb25Ub2tlbiIsIlByb21pc2UiLCJhbGwiLCJFcnJvciIsImxvY2FsIiwiZG9tYWluIiwidG9Mb3dlckNhc2UiLCJ0cmltIiwic3BsaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/signin/send-token.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/signout.js":
/*!********************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/signout.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signOut: () => (/* binding */ signOut)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n\n/**\n * Destroys the session.\n * If the session strategy is database,\n * The session is also deleted from the database.\n * In any case, the session cookie is cleared and\n * {@link EventCallbacks.signOut} is emitted.\n */ async function signOut(cookies, sessionStore, options) {\n    const { jwt, events, callbackUrl: redirect, logger, session } = options;\n    const sessionToken = sessionStore.value;\n    if (!sessionToken) return {\n        redirect,\n        cookies\n    };\n    try {\n        if (session.strategy === \"jwt\") {\n            const salt = options.cookies.sessionToken.name;\n            const token = await jwt.decode({\n                ...jwt,\n                token: sessionToken,\n                salt\n            });\n            await events.signOut?.({\n                token\n            });\n        } else {\n            const session = await options.adapter?.deleteSession(sessionToken);\n            await events.signOut?.({\n                session\n            });\n        }\n    } catch (e) {\n        logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_0__.SignOutError(e));\n    }\n    cookies.push(...sessionStore.clean());\n    return {\n        redirect,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25vdXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7Ozs7OztDQU1DLEdBQ00sZUFBZUMsUUFBUUMsT0FBTyxFQUFFQyxZQUFZLEVBQUVDLE9BQU87SUFDeEQsTUFBTSxFQUFFQyxHQUFHLEVBQUVDLE1BQU0sRUFBRUMsYUFBYUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRSxHQUFHTjtJQUNoRSxNQUFNTyxlQUFlUixhQUFhUyxLQUFLO0lBQ3ZDLElBQUksQ0FBQ0QsY0FDRCxPQUFPO1FBQUVIO1FBQVVOO0lBQVE7SUFDL0IsSUFBSTtRQUNBLElBQUlRLFFBQVFHLFFBQVEsS0FBSyxPQUFPO1lBQzVCLE1BQU1DLE9BQU9WLFFBQVFGLE9BQU8sQ0FBQ1MsWUFBWSxDQUFDSSxJQUFJO1lBQzlDLE1BQU1DLFFBQVEsTUFBTVgsSUFBSVksTUFBTSxDQUFDO2dCQUFFLEdBQUdaLEdBQUc7Z0JBQUVXLE9BQU9MO2dCQUFjRztZQUFLO1lBQ25FLE1BQU1SLE9BQU9MLE9BQU8sR0FBRztnQkFBRWU7WUFBTTtRQUNuQyxPQUNLO1lBQ0QsTUFBTU4sVUFBVSxNQUFNTixRQUFRYyxPQUFPLEVBQUVDLGNBQWNSO1lBQ3JELE1BQU1MLE9BQU9MLE9BQU8sR0FBRztnQkFBRVM7WUFBUTtRQUNyQztJQUNKLEVBQ0EsT0FBT1UsR0FBRztRQUNOWCxPQUFPWSxLQUFLLENBQUMsSUFBSXJCLG9EQUFZQSxDQUFDb0I7SUFDbEM7SUFDQWxCLFFBQVFvQixJQUFJLElBQUluQixhQUFhb0IsS0FBSztJQUNsQyxPQUFPO1FBQUVmO1FBQVVOO0lBQVE7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvc2lnbm91dC5qcz84ZWZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNpZ25PdXRFcnJvciB9IGZyb20gXCIuLi8uLi9lcnJvcnMuanNcIjtcbi8qKlxuICogRGVzdHJveXMgdGhlIHNlc3Npb24uXG4gKiBJZiB0aGUgc2Vzc2lvbiBzdHJhdGVneSBpcyBkYXRhYmFzZSxcbiAqIFRoZSBzZXNzaW9uIGlzIGFsc28gZGVsZXRlZCBmcm9tIHRoZSBkYXRhYmFzZS5cbiAqIEluIGFueSBjYXNlLCB0aGUgc2Vzc2lvbiBjb29raWUgaXMgY2xlYXJlZCBhbmRcbiAqIHtAbGluayBFdmVudENhbGxiYWNrcy5zaWduT3V0fSBpcyBlbWl0dGVkLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbk91dChjb29raWVzLCBzZXNzaW9uU3RvcmUsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGp3dCwgZXZlbnRzLCBjYWxsYmFja1VybDogcmVkaXJlY3QsIGxvZ2dlciwgc2Vzc2lvbiB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBzZXNzaW9uVG9rZW4gPSBzZXNzaW9uU3RvcmUudmFsdWU7XG4gICAgaWYgKCFzZXNzaW9uVG9rZW4pXG4gICAgICAgIHJldHVybiB7IHJlZGlyZWN0LCBjb29raWVzIH07XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHNlc3Npb24uc3RyYXRlZ3kgPT09IFwiand0XCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHNhbHQgPSBvcHRpb25zLmNvb2tpZXMuc2Vzc2lvblRva2VuLm5hbWU7XG4gICAgICAgICAgICBjb25zdCB0b2tlbiA9IGF3YWl0IGp3dC5kZWNvZGUoeyAuLi5qd3QsIHRva2VuOiBzZXNzaW9uVG9rZW4sIHNhbHQgfSk7XG4gICAgICAgICAgICBhd2FpdCBldmVudHMuc2lnbk91dD8uKHsgdG9rZW4gfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgb3B0aW9ucy5hZGFwdGVyPy5kZWxldGVTZXNzaW9uKHNlc3Npb25Ub2tlbik7XG4gICAgICAgICAgICBhd2FpdCBldmVudHMuc2lnbk91dD8uKHsgc2Vzc2lvbiB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBsb2dnZXIuZXJyb3IobmV3IFNpZ25PdXRFcnJvcihlKSk7XG4gICAgfVxuICAgIGNvb2tpZXMucHVzaCguLi5zZXNzaW9uU3RvcmUuY2xlYW4oKSk7XG4gICAgcmV0dXJuIHsgcmVkaXJlY3QsIGNvb2tpZXMgfTtcbn1cbiJdLCJuYW1lcyI6WyJTaWduT3V0RXJyb3IiLCJzaWduT3V0IiwiY29va2llcyIsInNlc3Npb25TdG9yZSIsIm9wdGlvbnMiLCJqd3QiLCJldmVudHMiLCJjYWxsYmFja1VybCIsInJlZGlyZWN0IiwibG9nZ2VyIiwic2Vzc2lvbiIsInNlc3Npb25Ub2tlbiIsInZhbHVlIiwic3RyYXRlZ3kiLCJzYWx0IiwibmFtZSIsInRva2VuIiwiZGVjb2RlIiwiYWRhcHRlciIsImRlbGV0ZVNlc3Npb24iLCJlIiwiZXJyb3IiLCJwdXNoIiwiY2xlYW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/signout.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/actions/webauthn-options.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/webauthn-options.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webAuthnOptions: () => (/* binding */ webAuthnOptions)\n/* harmony export */ });\n/* harmony import */ var _utils_session_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/session.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/session.js\");\n/* harmony import */ var _utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/webauthn-utils.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/webauthn-utils.js\");\n\n\n/**\n * Returns authentication or registration options for a WebAuthn flow\n * depending on the parameters provided.\n */ async function webAuthnOptions(request, options, sessionStore, cookies) {\n    // Return an error if the adapter is missing or if the provider\n    // is not a webauthn provider.\n    const narrowOptions = (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__.assertInternalOptionsWebAuthn)(options);\n    const { provider } = narrowOptions;\n    // Extract the action from the query parameters\n    const { action } = request.query ?? {};\n    // Action must be either \"register\", \"authenticate\", or undefined\n    if (action !== \"register\" && action !== \"authenticate\" && typeof action !== \"undefined\") {\n        return {\n            status: 400,\n            body: {\n                error: \"Invalid action\"\n            },\n            cookies,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        };\n    }\n    // Get the user info from the session\n    const sessionUser = await (0,_utils_session_js__WEBPACK_IMPORTED_MODULE_0__.getLoggedInUser)(options, sessionStore);\n    // Extract user info from request\n    // If session user exists, we don't need to call getUserInfo\n    const getUserInfoResponse = sessionUser ? {\n        user: sessionUser,\n        exists: true\n    } : await provider.getUserInfo(options, request);\n    const userInfo = getUserInfoResponse?.user;\n    // Make a decision on what kind of webauthn options to return\n    const decision = (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__.inferWebAuthnOptions)(action, !!sessionUser, getUserInfoResponse);\n    switch(decision){\n        case \"authenticate\":\n            return (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__.getAuthenticationResponse)(narrowOptions, request, userInfo, cookies);\n        case \"register\":\n            if (typeof userInfo?.email === \"string\") {\n                return (0,_utils_webauthn_utils_js__WEBPACK_IMPORTED_MODULE_1__.getRegistrationResponse)(narrowOptions, request, userInfo, cookies);\n            }\n        default:\n            return {\n                status: 400,\n                body: {\n                    error: \"Invalid request\"\n                },\n                cookies,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3dlYmF1dGhuLW9wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEO0FBQytGO0FBQ3JKOzs7Q0FHQyxHQUNNLGVBQWVLLGdCQUFnQkMsT0FBTyxFQUFFQyxPQUFPLEVBQUVDLFlBQVksRUFBRUMsT0FBTztJQUN6RSwrREFBK0Q7SUFDL0QsOEJBQThCO0lBQzlCLE1BQU1DLGdCQUFnQlQsdUZBQTZCQSxDQUFDTTtJQUNwRCxNQUFNLEVBQUVJLFFBQVEsRUFBRSxHQUFHRDtJQUNyQiwrQ0FBK0M7SUFDL0MsTUFBTSxFQUFFRSxNQUFNLEVBQUUsR0FBSU4sUUFBUU8sS0FBSyxJQUFJLENBQUM7SUFDdEMsaUVBQWlFO0lBQ2pFLElBQUlELFdBQVcsY0FBY0EsV0FBVyxrQkFBa0IsT0FBT0EsV0FBVyxhQUFhO1FBQ3JGLE9BQU87WUFDSEUsUUFBUTtZQUNSQyxNQUFNO2dCQUFFQyxPQUFPO1lBQWlCO1lBQ2hDUDtZQUNBUSxTQUFTO2dCQUNMLGdCQUFnQjtZQUNwQjtRQUNKO0lBQ0o7SUFDQSxxQ0FBcUM7SUFDckMsTUFBTUMsY0FBYyxNQUFNbEIsa0VBQWVBLENBQUNPLFNBQVNDO0lBQ25ELGlDQUFpQztJQUNqQyw0REFBNEQ7SUFDNUQsTUFBTVcsc0JBQXNCRCxjQUFjO1FBQ3RDRSxNQUFNRjtRQUNORyxRQUFRO0lBQ1osSUFBSSxNQUFNVixTQUFTVyxXQUFXLENBQUNmLFNBQVNEO0lBQ3hDLE1BQU1pQixXQUFXSixxQkFBcUJDO0lBQ3RDLDZEQUE2RDtJQUM3RCxNQUFNSSxXQUFXdEIsOEVBQW9CQSxDQUFDVSxRQUFRLENBQUMsQ0FBQ00sYUFBYUM7SUFDN0QsT0FBUUs7UUFDSixLQUFLO1lBQ0QsT0FBT3JCLG1GQUF5QkEsQ0FBQ08sZUFBZUosU0FBU2lCLFVBQVVkO1FBQ3ZFLEtBQUs7WUFDRCxJQUFJLE9BQU9jLFVBQVVFLFVBQVUsVUFBVTtnQkFDckMsT0FBT3JCLGlGQUF1QkEsQ0FBQ00sZUFBZUosU0FBU2lCLFVBQVVkO1lBQ3JFO1FBQ0o7WUFDSSxPQUFPO2dCQUNISyxRQUFRO2dCQUNSQyxNQUFNO29CQUFFQyxPQUFPO2dCQUFrQjtnQkFDakNQO2dCQUNBUSxTQUFTO29CQUNMLGdCQUFnQjtnQkFDcEI7WUFDSjtJQUNSO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvd2ViYXV0aG4tb3B0aW9ucy5qcz9kODAzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldExvZ2dlZEluVXNlciB9IGZyb20gXCIuLi91dGlscy9zZXNzaW9uLmpzXCI7XG5pbXBvcnQgeyBhc3NlcnRJbnRlcm5hbE9wdGlvbnNXZWJBdXRobiwgaW5mZXJXZWJBdXRobk9wdGlvbnMsIGdldEF1dGhlbnRpY2F0aW9uUmVzcG9uc2UsIGdldFJlZ2lzdHJhdGlvblJlc3BvbnNlIH0gZnJvbSBcIi4uL3V0aWxzL3dlYmF1dGhuLXV0aWxzLmpzXCI7XG4vKipcbiAqIFJldHVybnMgYXV0aGVudGljYXRpb24gb3IgcmVnaXN0cmF0aW9uIG9wdGlvbnMgZm9yIGEgV2ViQXV0aG4gZmxvd1xuICogZGVwZW5kaW5nIG9uIHRoZSBwYXJhbWV0ZXJzIHByb3ZpZGVkLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gd2ViQXV0aG5PcHRpb25zKHJlcXVlc3QsIG9wdGlvbnMsIHNlc3Npb25TdG9yZSwgY29va2llcykge1xuICAgIC8vIFJldHVybiBhbiBlcnJvciBpZiB0aGUgYWRhcHRlciBpcyBtaXNzaW5nIG9yIGlmIHRoZSBwcm92aWRlclxuICAgIC8vIGlzIG5vdCBhIHdlYmF1dGhuIHByb3ZpZGVyLlxuICAgIGNvbnN0IG5hcnJvd09wdGlvbnMgPSBhc3NlcnRJbnRlcm5hbE9wdGlvbnNXZWJBdXRobihvcHRpb25zKTtcbiAgICBjb25zdCB7IHByb3ZpZGVyIH0gPSBuYXJyb3dPcHRpb25zO1xuICAgIC8vIEV4dHJhY3QgdGhlIGFjdGlvbiBmcm9tIHRoZSBxdWVyeSBwYXJhbWV0ZXJzXG4gICAgY29uc3QgeyBhY3Rpb24gfSA9IChyZXF1ZXN0LnF1ZXJ5ID8/IHt9KTtcbiAgICAvLyBBY3Rpb24gbXVzdCBiZSBlaXRoZXIgXCJyZWdpc3RlclwiLCBcImF1dGhlbnRpY2F0ZVwiLCBvciB1bmRlZmluZWRcbiAgICBpZiAoYWN0aW9uICE9PSBcInJlZ2lzdGVyXCIgJiYgYWN0aW9uICE9PSBcImF1dGhlbnRpY2F0ZVwiICYmIHR5cGVvZiBhY3Rpb24gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN0YXR1czogNDAwLFxuICAgICAgICAgICAgYm9keTogeyBlcnJvcjogXCJJbnZhbGlkIGFjdGlvblwiIH0sXG4gICAgICAgICAgICBjb29raWVzLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIEdldCB0aGUgdXNlciBpbmZvIGZyb20gdGhlIHNlc3Npb25cbiAgICBjb25zdCBzZXNzaW9uVXNlciA9IGF3YWl0IGdldExvZ2dlZEluVXNlcihvcHRpb25zLCBzZXNzaW9uU3RvcmUpO1xuICAgIC8vIEV4dHJhY3QgdXNlciBpbmZvIGZyb20gcmVxdWVzdFxuICAgIC8vIElmIHNlc3Npb24gdXNlciBleGlzdHMsIHdlIGRvbid0IG5lZWQgdG8gY2FsbCBnZXRVc2VySW5mb1xuICAgIGNvbnN0IGdldFVzZXJJbmZvUmVzcG9uc2UgPSBzZXNzaW9uVXNlciA/IHtcbiAgICAgICAgdXNlcjogc2Vzc2lvblVzZXIsXG4gICAgICAgIGV4aXN0czogdHJ1ZVxuICAgIH0gOiBhd2FpdCBwcm92aWRlci5nZXRVc2VySW5mbyhvcHRpb25zLCByZXF1ZXN0KTtcbiAgICBjb25zdCB1c2VySW5mbyA9IGdldFVzZXJJbmZvUmVzcG9uc2U/LnVzZXI7XG4gICAgLy8gTWFrZSBhIGRlY2lzaW9uIG9uIHdoYXQga2luZCBvZiB3ZWJhdXRobiBvcHRpb25zIHRvIHJldHVyblxuICAgIGNvbnN0IGRlY2lzaW9uID0gaW5mZXJXZWJBdXRobk9wdGlvbnMoYWN0aW9uLCAhIXNlc3Npb25Vc2VyLCBnZXRVc2VySW5mb1Jlc3BvbnNlKTtcbiAgICBzd2l0Y2ggKGRlY2lzaW9uKSB7XG4gICAgICAgIGNhc2UgXCJhdXRoZW50aWNhdGVcIjpcbiAgICAgICAgICAgIHJldHVybiBnZXRBdXRoZW50aWNhdGlvblJlc3BvbnNlKG5hcnJvd09wdGlvbnMsIHJlcXVlc3QsIHVzZXJJbmZvLCBjb29raWVzKTtcbiAgICAgICAgY2FzZSBcInJlZ2lzdGVyXCI6XG4gICAgICAgICAgICBpZiAodHlwZW9mIHVzZXJJbmZvPy5lbWFpbCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRSZWdpc3RyYXRpb25SZXNwb25zZShuYXJyb3dPcHRpb25zLCByZXF1ZXN0LCB1c2VySW5mbywgY29va2llcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHN0YXR1czogNDAwLFxuICAgICAgICAgICAgICAgIGJvZHk6IHsgZXJyb3I6IFwiSW52YWxpZCByZXF1ZXN0XCIgfSxcbiAgICAgICAgICAgICAgICBjb29raWVzLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJnZXRMb2dnZWRJblVzZXIiLCJhc3NlcnRJbnRlcm5hbE9wdGlvbnNXZWJBdXRobiIsImluZmVyV2ViQXV0aG5PcHRpb25zIiwiZ2V0QXV0aGVudGljYXRpb25SZXNwb25zZSIsImdldFJlZ2lzdHJhdGlvblJlc3BvbnNlIiwid2ViQXV0aG5PcHRpb25zIiwicmVxdWVzdCIsIm9wdGlvbnMiLCJzZXNzaW9uU3RvcmUiLCJjb29raWVzIiwibmFycm93T3B0aW9ucyIsInByb3ZpZGVyIiwiYWN0aW9uIiwicXVlcnkiLCJzdGF0dXMiLCJib2R5IiwiZXJyb3IiLCJoZWFkZXJzIiwic2Vzc2lvblVzZXIiLCJnZXRVc2VySW5mb1Jlc3BvbnNlIiwidXNlciIsImV4aXN0cyIsImdldFVzZXJJbmZvIiwidXNlckluZm8iLCJkZWNpc2lvbiIsImVtYWlsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/actions/webauthn-options.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/@auth/core/lib/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthInternal: () => (/* binding */ AuthInternal),\n/* harmony export */   raw: () => (/* binding */ raw),\n/* harmony export */   skipCSRFCheck: () => (/* binding */ skipCSRFCheck)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_cookie_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/cookie.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ \"(action-browser)/./node_modules/@auth/core/lib/init.js\");\n/* harmony import */ var _pages_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/index.js */ \"(action-browser)/./node_modules/@auth/core/lib/pages/index.js\");\n/* harmony import */ var _actions_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions/index.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/index.js\");\n/* harmony import */ var _actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions/callback/oauth/csrf-token.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js\");\n\n\n\n\n\n\n/** @internal */ async function AuthInternal(request, authOptions) {\n    const { action, providerId, error, method } = request;\n    const csrfDisabled = authOptions.skipCSRFCheck === skipCSRFCheck;\n    const { options, cookies } = await (0,_init_js__WEBPACK_IMPORTED_MODULE_2__.init)({\n        authOptions,\n        action,\n        providerId,\n        url: request.url,\n        callbackUrl: request.body?.callbackUrl ?? request.query?.callbackUrl,\n        csrfToken: request.body?.csrfToken,\n        cookies: request.cookies,\n        isPost: method === \"POST\",\n        csrfDisabled\n    });\n    const sessionStore = new _utils_cookie_js__WEBPACK_IMPORTED_MODULE_1__.SessionStore(options.cookies.sessionToken, request.cookies, options.logger);\n    if (method === \"GET\") {\n        const render = (0,_pages_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n            ...options,\n            query: request.query,\n            cookies\n        });\n        switch(action){\n            case \"callback\":\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.callback(request, options, sessionStore, cookies);\n            case \"csrf\":\n                return render.csrf(csrfDisabled, options, cookies);\n            case \"error\":\n                return render.error(error);\n            case \"providers\":\n                return render.providers(options.providers);\n            case \"session\":\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.session(options, sessionStore, cookies);\n            case \"signin\":\n                return render.signin(providerId, error);\n            case \"signout\":\n                return render.signout();\n            case \"verify-request\":\n                return render.verifyRequest();\n            case \"webauthn-options\":\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.webAuthnOptions(request, options, sessionStore, cookies);\n            default:\n        }\n    } else {\n        const { csrfTokenVerified } = options;\n        switch(action){\n            case \"callback\":\n                if (options.provider.type === \"credentials\") // Verified CSRF Token required for credentials providers only\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.callback(request, options, sessionStore, cookies);\n            case \"session\":\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.session(options, sessionStore, cookies, true, request.body?.data);\n            case \"signin\":\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.signIn(request, cookies, options);\n            case \"signout\":\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.signOut(cookies, sessionStore, options);\n            default:\n        }\n    }\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.UnknownAction(`Cannot handle action: ${action}`);\n}\n/**\n * :::danger\n * This option is intended for framework authors.\n * :::\n *\n * Auth.js comes with built-in {@link https://authjs.dev/concepts/security#csrf CSRF} protection, but\n * if you are implementing a framework that is already protected against CSRF attacks, you can skip this check by\n * passing this value to {@link AuthConfig.skipCSRFCheck}.\n */ const skipCSRFCheck = Symbol(\"skip-csrf-check\");\n/**\n * :::danger\n * This option is intended for framework authors.\n * :::\n *\n * Auth.js returns a web standard {@link Response} by default, but\n * if you are implementing a framework you might want to get access to the raw internal response\n * by passing this value to {@link AuthConfig.raw}.\n */ const raw = Symbol(\"return-type-raw\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkM7QUFDSTtBQUNoQjtBQUNTO0FBQ0k7QUFDd0I7QUFDdEUsY0FBYyxHQUNQLGVBQWVNLGFBQWFDLE9BQU8sRUFBRUMsV0FBVztJQUNuRCxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsVUFBVSxFQUFFQyxLQUFLLEVBQUVDLE1BQU0sRUFBRSxHQUFHTDtJQUM5QyxNQUFNTSxlQUFlTCxZQUFZTSxhQUFhLEtBQUtBO0lBQ25ELE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUUsR0FBRyxNQUFNZCw4Q0FBSUEsQ0FBQztRQUNwQ007UUFDQUM7UUFDQUM7UUFDQU8sS0FBS1YsUUFBUVUsR0FBRztRQUNoQkMsYUFBYVgsUUFBUVksSUFBSSxFQUFFRCxlQUFlWCxRQUFRYSxLQUFLLEVBQUVGO1FBQ3pERyxXQUFXZCxRQUFRWSxJQUFJLEVBQUVFO1FBQ3pCTCxTQUFTVCxRQUFRUyxPQUFPO1FBQ3hCTSxRQUFRVixXQUFXO1FBQ25CQztJQUNKO0lBQ0EsTUFBTVUsZUFBZSxJQUFJdEIsMERBQVlBLENBQUNjLFFBQVFDLE9BQU8sQ0FBQ1EsWUFBWSxFQUFFakIsUUFBUVMsT0FBTyxFQUFFRCxRQUFRVSxNQUFNO0lBQ25HLElBQUliLFdBQVcsT0FBTztRQUNsQixNQUFNYyxTQUFTdkIsMkRBQVVBLENBQUM7WUFBRSxHQUFHWSxPQUFPO1lBQUVLLE9BQU9iLFFBQVFhLEtBQUs7WUFBRUo7UUFBUTtRQUN0RSxPQUFRUDtZQUNKLEtBQUs7Z0JBQ0QsT0FBTyxNQUFNTCx1REFBZ0IsQ0FBQ0csU0FBU1EsU0FBU1EsY0FBY1A7WUFDbEUsS0FBSztnQkFDRCxPQUFPVSxPQUFPRSxJQUFJLENBQUNmLGNBQWNFLFNBQVNDO1lBQzlDLEtBQUs7Z0JBQ0QsT0FBT1UsT0FBT2YsS0FBSyxDQUFDQTtZQUN4QixLQUFLO2dCQUNELE9BQU9lLE9BQU9HLFNBQVMsQ0FBQ2QsUUFBUWMsU0FBUztZQUM3QyxLQUFLO2dCQUNELE9BQU8sTUFBTXpCLHNEQUFlLENBQUNXLFNBQVNRLGNBQWNQO1lBQ3hELEtBQUs7Z0JBQ0QsT0FBT1UsT0FBT0ssTUFBTSxDQUFDckIsWUFBWUM7WUFDckMsS0FBSztnQkFDRCxPQUFPZSxPQUFPTSxPQUFPO1lBQ3pCLEtBQUs7Z0JBQ0QsT0FBT04sT0FBT08sYUFBYTtZQUMvQixLQUFLO2dCQUNELE9BQU8sTUFBTTdCLDhEQUF1QixDQUFDRyxTQUFTUSxTQUFTUSxjQUFjUDtZQUN6RTtRQUNKO0lBQ0osT0FDSztRQUNELE1BQU0sRUFBRW1CLGlCQUFpQixFQUFFLEdBQUdwQjtRQUM5QixPQUFRTjtZQUNKLEtBQUs7Z0JBQ0QsSUFBSU0sUUFBUXFCLFFBQVEsQ0FBQ0MsSUFBSSxLQUFLLGVBQzFCLDhEQUE4RDtnQkFDOURoQyxtRkFBWUEsQ0FBQ0ksUUFBUTBCO2dCQUN6QixPQUFPLE1BQU0vQix1REFBZ0IsQ0FBQ0csU0FBU1EsU0FBU1EsY0FBY1A7WUFDbEUsS0FBSztnQkFDRFgsbUZBQVlBLENBQUNJLFFBQVEwQjtnQkFDckIsT0FBTyxNQUFNL0Isc0RBQWUsQ0FBQ1csU0FBU1EsY0FBY1AsU0FBUyxNQUFNVCxRQUFRWSxJQUFJLEVBQUVtQjtZQUNyRixLQUFLO2dCQUNEakMsbUZBQVlBLENBQUNJLFFBQVEwQjtnQkFDckIsT0FBTyxNQUFNL0IscURBQWMsQ0FBQ0csU0FBU1MsU0FBU0Q7WUFDbEQsS0FBSztnQkFDRFYsbUZBQVlBLENBQUNJLFFBQVEwQjtnQkFDckIsT0FBTyxNQUFNL0Isc0RBQWUsQ0FBQ1ksU0FBU08sY0FBY1I7WUFDeEQ7UUFDSjtJQUNKO0lBQ0EsTUFBTSxJQUFJZixxREFBYUEsQ0FBQyxDQUFDLHNCQUFzQixFQUFFUyxPQUFPLENBQUM7QUFDN0Q7QUFDQTs7Ozs7Ozs7Q0FRQyxHQUNNLE1BQU1LLGdCQUFnQjJCLE9BQU8sbUJBQW1CO0FBQ3ZEOzs7Ozs7OztDQVFDLEdBQ00sTUFBTUMsTUFBTUQsT0FBTyxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2luZGV4LmpzPzg4OTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVW5rbm93bkFjdGlvbiB9IGZyb20gXCIuLi9lcnJvcnMuanNcIjtcbmltcG9ydCB7IFNlc3Npb25TdG9yZSB9IGZyb20gXCIuL3V0aWxzL2Nvb2tpZS5qc1wiO1xuaW1wb3J0IHsgaW5pdCB9IGZyb20gXCIuL2luaXQuanNcIjtcbmltcG9ydCByZW5kZXJQYWdlIGZyb20gXCIuL3BhZ2VzL2luZGV4LmpzXCI7XG5pbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gXCIuL2FjdGlvbnMvaW5kZXguanNcIjtcbmltcG9ydCB7IHZhbGlkYXRlQ1NSRiB9IGZyb20gXCIuL2FjdGlvbnMvY2FsbGJhY2svb2F1dGgvY3NyZi10b2tlbi5qc1wiO1xuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEF1dGhJbnRlcm5hbChyZXF1ZXN0LCBhdXRoT3B0aW9ucykge1xuICAgIGNvbnN0IHsgYWN0aW9uLCBwcm92aWRlcklkLCBlcnJvciwgbWV0aG9kIH0gPSByZXF1ZXN0O1xuICAgIGNvbnN0IGNzcmZEaXNhYmxlZCA9IGF1dGhPcHRpb25zLnNraXBDU1JGQ2hlY2sgPT09IHNraXBDU1JGQ2hlY2s7XG4gICAgY29uc3QgeyBvcHRpb25zLCBjb29raWVzIH0gPSBhd2FpdCBpbml0KHtcbiAgICAgICAgYXV0aE9wdGlvbnMsXG4gICAgICAgIGFjdGlvbixcbiAgICAgICAgcHJvdmlkZXJJZCxcbiAgICAgICAgdXJsOiByZXF1ZXN0LnVybCxcbiAgICAgICAgY2FsbGJhY2tVcmw6IHJlcXVlc3QuYm9keT8uY2FsbGJhY2tVcmwgPz8gcmVxdWVzdC5xdWVyeT8uY2FsbGJhY2tVcmwsXG4gICAgICAgIGNzcmZUb2tlbjogcmVxdWVzdC5ib2R5Py5jc3JmVG9rZW4sXG4gICAgICAgIGNvb2tpZXM6IHJlcXVlc3QuY29va2llcyxcbiAgICAgICAgaXNQb3N0OiBtZXRob2QgPT09IFwiUE9TVFwiLFxuICAgICAgICBjc3JmRGlzYWJsZWQsXG4gICAgfSk7XG4gICAgY29uc3Qgc2Vzc2lvblN0b3JlID0gbmV3IFNlc3Npb25TdG9yZShvcHRpb25zLmNvb2tpZXMuc2Vzc2lvblRva2VuLCByZXF1ZXN0LmNvb2tpZXMsIG9wdGlvbnMubG9nZ2VyKTtcbiAgICBpZiAobWV0aG9kID09PSBcIkdFVFwiKSB7XG4gICAgICAgIGNvbnN0IHJlbmRlciA9IHJlbmRlclBhZ2UoeyAuLi5vcHRpb25zLCBxdWVyeTogcmVxdWVzdC5xdWVyeSwgY29va2llcyB9KTtcbiAgICAgICAgc3dpdGNoIChhY3Rpb24pIHtcbiAgICAgICAgICAgIGNhc2UgXCJjYWxsYmFja1wiOlxuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBhY3Rpb25zLmNhbGxiYWNrKHJlcXVlc3QsIG9wdGlvbnMsIHNlc3Npb25TdG9yZSwgY29va2llcyk7XG4gICAgICAgICAgICBjYXNlIFwiY3NyZlwiOlxuICAgICAgICAgICAgICAgIHJldHVybiByZW5kZXIuY3NyZihjc3JmRGlzYWJsZWQsIG9wdGlvbnMsIGNvb2tpZXMpO1xuICAgICAgICAgICAgY2FzZSBcImVycm9yXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlci5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICBjYXNlIFwicHJvdmlkZXJzXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlci5wcm92aWRlcnMob3B0aW9ucy5wcm92aWRlcnMpO1xuICAgICAgICAgICAgY2FzZSBcInNlc3Npb25cIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgYWN0aW9ucy5zZXNzaW9uKG9wdGlvbnMsIHNlc3Npb25TdG9yZSwgY29va2llcyk7XG4gICAgICAgICAgICBjYXNlIFwic2lnbmluXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlbmRlci5zaWduaW4ocHJvdmlkZXJJZCwgZXJyb3IpO1xuICAgICAgICAgICAgY2FzZSBcInNpZ25vdXRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVuZGVyLnNpZ25vdXQoKTtcbiAgICAgICAgICAgIGNhc2UgXCJ2ZXJpZnktcmVxdWVzdFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiByZW5kZXIudmVyaWZ5UmVxdWVzdCgpO1xuICAgICAgICAgICAgY2FzZSBcIndlYmF1dGhuLW9wdGlvbnNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgYWN0aW9ucy53ZWJBdXRobk9wdGlvbnMocmVxdWVzdCwgb3B0aW9ucywgc2Vzc2lvblN0b3JlLCBjb29raWVzKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHsgY3NyZlRva2VuVmVyaWZpZWQgfSA9IG9wdGlvbnM7XG4gICAgICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICAgICAgICBjYXNlIFwiY2FsbGJhY2tcIjpcbiAgICAgICAgICAgICAgICBpZiAob3B0aW9ucy5wcm92aWRlci50eXBlID09PSBcImNyZWRlbnRpYWxzXCIpXG4gICAgICAgICAgICAgICAgICAgIC8vIFZlcmlmaWVkIENTUkYgVG9rZW4gcmVxdWlyZWQgZm9yIGNyZWRlbnRpYWxzIHByb3ZpZGVycyBvbmx5XG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlQ1NSRihhY3Rpb24sIGNzcmZUb2tlblZlcmlmaWVkKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgYWN0aW9ucy5jYWxsYmFjayhyZXF1ZXN0LCBvcHRpb25zLCBzZXNzaW9uU3RvcmUsIGNvb2tpZXMpO1xuICAgICAgICAgICAgY2FzZSBcInNlc3Npb25cIjpcbiAgICAgICAgICAgICAgICB2YWxpZGF0ZUNTUkYoYWN0aW9uLCBjc3JmVG9rZW5WZXJpZmllZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGFjdGlvbnMuc2Vzc2lvbihvcHRpb25zLCBzZXNzaW9uU3RvcmUsIGNvb2tpZXMsIHRydWUsIHJlcXVlc3QuYm9keT8uZGF0YSk7XG4gICAgICAgICAgICBjYXNlIFwic2lnbmluXCI6XG4gICAgICAgICAgICAgICAgdmFsaWRhdGVDU1JGKGFjdGlvbiwgY3NyZlRva2VuVmVyaWZpZWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBhY3Rpb25zLnNpZ25JbihyZXF1ZXN0LCBjb29raWVzLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGNhc2UgXCJzaWdub3V0XCI6XG4gICAgICAgICAgICAgICAgdmFsaWRhdGVDU1JGKGFjdGlvbiwgY3NyZlRva2VuVmVyaWZpZWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBhY3Rpb25zLnNpZ25PdXQoY29va2llcywgc2Vzc2lvblN0b3JlLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IFVua25vd25BY3Rpb24oYENhbm5vdCBoYW5kbGUgYWN0aW9uOiAke2FjdGlvbn1gKTtcbn1cbi8qKlxuICogOjo6ZGFuZ2VyXG4gKiBUaGlzIG9wdGlvbiBpcyBpbnRlbmRlZCBmb3IgZnJhbWV3b3JrIGF1dGhvcnMuXG4gKiA6OjpcbiAqXG4gKiBBdXRoLmpzIGNvbWVzIHdpdGggYnVpbHQtaW4ge0BsaW5rIGh0dHBzOi8vYXV0aGpzLmRldi9jb25jZXB0cy9zZWN1cml0eSNjc3JmIENTUkZ9IHByb3RlY3Rpb24sIGJ1dFxuICogaWYgeW91IGFyZSBpbXBsZW1lbnRpbmcgYSBmcmFtZXdvcmsgdGhhdCBpcyBhbHJlYWR5IHByb3RlY3RlZCBhZ2FpbnN0IENTUkYgYXR0YWNrcywgeW91IGNhbiBza2lwIHRoaXMgY2hlY2sgYnlcbiAqIHBhc3NpbmcgdGhpcyB2YWx1ZSB0byB7QGxpbmsgQXV0aENvbmZpZy5za2lwQ1NSRkNoZWNrfS5cbiAqL1xuZXhwb3J0IGNvbnN0IHNraXBDU1JGQ2hlY2sgPSBTeW1ib2woXCJza2lwLWNzcmYtY2hlY2tcIik7XG4vKipcbiAqIDo6OmRhbmdlclxuICogVGhpcyBvcHRpb24gaXMgaW50ZW5kZWQgZm9yIGZyYW1ld29yayBhdXRob3JzLlxuICogOjo6XG4gKlxuICogQXV0aC5qcyByZXR1cm5zIGEgd2ViIHN0YW5kYXJkIHtAbGluayBSZXNwb25zZX0gYnkgZGVmYXVsdCwgYnV0XG4gKiBpZiB5b3UgYXJlIGltcGxlbWVudGluZyBhIGZyYW1ld29yayB5b3UgbWlnaHQgd2FudCB0byBnZXQgYWNjZXNzIHRvIHRoZSByYXcgaW50ZXJuYWwgcmVzcG9uc2VcbiAqIGJ5IHBhc3NpbmcgdGhpcyB2YWx1ZSB0byB7QGxpbmsgQXV0aENvbmZpZy5yYXd9LlxuICovXG5leHBvcnQgY29uc3QgcmF3ID0gU3ltYm9sKFwicmV0dXJuLXR5cGUtcmF3XCIpO1xuIl0sIm5hbWVzIjpbIlVua25vd25BY3Rpb24iLCJTZXNzaW9uU3RvcmUiLCJpbml0IiwicmVuZGVyUGFnZSIsImFjdGlvbnMiLCJ2YWxpZGF0ZUNTUkYiLCJBdXRoSW50ZXJuYWwiLCJyZXF1ZXN0IiwiYXV0aE9wdGlvbnMiLCJhY3Rpb24iLCJwcm92aWRlcklkIiwiZXJyb3IiLCJtZXRob2QiLCJjc3JmRGlzYWJsZWQiLCJza2lwQ1NSRkNoZWNrIiwib3B0aW9ucyIsImNvb2tpZXMiLCJ1cmwiLCJjYWxsYmFja1VybCIsImJvZHkiLCJxdWVyeSIsImNzcmZUb2tlbiIsImlzUG9zdCIsInNlc3Npb25TdG9yZSIsInNlc3Npb25Ub2tlbiIsImxvZ2dlciIsInJlbmRlciIsImNhbGxiYWNrIiwiY3NyZiIsInByb3ZpZGVycyIsInNlc3Npb24iLCJzaWduaW4iLCJzaWdub3V0IiwidmVyaWZ5UmVxdWVzdCIsIndlYkF1dGhuT3B0aW9ucyIsImNzcmZUb2tlblZlcmlmaWVkIiwicHJvdmlkZXIiLCJ0eXBlIiwiZGF0YSIsInNpZ25JbiIsInNpZ25PdXQiLCJTeW1ib2wiLCJyYXciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/init.js":
/*!*********************************************!*\
  !*** ./node_modules/@auth/core/lib/init.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultCallbacks: () => (/* binding */ defaultCallbacks),\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _jwt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jwt.js */ \"(action-browser)/./node_modules/@auth/core/jwt.js\");\n/* harmony import */ var _utils_callback_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/callback-url.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/callback-url.js\");\n/* harmony import */ var _utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/cookie.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./actions/callback/oauth/csrf-token.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_providers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/providers.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/providers.js\");\n/* harmony import */ var _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/logger.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/logger.js\");\n/* harmony import */ var _utils_merge_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/merge.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/merge.js\");\n\n\n\n\n\n\n\n\nconst defaultCallbacks = {\n    signIn () {\n        return true;\n    },\n    redirect ({ url, baseUrl }) {\n        if (url.startsWith(\"/\")) return `${baseUrl}${url}`;\n        else if (new URL(url).origin === baseUrl) return url;\n        return baseUrl;\n    },\n    session ({ session }) {\n        return {\n            user: {\n                name: session.user?.name,\n                email: session.user?.email,\n                image: session.user?.image\n            },\n            expires: session.expires?.toISOString?.() ?? session.expires\n        };\n    },\n    jwt ({ token }) {\n        return token;\n    }\n};\n/** Initialize all internal options and cookies. */ async function init({ authOptions, providerId, action, url, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, csrfDisabled, isPost }) {\n    const { providers, provider } = (0,_utils_providers_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({\n        providers: authOptions.providers,\n        url,\n        providerId,\n        options: authOptions\n    });\n    const maxAge = 30 * 24 * 60 * 60; // Sessions expire after 30 days of being idle by default\n    let isOnRedirectProxy = false;\n    if ((provider?.type === \"oauth\" || provider?.type === \"oidc\") && provider.redirectProxyUrl) {\n        try {\n            isOnRedirectProxy = new URL(provider.redirectProxyUrl).origin === url.origin;\n        } catch  {\n            throw new TypeError(`redirectProxyUrl must be a valid URL. Received: ${provider.redirectProxyUrl}`);\n        }\n    }\n    // User provided options are overridden by other options,\n    // except for the options with special handling above\n    const options = {\n        debug: false,\n        pages: {},\n        theme: {\n            colorScheme: \"auto\",\n            logo: \"\",\n            brandColor: \"\",\n            buttonText: \"\"\n        },\n        // Custom options override defaults\n        ...authOptions,\n        // These computed settings can have values in userOptions but we override them\n        // and are request-specific.\n        url,\n        action,\n        // @ts-expect-errors\n        provider,\n        cookies: (0,_utils_merge_js__WEBPACK_IMPORTED_MODULE_7__.merge)(_utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__.defaultCookies(authOptions.useSecureCookies ?? url.protocol === \"https:\"), authOptions.cookies),\n        providers,\n        // Session options\n        session: {\n            // If no adapter specified, force use of JSON Web Tokens (stateless)\n            strategy: authOptions.adapter ? \"database\" : \"jwt\",\n            maxAge,\n            updateAge: 24 * 60 * 60,\n            generateSessionToken: ()=>crypto.randomUUID(),\n            ...authOptions.session\n        },\n        // JWT options\n        jwt: {\n            secret: authOptions.secret,\n            maxAge: authOptions.session?.maxAge ?? maxAge,\n            encode: _jwt_js__WEBPACK_IMPORTED_MODULE_0__.encode,\n            decode: _jwt_js__WEBPACK_IMPORTED_MODULE_0__.decode,\n            ...authOptions.jwt\n        },\n        // Event messages\n        events: eventsErrorHandler(authOptions.events ?? {}, _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__.logger),\n        adapter: adapterErrorHandler(authOptions.adapter, _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__.logger),\n        // Callback functions\n        callbacks: {\n            ...defaultCallbacks,\n            ...authOptions.callbacks\n        },\n        logger: _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__.logger,\n        callbackUrl: url.origin,\n        isOnRedirectProxy,\n        experimental: {\n            ...authOptions.experimental\n        }\n    };\n    // Init cookies\n    const cookies = [];\n    if (csrfDisabled) {\n        options.csrfTokenVerified = true;\n    } else {\n        const { csrfToken, cookie: csrfCookie, csrfTokenVerified } = await (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_3__.createCSRFToken)({\n            options,\n            cookieValue: reqCookies?.[options.cookies.csrfToken.name],\n            isPost,\n            bodyValue: reqCsrfToken\n        });\n        options.csrfToken = csrfToken;\n        options.csrfTokenVerified = csrfTokenVerified;\n        if (csrfCookie) {\n            cookies.push({\n                name: options.cookies.csrfToken.name,\n                value: csrfCookie,\n                options: options.cookies.csrfToken.options\n            });\n        }\n    }\n    const { callbackUrl, callbackUrlCookie } = await (0,_utils_callback_url_js__WEBPACK_IMPORTED_MODULE_1__.createCallbackUrl)({\n        options,\n        cookieValue: reqCookies?.[options.cookies.callbackUrl.name],\n        paramValue: reqCallbackUrl\n    });\n    options.callbackUrl = callbackUrl;\n    if (callbackUrlCookie) {\n        cookies.push({\n            name: options.cookies.callbackUrl.name,\n            value: callbackUrlCookie,\n            options: options.cookies.callbackUrl.options\n        });\n    }\n    return {\n        options,\n        cookies\n    };\n}\n/** Wraps an object of methods and adds error handling. */ function eventsErrorHandler(methods, logger) {\n    return Object.keys(methods).reduce((acc, name)=>{\n        acc[name] = async (...args)=>{\n            try {\n                const method = methods[name];\n                return await method(...args);\n            } catch (e) {\n                logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_4__.EventError(e));\n            }\n        };\n        return acc;\n    }, {});\n}\n/** Handles adapter induced errors. */ function adapterErrorHandler(adapter, logger) {\n    if (!adapter) return;\n    return Object.keys(adapter).reduce((acc, name)=>{\n        acc[name] = async (...args)=>{\n            try {\n                logger.debug(`adapter_${name}`, {\n                    args\n                });\n                const method = adapter[name];\n                return await method(...args);\n            } catch (e) {\n                const error = new _errors_js__WEBPACK_IMPORTED_MODULE_4__.AdapterError(e);\n                logger.error(error);\n                throw error;\n            }\n        };\n        return acc;\n    }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/init.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/pages/error.js":
/*!****************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/error.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ErrorPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(action-browser)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\n/** Renders an error page. */ function ErrorPage(props) {\n    const { url, error = \"default\", theme } = props;\n    const signinPageUrl = `${url}/signin`;\n    const errors = {\n        default: {\n            status: 200,\n            heading: \"Error\",\n            message: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                    className: \"site\",\n                    href: url?.origin,\n                    children: url?.host\n                })\n            })\n        },\n        Configuration: {\n            status: 500,\n            heading: \"Server error\",\n            message: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                children: [\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"There is a problem with the server configuration.\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"Check the server logs for more information.\"\n                    })\n                ]\n            })\n        },\n        AccessDenied: {\n            status: 403,\n            heading: \"Access Denied\",\n            message: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                children: [\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"You do not have permission to sign in.\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                            className: \"button\",\n                            href: signinPageUrl,\n                            children: \"Sign in\"\n                        })\n                    })\n                ]\n            })\n        },\n        Verification: {\n            status: 403,\n            heading: \"Unable to sign in\",\n            message: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                children: [\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"The sign in link is no longer valid.\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"It may have been used already or it may have expired.\"\n                    })\n                ]\n            }),\n            signin: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                className: \"button\",\n                href: signinPageUrl,\n                children: \"Sign in\"\n            })\n        }\n    };\n    const { status, heading, message, signin } = errors[error] ?? errors.default;\n    return {\n        status,\n        html: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n            className: \"error\",\n            children: [\n                theme?.brandColor && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                    dangerouslySetInnerHTML: {\n                        __html: `\n        :root {\n          --brand-color: ${theme?.brandColor}\n        }\n      `\n                    }\n                }),\n                (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                    className: \"card\",\n                    children: [\n                        theme?.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                            src: theme?.logo,\n                            alt: \"Logo\",\n                            className: \"logo\"\n                        }),\n                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", {\n                            children: heading\n                        }),\n                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                            className: \"message\",\n                            children: message\n                        }),\n                        signin\n                    ]\n                })\n            ]\n        })\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUNoRSwyQkFBMkIsR0FDWixTQUFTSSxVQUFVQyxLQUFLO0lBQ25DLE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxRQUFRLFNBQVMsRUFBRUMsS0FBSyxFQUFFLEdBQUdIO0lBQzFDLE1BQU1JLGdCQUFnQixDQUFDLEVBQUVILElBQUksT0FBTyxDQUFDO0lBQ3JDLE1BQU1JLFNBQVM7UUFDWEMsU0FBUztZQUNMQyxRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsU0FBVWIsdURBQUlBLENBQUMsS0FBSztnQkFBRWMsVUFBVWQsdURBQUlBLENBQUMsS0FBSztvQkFBRWUsV0FBVztvQkFBUUMsTUFBTVgsS0FBS1k7b0JBQVFILFVBQVVULEtBQUthO2dCQUFLO1lBQUc7UUFDN0c7UUFDQUMsZUFBZTtZQUNYUixRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsU0FBVVgsd0RBQUtBLENBQUMsT0FBTztnQkFBRVksVUFBVTtvQkFBQ2QsdURBQUlBLENBQUMsS0FBSzt3QkFBRWMsVUFBVTtvQkFBb0Q7b0JBQUlkLHVEQUFJQSxDQUFDLEtBQUs7d0JBQUVjLFVBQVU7b0JBQThDO2lCQUFHO1lBQUM7UUFDOUw7UUFDQU0sY0FBYztZQUNWVCxRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsU0FBVVgsd0RBQUtBLENBQUMsT0FBTztnQkFBRVksVUFBVTtvQkFBQ2QsdURBQUlBLENBQUMsS0FBSzt3QkFBRWMsVUFBVTtvQkFBeUM7b0JBQUlkLHVEQUFJQSxDQUFDLEtBQUs7d0JBQUVjLFVBQVVkLHVEQUFJQSxDQUFDLEtBQUs7NEJBQUVlLFdBQVc7NEJBQVVDLE1BQU1SOzRCQUFlTSxVQUFVO3dCQUFVO29CQUFHO2lCQUFHO1lBQUM7UUFDbE47UUFDQU8sY0FBYztZQUNWVixRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsU0FBVVgsd0RBQUtBLENBQUMsT0FBTztnQkFBRVksVUFBVTtvQkFBQ2QsdURBQUlBLENBQUMsS0FBSzt3QkFBRWMsVUFBVTtvQkFBdUM7b0JBQUlkLHVEQUFJQSxDQUFDLEtBQUs7d0JBQUVjLFVBQVU7b0JBQXdEO2lCQUFHO1lBQUM7WUFDdkxRLFFBQVN0Qix1REFBSUEsQ0FBQyxLQUFLO2dCQUFFZSxXQUFXO2dCQUFVQyxNQUFNUjtnQkFBZU0sVUFBVTtZQUFVO1FBQ3ZGO0lBQ0o7SUFDQSxNQUFNLEVBQUVILE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUVTLE1BQU0sRUFBRSxHQUFHYixNQUFNLENBQUNILE1BQU0sSUFBSUcsT0FBT0MsT0FBTztJQUM1RSxPQUFPO1FBQ0hDO1FBQ0FZLE1BQU9yQix3REFBS0EsQ0FBQyxPQUFPO1lBQUVhLFdBQVc7WUFBU0QsVUFBVTtnQkFBQ1AsT0FBT2lCLGNBQWV4Qix1REFBSUEsQ0FBQyxTQUFTO29CQUFFeUIseUJBQXlCO3dCQUNwR0MsUUFBUSxDQUFDOzt5QkFFUixFQUFFbkIsT0FBT2lCLFdBQVc7O01BRXZDLENBQUM7b0JBQ2E7Z0JBQUU7Z0JBQUt0Qix3REFBS0EsQ0FBQyxPQUFPO29CQUFFYSxXQUFXO29CQUFRRCxVQUFVO3dCQUFDUCxPQUFPb0IsUUFBUTNCLHVEQUFJQSxDQUFDLE9BQU87NEJBQUU0QixLQUFLckIsT0FBT29COzRCQUFNRSxLQUFLOzRCQUFRZCxXQUFXO3dCQUFPO3dCQUFJZix1REFBSUEsQ0FBQyxNQUFNOzRCQUFFYyxVQUFVRjt3QkFBUTt3QkFBSVosdURBQUlBLENBQUMsT0FBTzs0QkFBRWUsV0FBVzs0QkFBV0QsVUFBVUQ7d0JBQVE7d0JBQUlTO3FCQUFPO2dCQUFDO2FBQUc7UUFBQztJQUMvUDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdXNlci1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy9lcnJvci5qcz85MDM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInByZWFjdC9qc3gtcnVudGltZVwiO1xuLyoqIFJlbmRlcnMgYW4gZXJyb3IgcGFnZS4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVycm9yUGFnZShwcm9wcykge1xuICAgIGNvbnN0IHsgdXJsLCBlcnJvciA9IFwiZGVmYXVsdFwiLCB0aGVtZSB9ID0gcHJvcHM7XG4gICAgY29uc3Qgc2lnbmluUGFnZVVybCA9IGAke3VybH0vc2lnbmluYDtcbiAgICBjb25zdCBlcnJvcnMgPSB7XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICAgICAgaGVhZGluZzogXCJFcnJvclwiLFxuICAgICAgICAgICAgbWVzc2FnZTogKF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IF9qc3goXCJhXCIsIHsgY2xhc3NOYW1lOiBcInNpdGVcIiwgaHJlZjogdXJsPy5vcmlnaW4sIGNoaWxkcmVuOiB1cmw/Lmhvc3QgfSkgfSkpLFxuICAgICAgICB9LFxuICAgICAgICBDb25maWd1cmF0aW9uOiB7XG4gICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgIGhlYWRpbmc6IFwiU2VydmVyIGVycm9yXCIsXG4gICAgICAgICAgICBtZXNzYWdlOiAoX2pzeHMoXCJkaXZcIiwgeyBjaGlsZHJlbjogW19qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiVGhlcmUgaXMgYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlciBjb25maWd1cmF0aW9uLlwiIH0pLCBfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIkNoZWNrIHRoZSBzZXJ2ZXIgbG9ncyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIiB9KV0gfSkpLFxuICAgICAgICB9LFxuICAgICAgICBBY2Nlc3NEZW5pZWQ6IHtcbiAgICAgICAgICAgIHN0YXR1czogNDAzLFxuICAgICAgICAgICAgaGVhZGluZzogXCJBY2Nlc3MgRGVuaWVkXCIsXG4gICAgICAgICAgICBtZXNzYWdlOiAoX2pzeHMoXCJkaXZcIiwgeyBjaGlsZHJlbjogW19qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiWW91IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gc2lnbiBpbi5cIiB9KSwgX2pzeChcInBcIiwgeyBjaGlsZHJlbjogX2pzeChcImFcIiwgeyBjbGFzc05hbWU6IFwiYnV0dG9uXCIsIGhyZWY6IHNpZ25pblBhZ2VVcmwsIGNoaWxkcmVuOiBcIlNpZ24gaW5cIiB9KSB9KV0gfSkpLFxuICAgICAgICB9LFxuICAgICAgICBWZXJpZmljYXRpb246IHtcbiAgICAgICAgICAgIHN0YXR1czogNDAzLFxuICAgICAgICAgICAgaGVhZGluZzogXCJVbmFibGUgdG8gc2lnbiBpblwiLFxuICAgICAgICAgICAgbWVzc2FnZTogKF9qc3hzKFwiZGl2XCIsIHsgY2hpbGRyZW46IFtfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIlRoZSBzaWduIGluIGxpbmsgaXMgbm8gbG9uZ2VyIHZhbGlkLlwiIH0pLCBfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIkl0IG1heSBoYXZlIGJlZW4gdXNlZCBhbHJlYWR5IG9yIGl0IG1heSBoYXZlIGV4cGlyZWQuXCIgfSldIH0pKSxcbiAgICAgICAgICAgIHNpZ25pbjogKF9qc3goXCJhXCIsIHsgY2xhc3NOYW1lOiBcImJ1dHRvblwiLCBocmVmOiBzaWduaW5QYWdlVXJsLCBjaGlsZHJlbjogXCJTaWduIGluXCIgfSkpLFxuICAgICAgICB9LFxuICAgIH07XG4gICAgY29uc3QgeyBzdGF0dXMsIGhlYWRpbmcsIG1lc3NhZ2UsIHNpZ25pbiB9ID0gZXJyb3JzW2Vycm9yXSA/PyBlcnJvcnMuZGVmYXVsdDtcbiAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXMsXG4gICAgICAgIGh0bWw6IChfanN4cyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJlcnJvclwiLCBjaGlsZHJlbjogW3RoZW1lPy5icmFuZENvbG9yICYmIChfanN4KFwic3R5bGVcIiwgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJyYW5kLWNvbG9yOiAke3RoZW1lPy5icmFuZENvbG9yfVxuICAgICAgICB9XG4gICAgICBgLFxuICAgICAgICAgICAgICAgICAgICB9IH0pKSwgX2pzeHMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiY2FyZFwiLCBjaGlsZHJlbjogW3RoZW1lPy5sb2dvICYmIF9qc3goXCJpbWdcIiwgeyBzcmM6IHRoZW1lPy5sb2dvLCBhbHQ6IFwiTG9nb1wiLCBjbGFzc05hbWU6IFwibG9nb1wiIH0pLCBfanN4KFwiaDFcIiwgeyBjaGlsZHJlbjogaGVhZGluZyB9KSwgX2pzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJtZXNzYWdlXCIsIGNoaWxkcmVuOiBtZXNzYWdlIH0pLCBzaWduaW5dIH0pXSB9KSksXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiRXJyb3JQYWdlIiwicHJvcHMiLCJ1cmwiLCJlcnJvciIsInRoZW1lIiwic2lnbmluUGFnZVVybCIsImVycm9ycyIsImRlZmF1bHQiLCJzdGF0dXMiLCJoZWFkaW5nIiwibWVzc2FnZSIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiaHJlZiIsIm9yaWdpbiIsImhvc3QiLCJDb25maWd1cmF0aW9uIiwiQWNjZXNzRGVuaWVkIiwiVmVyaWZpY2F0aW9uIiwic2lnbmluIiwiaHRtbCIsImJyYW5kQ29sb3IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImxvZ28iLCJzcmMiLCJhbHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/pages/error.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/pages/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ renderPage)\n/* harmony export */ });\n/* harmony import */ var preact_render_to_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact-render-to-string */ \"(action-browser)/./node_modules/preact-render-to-string/dist/index.mjs\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"(action-browser)/./node_modules/@auth/core/lib/pages/error.js\");\n/* harmony import */ var _signin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signin.js */ \"(action-browser)/./node_modules/@auth/core/lib/pages/signin.js\");\n/* harmony import */ var _signout_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signout.js */ \"(action-browser)/./node_modules/@auth/core/lib/pages/signout.js\");\n/* harmony import */ var _styles_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styles.js */ \"(action-browser)/./node_modules/@auth/core/lib/pages/styles.js\");\n/* harmony import */ var _verify_request_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./verify-request.js */ \"(action-browser)/./node_modules/@auth/core/lib/pages/verify-request.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n\n\n\n\n\n\n\nfunction send({ html, title, status, cookies, theme, headTags }) {\n    return {\n        cookies,\n        status,\n        headers: {\n            \"Content-Type\": \"text/html\"\n        },\n        body: `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>${_styles_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]}</style><title>${title}</title>${headTags ?? \"\"}</head><body class=\"__next-auth-theme-${theme?.colorScheme ?? \"auto\"}\"><div class=\"page\">${(0,preact_render_to_string__WEBPACK_IMPORTED_MODULE_0__.renderToString)(html)}</div></body></html>`\n    };\n}\n/**\n * Unless the user defines their [own pages](https://authjs.dev/reference/core#pages),\n * we render a set of default ones, using Preact SSR.\n */ function renderPage(params) {\n    const { url, theme, query, cookies, pages, providers } = params;\n    return {\n        csrf (skip, options, cookies) {\n            if (!skip) {\n                return {\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: {\n                        csrfToken: options.csrfToken\n                    },\n                    cookies\n                };\n            }\n            options.logger.warn(\"csrf-disabled\");\n            cookies.push({\n                name: options.cookies.csrfToken.name,\n                value: \"\",\n                options: {\n                    ...options.cookies.csrfToken.options,\n                    maxAge: 0\n                }\n            });\n            return {\n                status: 404,\n                cookies\n            };\n        },\n        providers (providers) {\n            return {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: providers.reduce((acc, { id, name, type, signinUrl, callbackUrl })=>{\n                    acc[id] = {\n                        id,\n                        name,\n                        type,\n                        signinUrl,\n                        callbackUrl\n                    };\n                    return acc;\n                }, {})\n            };\n        },\n        signin (providerId, error) {\n            if (providerId) throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.UnknownAction(\"Unsupported action\");\n            if (pages?.signIn) {\n                let signinUrl = `${pages.signIn}${pages.signIn.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({\n                    callbackUrl: params.callbackUrl ?? \"/\"\n                })}`;\n                if (error) signinUrl = `${signinUrl}&${new URLSearchParams({\n                    error\n                })}`;\n                return {\n                    redirect: signinUrl,\n                    cookies\n                };\n            }\n            // If we have a webauthn provider with conditional UI and\n            // a simpleWebAuthnBrowserScript is defined, we need to\n            // render the script in the page.\n            const webauthnProvider = providers?.find((p)=>p.type === \"webauthn\" && p.enableConditionalUI && !!p.simpleWebAuthnBrowserVersion);\n            let simpleWebAuthnBrowserScript = \"\";\n            if (webauthnProvider) {\n                const { simpleWebAuthnBrowserVersion } = webauthnProvider;\n                simpleWebAuthnBrowserScript = `<script src=\"https://unpkg.com/@simplewebauthn/browser@${simpleWebAuthnBrowserVersion}/dist/bundle/index.umd.min.js\" crossorigin=\"anonymous\"></script>`;\n            }\n            return send({\n                cookies,\n                theme,\n                html: (0,_signin_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n                    csrfToken: params.csrfToken,\n                    // We only want to render providers\n                    providers: params.providers?.filter((provider)=>// Always render oauth and email type providers\n                        [\n                            \"email\",\n                            \"oauth\",\n                            \"oidc\"\n                        ].includes(provider.type) || // Only render credentials type provider if credentials are defined\n                        provider.type === \"credentials\" && provider.credentials || // Only render webauthn type provider if formFields are defined\n                        provider.type === \"webauthn\" && provider.formFields || // Don't render other provider types\n                        false),\n                    callbackUrl: params.callbackUrl,\n                    theme: params.theme,\n                    error,\n                    ...query\n                }),\n                title: \"Sign In\",\n                headTags: simpleWebAuthnBrowserScript\n            });\n        },\n        signout () {\n            if (pages?.signOut) return {\n                redirect: pages.signOut,\n                cookies\n            };\n            return send({\n                cookies,\n                theme,\n                html: (0,_signout_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n                    csrfToken: params.csrfToken,\n                    url,\n                    theme\n                }),\n                title: \"Sign Out\"\n            });\n        },\n        verifyRequest (props) {\n            if (pages?.verifyRequest) return {\n                redirect: pages.verifyRequest,\n                cookies\n            };\n            return send({\n                cookies,\n                theme,\n                html: (0,_verify_request_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Verify Request\"\n            });\n        },\n        error (error) {\n            if (pages?.error) {\n                return {\n                    redirect: `${pages.error}${pages.error.includes(\"?\") ? \"&\" : \"?\"}error=${error}`,\n                    cookies\n                };\n            }\n            return send({\n                cookies,\n                theme,\n                // @ts-expect-error fix error type\n                ...(0,_error_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n                    url,\n                    theme,\n                    error\n                }),\n                title: \"Error\"\n            });\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/pages/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/pages/signin.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/signin.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SigninPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(action-browser)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n/* harmony import */ var _utils_webauthn_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/webauthn-client.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/webauthn-client.js\");\n\n\nconst signinErrors = {\n    default: \"Unable to sign in.\",\n    Signin: \"Try signing in with a different account.\",\n    OAuthSignin: \"Try signing in with a different account.\",\n    OAuthCallbackError: \"Try signing in with a different account.\",\n    OAuthCreateAccount: \"Try signing in with a different account.\",\n    EmailCreateAccount: \"Try signing in with a different account.\",\n    Callback: \"Try signing in with a different account.\",\n    OAuthAccountNotLinked: \"To confirm your identity, sign in with the same account you used originally.\",\n    EmailSignin: \"The e-mail could not be sent.\",\n    CredentialsSignin: \"Sign in failed. Check the details you provided are correct.\",\n    SessionRequired: \"Please sign in to access this page.\"\n};\nfunction hexToRgba(hex, alpha = 1) {\n    if (!hex) {\n        return;\n    }\n    // Remove the \"#\" character if it's included\n    hex = hex.replace(/^#/, \"\");\n    // Expand 3-digit hex codes to their 6-digit equivalents\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    // Parse the hex value to separate R, G, and B components\n    const bigint = parseInt(hex, 16);\n    const r = bigint >> 16 & 255;\n    const g = bigint >> 8 & 255;\n    const b = bigint & 255;\n    // Ensure the alpha value is within the valid range [0, 1]\n    alpha = Math.min(Math.max(alpha, 0), 1);\n    // Construct the RGBA string\n    const rgba = `rgba(${r}, ${g}, ${b}, ${alpha})`;\n    return rgba;\n}\nfunction ConditionalUIScript(providerID) {\n    const startConditionalUIScript = `\nconst currentURL = window.location.href;\nconst authURL = currentURL.substring(0, currentURL.lastIndexOf('/'));\n(${_utils_webauthn_client_js__WEBPACK_IMPORTED_MODULE_1__.webauthnScript})(authURL, \"${providerID}\");\n`;\n    return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"script\", {\n            dangerouslySetInnerHTML: {\n                __html: startConditionalUIScript\n            }\n        })\n    });\n}\nfunction SigninPage(props) {\n    const { csrfToken, providers = [], callbackUrl, theme, email, error: errorType } = props;\n    if (typeof document !== \"undefined\" && theme?.brandColor) {\n        document.documentElement.style.setProperty(\"--brand-color\", theme.brandColor);\n    }\n    if (typeof document !== \"undefined\" && theme?.buttonText) {\n        document.documentElement.style.setProperty(\"--button-text-color\", theme.buttonText);\n    }\n    const error = errorType && (signinErrors[errorType] ?? signinErrors.default);\n    const providerLogoPath = \"https://authjs.dev/img/providers\";\n    const conditionalUIProviderID = providers.find((provider)=>provider.type === \"webauthn\" && provider.enableConditionalUI)?.id;\n    return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        className: \"signin\",\n        children: [\n            theme?.brandColor && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `:root {--brand-color: ${theme.brandColor}}`\n                }\n            }),\n            theme?.buttonText && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n                }\n            }),\n            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                className: \"card\",\n                children: [\n                    error && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                        className: \"error\",\n                        children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                            children: error\n                        })\n                    }),\n                    theme?.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                        src: theme.logo,\n                        alt: \"Logo\",\n                        className: \"logo\"\n                    }),\n                    providers.map((provider, i)=>{\n                        let bg, text, logo, logoDark, bgDark, textDark;\n                        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n                            ;\n                            ({ bg = \"\", text = \"\", logo = \"\", bgDark = bg, textDark = text, logoDark = \"\" } = provider.style ?? {});\n                            logo = logo.startsWith(\"/\") ? providerLogoPath + logo : logo;\n                            logoDark = logoDark.startsWith(\"/\") ? providerLogoPath + logoDark : logoDark || logo;\n                            logoDark || (logoDark = logo);\n                        }\n                        return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                            className: \"provider\",\n                            children: [\n                                provider.type === \"oauth\" || provider.type === \"oidc\" ? (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                                    action: provider.signinUrl,\n                                    method: \"POST\",\n                                    children: [\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            type: \"hidden\",\n                                            name: \"csrfToken\",\n                                            value: csrfToken\n                                        }),\n                                        callbackUrl && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            type: \"hidden\",\n                                            name: \"callbackUrl\",\n                                            value: callbackUrl\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", {\n                                            type: \"submit\",\n                                            className: \"button\",\n                                            style: {\n                                                \"--provider-bg\": bg,\n                                                \"--provider-dark-bg\": bgDark,\n                                                \"--provider-color\": text,\n                                                \"--provider-dark-color\": textDark,\n                                                \"--provider-bg-hover\": hexToRgba(bg, 0.8),\n                                                \"--provider-dark-bg-hover\": hexToRgba(bgDark, 0.8)\n                                            },\n                                            tabIndex: 0,\n                                            children: [\n                                                logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                                                    loading: \"lazy\",\n                                                    height: 24,\n                                                    width: 24,\n                                                    id: \"provider-logo\",\n                                                    src: logo\n                                                }),\n                                                logoDark && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                                                    loading: \"lazy\",\n                                                    height: 24,\n                                                    width: 24,\n                                                    id: \"provider-logo-dark\",\n                                                    src: logoDark\n                                                }),\n                                                (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                                                    children: [\n                                                        \"Sign in with \",\n                                                        provider.name\n                                                    ]\n                                                })\n                                            ]\n                                        })\n                                    ]\n                                }) : null,\n                                (provider.type === \"email\" || provider.type === \"credentials\" || provider.type === \"webauthn\") && i > 0 && providers[i - 1].type !== \"email\" && providers[i - 1].type !== \"credentials\" && providers[i - 1].type !== \"webauthn\" && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"hr\", {}),\n                                provider.type === \"email\" && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                                    action: provider.signinUrl,\n                                    method: \"POST\",\n                                    children: [\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            type: \"hidden\",\n                                            name: \"csrfToken\",\n                                            value: csrfToken\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", {\n                                            className: \"section-header\",\n                                            htmlFor: `input-email-for-${provider.id}-provider`,\n                                            children: \"Email\"\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            id: `input-email-for-${provider.id}-provider`,\n                                            autoFocus: true,\n                                            type: \"email\",\n                                            name: \"email\",\n                                            value: email,\n                                            placeholder: \"email@example.com\",\n                                            required: true\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", {\n                                            id: \"submitButton\",\n                                            type: \"submit\",\n                                            tabIndex: 0,\n                                            children: [\n                                                \"Sign in with \",\n                                                provider.name\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                provider.type === \"credentials\" && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                                    action: provider.callbackUrl,\n                                    method: \"POST\",\n                                    children: [\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            type: \"hidden\",\n                                            name: \"csrfToken\",\n                                            value: csrfToken\n                                        }),\n                                        Object.keys(provider.credentials).map((credential)=>{\n                                            return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                                children: [\n                                                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", {\n                                                        className: \"section-header\",\n                                                        htmlFor: `input-${credential}-for-${provider.id}-provider`,\n                                                        children: provider.credentials[credential].label ?? credential\n                                                    }),\n                                                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                                        name: credential,\n                                                        id: `input-${credential}-for-${provider.id}-provider`,\n                                                        type: provider.credentials[credential].type ?? \"text\",\n                                                        placeholder: provider.credentials[credential].placeholder ?? \"\",\n                                                        ...provider.credentials[credential]\n                                                    })\n                                                ]\n                                            }, `input-group-${provider.id}`);\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", {\n                                            id: \"submitButton\",\n                                            type: \"submit\",\n                                            tabIndex: 0,\n                                            children: [\n                                                \"Sign in with \",\n                                                provider.name\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                provider.type === \"webauthn\" && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                                    action: provider.callbackUrl,\n                                    method: \"POST\",\n                                    id: `${provider.id}-form`,\n                                    children: [\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            type: \"hidden\",\n                                            name: \"csrfToken\",\n                                            value: csrfToken\n                                        }),\n                                        Object.keys(provider.formFields).map((field)=>{\n                                            return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                                children: [\n                                                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", {\n                                                        className: \"section-header\",\n                                                        htmlFor: `input-${field}-for-${provider.id}-provider`,\n                                                        children: provider.formFields[field].label ?? field\n                                                    }),\n                                                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                                        name: field,\n                                                        \"data-form-field\": true,\n                                                        id: `input-${field}-for-${provider.id}-provider`,\n                                                        type: provider.formFields[field].type ?? \"text\",\n                                                        placeholder: provider.formFields[field].placeholder ?? \"\",\n                                                        ...provider.formFields[field]\n                                                    })\n                                                ]\n                                            }, `input-group-${provider.id}`);\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", {\n                                            id: `submitButton-${provider.id}`,\n                                            type: \"submit\",\n                                            tabIndex: 0,\n                                            children: [\n                                                \"Sign in with \",\n                                                provider.name\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                (provider.type === \"email\" || provider.type === \"credentials\" || provider.type === \"webauthn\") && i + 1 < providers.length && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"hr\", {})\n                            ]\n                        }, provider.id);\n                    })\n                ]\n            }),\n            conditionalUIProviderID && ConditionalUIScript(conditionalUIProviderID)\n        ]\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/pages/signin.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/pages/signout.js":
/*!******************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/signout.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SignoutPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(action-browser)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\nfunction SignoutPage(props) {\n    const { url, csrfToken, theme } = props;\n    return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        className: \"signout\",\n        children: [\n            theme?.brandColor && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n                }\n            }),\n            theme?.buttonText && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n                }\n            }),\n            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                className: \"card\",\n                children: [\n                    theme?.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                        src: theme.logo,\n                        alt: \"Logo\",\n                        className: \"logo\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", {\n                        children: \"Signout\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"Are you sure you want to sign out?\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                        action: url?.toString(),\n                        method: \"POST\",\n                        children: [\n                            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                type: \"hidden\",\n                                name: \"csrfToken\",\n                                value: csrfToken\n                            }),\n                            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n                                id: \"submitButton\",\n                                type: \"submit\",\n                                children: \"Sign out\"\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy9zaWdub3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ2pELFNBQVNJLFlBQVlDLEtBQUs7SUFDckMsTUFBTSxFQUFFQyxHQUFHLEVBQUVDLFNBQVMsRUFBRUMsS0FBSyxFQUFFLEdBQUdIO0lBQ2xDLE9BQVFGLHdEQUFLQSxDQUFDLE9BQU87UUFBRU0sV0FBVztRQUFXQyxVQUFVO1lBQUNGLE9BQU9HLGNBQWVWLHVEQUFJQSxDQUFDLFNBQVM7Z0JBQUVXLHlCQUF5QjtvQkFDdkdDLFFBQVEsQ0FBQzs7eUJBRUosRUFBRUwsTUFBTUcsVUFBVSxDQUFDOztNQUV0QyxDQUFDO2dCQUNTO1lBQUU7WUFBS0gsT0FBT00sY0FBZWIsdURBQUlBLENBQUMsU0FBUztnQkFBRVcseUJBQXlCO29CQUNsRUMsUUFBUSxDQUFDOzsrQkFFRSxFQUFFTCxNQUFNTSxVQUFVLENBQUM7O01BRTVDLENBQUM7Z0JBQ1M7WUFBRTtZQUFLWCx3REFBS0EsQ0FBQyxPQUFPO2dCQUFFTSxXQUFXO2dCQUFRQyxVQUFVO29CQUFDRixPQUFPTyxRQUFRZCx1REFBSUEsQ0FBQyxPQUFPO3dCQUFFZSxLQUFLUixNQUFNTyxJQUFJO3dCQUFFRSxLQUFLO3dCQUFRUixXQUFXO29CQUFPO29CQUFJUix1REFBSUEsQ0FBQyxNQUFNO3dCQUFFUyxVQUFVO29CQUFVO29CQUFJVCx1REFBSUEsQ0FBQyxLQUFLO3dCQUFFUyxVQUFVO29CQUFxQztvQkFBSVAsd0RBQUtBLENBQUMsUUFBUTt3QkFBRWUsUUFBUVosS0FBS2E7d0JBQVlDLFFBQVE7d0JBQVFWLFVBQVU7NEJBQUNULHVEQUFJQSxDQUFDLFNBQVM7Z0NBQUVvQixNQUFNO2dDQUFVQyxNQUFNO2dDQUFhQyxPQUFPaEI7NEJBQVU7NEJBQUlOLHVEQUFJQSxDQUFDLFVBQVU7Z0NBQUV1QixJQUFJO2dDQUFnQkgsTUFBTTtnQ0FBVVgsVUFBVTs0QkFBVzt5QkFBRztvQkFBQztpQkFBRztZQUFDO1NBQUc7SUFBQztBQUMzZCIsInNvdXJjZXMiOlsid2VicGFjazovL3VzZXItZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvcGFnZXMvc2lnbm91dC5qcz8yMmMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInByZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2lnbm91dFBhZ2UocHJvcHMpIHtcbiAgICBjb25zdCB7IHVybCwgY3NyZlRva2VuLCB0aGVtZSB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIChfanN4cyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJzaWdub3V0XCIsIGNoaWxkcmVuOiBbdGhlbWU/LmJyYW5kQ29sb3IgJiYgKF9qc3goXCJzdHlsZVwiLCB7IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgICAgICAgICAgICAgIF9faHRtbDogYFxuICAgICAgICA6cm9vdCB7XG4gICAgICAgICAgLS1icmFuZC1jb2xvcjogJHt0aGVtZS5icmFuZENvbG9yfVxuICAgICAgICB9XG4gICAgICBgLFxuICAgICAgICAgICAgICAgIH0gfSkpLCB0aGVtZT8uYnV0dG9uVGV4dCAmJiAoX2pzeChcInN0eWxlXCIsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgICAgICAgICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJ1dHRvbi10ZXh0LWNvbG9yOiAke3RoZW1lLmJ1dHRvblRleHR9XG4gICAgICAgIH1cbiAgICAgIGAsXG4gICAgICAgICAgICAgICAgfSB9KSksIF9qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImNhcmRcIiwgY2hpbGRyZW46IFt0aGVtZT8ubG9nbyAmJiBfanN4KFwiaW1nXCIsIHsgc3JjOiB0aGVtZS5sb2dvLCBhbHQ6IFwiTG9nb1wiLCBjbGFzc05hbWU6IFwibG9nb1wiIH0pLCBfanN4KFwiaDFcIiwgeyBjaGlsZHJlbjogXCJTaWdub3V0XCIgfSksIF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHNpZ24gb3V0P1wiIH0pLCBfanN4cyhcImZvcm1cIiwgeyBhY3Rpb246IHVybD8udG9TdHJpbmcoKSwgbWV0aG9kOiBcIlBPU1RcIiwgY2hpbGRyZW46IFtfanN4KFwiaW5wdXRcIiwgeyB0eXBlOiBcImhpZGRlblwiLCBuYW1lOiBcImNzcmZUb2tlblwiLCB2YWx1ZTogY3NyZlRva2VuIH0pLCBfanN4KFwiYnV0dG9uXCIsIHsgaWQ6IFwic3VibWl0QnV0dG9uXCIsIHR5cGU6IFwic3VibWl0XCIsIGNoaWxkcmVuOiBcIlNpZ24gb3V0XCIgfSldIH0pXSB9KV0gfSkpO1xufVxuIl0sIm5hbWVzIjpbImpzeCIsIl9qc3giLCJqc3hzIiwiX2pzeHMiLCJTaWdub3V0UGFnZSIsInByb3BzIiwidXJsIiwiY3NyZlRva2VuIiwidGhlbWUiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsImJyYW5kQ29sb3IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImJ1dHRvblRleHQiLCJsb2dvIiwic3JjIiwiYWx0IiwiYWN0aW9uIiwidG9TdHJpbmciLCJtZXRob2QiLCJ0eXBlIiwibmFtZSIsInZhbHVlIiwiaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/pages/signout.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/pages/styles.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/styles.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Generated by `pnpm css`\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`:root {\n  --border-width: 1px;\n  --border-radius: 0.5rem;\n  --color-error: #c94b4b;\n  --color-info: #157efb;\n  --color-info-hover: #0f6ddb;\n  --color-info-text: #fff;\n}\n\n.__next-auth-theme-auto,\n.__next-auth-theme-light {\n  --color-background: #ececec;\n  --color-background-hover: rgba(236, 236, 236, 0.8);\n  --color-background-card: #fff;\n  --color-text: #000;\n  --color-primary: #444;\n  --color-control-border: #bbb;\n  --color-button-active-background: #f9f9f9;\n  --color-button-active-border: #aaa;\n  --color-separator: #ccc;\n}\n\n.__next-auth-theme-dark {\n  --color-background: #161b22;\n  --color-background-hover: rgba(22, 27, 34, 0.8);\n  --color-background-card: #0d1117;\n  --color-text: #fff;\n  --color-primary: #ccc;\n  --color-control-border: #555;\n  --color-button-active-background: #060606;\n  --color-button-active-border: #666;\n  --color-separator: #444;\n}\n\n@media (prefers-color-scheme: dark) {\n  .__next-auth-theme-auto {\n    --color-background: #161b22;\n    --color-background-hover: rgba(22, 27, 34, 0.8);\n    --color-background-card: #0d1117;\n    --color-text: #fff;\n    --color-primary: #ccc;\n    --color-control-border: #555;\n    --color-button-active-background: #060606;\n    --color-button-active-border: #666;\n    --color-separator: #444;\n  }\n\n  button,\n  a.button {\n    color: var(--provider-dark-color, var(--color-primary));\n    background-color: var(--provider-dark-bg, var(--color-background));\n  }\n    :is(button,a.button):hover {\n      background-color: var(\n        --provider-dark-bg-hover,\n        var(--color-background-hover)\n      ) !important;\n    }\n  #provider-logo {\n    display: none !important;\n  }\n  #provider-logo-dark {\n    width: 25px;\n    display: block !important;\n  }\n}\nhtml {\n  box-sizing: border-box;\n}\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background-color: var(--color-background);\n  margin: 0;\n  padding: 0;\n  font-family:\n    ui-sans-serif,\n    system-ui,\n    -apple-system,\n    BlinkMacSystemFont,\n    \"Segoe UI\",\n    Roboto,\n    \"Helvetica Neue\",\n    Arial,\n    \"Noto Sans\",\n    sans-serif,\n    \"Apple Color Emoji\",\n    \"Segoe UI Emoji\",\n    \"Segoe UI Symbol\",\n    \"Noto Color Emoji\";\n}\n\nh1 {\n  margin-bottom: 1.5rem;\n  padding: 0 1rem;\n  font-weight: 400;\n  color: var(--color-text);\n}\n\np {\n  margin-bottom: 1.5rem;\n  padding: 0 1rem;\n  color: var(--color-text);\n}\n\nform {\n  margin: 0;\n  padding: 0;\n}\n\nlabel {\n  font-weight: 500;\n  text-align: left;\n  margin-bottom: 0.25rem;\n  display: block;\n  color: var(--color-text);\n}\n\ninput[type] {\n  box-sizing: border-box;\n  display: block;\n  width: 100%;\n  padding: 0.5rem 1rem;\n  border: var(--border-width) solid var(--color-control-border);\n  background: var(--color-background-card);\n  font-size: 1rem;\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n}\n\ninput[type]:focus {\n    box-shadow: none;\n  }\n\np {\n  font-size: 1.1rem;\n  line-height: 2rem;\n}\n\na.button {\n  text-decoration: none;\n  line-height: 1rem;\n}\n\na.button:link,\n  a.button:visited {\n    background-color: var(--color-background);\n    color: var(--color-primary);\n  }\n\nbutton span {\n  flex-grow: 1;\n}\n\nbutton,\na.button {\n  padding: 0.75rem 1rem;\n  color: var(--provider-color, var(--color-primary));\n  background-color: var(--provider-bg);\n  font-size: 1.1rem;\n  min-height: 62px;\n  border-color: rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  transition: all 0.1s ease-in-out;\n  font-weight: 500;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n:is(button,a.button):hover {\n    background-color: var(--provider-bg-hover, var(--color-background-hover));\n    cursor: pointer;\n  }\n\n:is(button,a.button):active {\n    cursor: pointer;\n  }\n\n:is(button,a.button) #provider-logo {\n    width: 25px;\n    display: block;\n  }\n\n:is(button,a.button) #provider-logo-dark {\n    display: none;\n  }\n\n#submitButton {\n  color: var(--button-text-color, var(--color-info-text));\n  background-color: var(--brand-color, var(--color-info));\n  width: 100%;\n}\n\n#submitButton:hover {\n    background-color: var(\n      --button-hover-bg,\n      var(--color-info-hover)\n    ) !important;\n  }\n\na.site {\n  color: var(--color-primary);\n  text-decoration: none;\n  font-size: 1rem;\n  line-height: 2rem;\n}\n\na.site:hover {\n    text-decoration: underline;\n  }\n\n.page {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  place-items: center;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.page > div {\n    text-align: center;\n  }\n\n.error a.button {\n    padding-left: 2rem;\n    padding-right: 2rem;\n    margin-top: 0.5rem;\n  }\n\n.error .message {\n    margin-bottom: 1.5rem;\n  }\n\n.signin input[type=\"text\"] {\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n  }\n\n.signin hr {\n    display: block;\n    border: 0;\n    border-top: 1px solid var(--color-separator);\n    margin: 2rem auto 1rem auto;\n    overflow: visible;\n  }\n\n.signin hr::before {\n      content: \"or\";\n      background: var(--color-background-card);\n      color: #888;\n      padding: 0 0.4rem;\n      position: relative;\n      top: -0.7rem;\n    }\n\n.signin .error {\n    background: #f5f5f5;\n    font-weight: 500;\n    border-radius: 0.3rem;\n    background: var(--color-error);\n  }\n\n.signin .error p {\n      text-align: left;\n      padding: 0.5rem 1rem;\n      font-size: 0.9rem;\n      line-height: 1.2rem;\n      color: var(--color-info-text);\n    }\n\n.signin > div,\n  .signin form {\n    display: block;\n  }\n\n.signin > div input[type], .signin form input[type] {\n      margin-bottom: 0.5rem;\n    }\n\n.signin > div button, .signin form button {\n      width: 100%;\n    }\n\n.signin .provider + .provider {\n    margin-top: 1rem;\n  }\n\n.logo {\n  display: inline-block;\n  max-width: 150px;\n  margin: 1.25rem 0;\n  max-height: 70px;\n}\n\n.card {\n  background-color: var(--color-background-card);\n  border-radius: 2rem;\n  padding: 1.25rem 2rem;\n}\n\n.card .header {\n    color: var(--color-primary);\n  }\n\n.section-header {\n  color: var(--color-text);\n}\n\n@media screen and (min-width: 450px) {\n  .card {\n    margin: 2rem 0;\n    width: 368px;\n  }\n}\n@media screen and (max-width: 450px) {\n  .card {\n    margin: 1rem 0;\n    width: 343px;\n  }\n}\n`);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy9zdHlsZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLDBCQUEwQjtBQUMxQixpRUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTRVaEIsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdXNlci1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy9zdHlsZXMuanM/MzgxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBHZW5lcmF0ZWQgYnkgYHBucG0gY3NzYFxuZXhwb3J0IGRlZmF1bHQgYDpyb290IHtcbiAgLS1ib3JkZXItd2lkdGg6IDFweDtcbiAgLS1ib3JkZXItcmFkaXVzOiAwLjVyZW07XG4gIC0tY29sb3ItZXJyb3I6ICNjOTRiNGI7XG4gIC0tY29sb3ItaW5mbzogIzE1N2VmYjtcbiAgLS1jb2xvci1pbmZvLWhvdmVyOiAjMGY2ZGRiO1xuICAtLWNvbG9yLWluZm8tdGV4dDogI2ZmZjtcbn1cblxuLl9fbmV4dC1hdXRoLXRoZW1lLWF1dG8sXG4uX19uZXh0LWF1dGgtdGhlbWUtbGlnaHQge1xuICAtLWNvbG9yLWJhY2tncm91bmQ6ICNlY2VjZWM7XG4gIC0tY29sb3ItYmFja2dyb3VuZC1ob3ZlcjogcmdiYSgyMzYsIDIzNiwgMjM2LCAwLjgpO1xuICAtLWNvbG9yLWJhY2tncm91bmQtY2FyZDogI2ZmZjtcbiAgLS1jb2xvci10ZXh0OiAjMDAwO1xuICAtLWNvbG9yLXByaW1hcnk6ICM0NDQ7XG4gIC0tY29sb3ItY29udHJvbC1ib3JkZXI6ICNiYmI7XG4gIC0tY29sb3ItYnV0dG9uLWFjdGl2ZS1iYWNrZ3JvdW5kOiAjZjlmOWY5O1xuICAtLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYm9yZGVyOiAjYWFhO1xuICAtLWNvbG9yLXNlcGFyYXRvcjogI2NjYztcbn1cblxuLl9fbmV4dC1hdXRoLXRoZW1lLWRhcmsge1xuICAtLWNvbG9yLWJhY2tncm91bmQ6ICMxNjFiMjI7XG4gIC0tY29sb3ItYmFja2dyb3VuZC1ob3ZlcjogcmdiYSgyMiwgMjcsIDM0LCAwLjgpO1xuICAtLWNvbG9yLWJhY2tncm91bmQtY2FyZDogIzBkMTExNztcbiAgLS1jb2xvci10ZXh0OiAjZmZmO1xuICAtLWNvbG9yLXByaW1hcnk6ICNjY2M7XG4gIC0tY29sb3ItY29udHJvbC1ib3JkZXI6ICM1NTU7XG4gIC0tY29sb3ItYnV0dG9uLWFjdGl2ZS1iYWNrZ3JvdW5kOiAjMDYwNjA2O1xuICAtLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYm9yZGVyOiAjNjY2O1xuICAtLWNvbG9yLXNlcGFyYXRvcjogIzQ0NDtcbn1cblxuQG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaykge1xuICAuX19uZXh0LWF1dGgtdGhlbWUtYXV0byB7XG4gICAgLS1jb2xvci1iYWNrZ3JvdW5kOiAjMTYxYjIyO1xuICAgIC0tY29sb3ItYmFja2dyb3VuZC1ob3ZlcjogcmdiYSgyMiwgMjcsIDM0LCAwLjgpO1xuICAgIC0tY29sb3ItYmFja2dyb3VuZC1jYXJkOiAjMGQxMTE3O1xuICAgIC0tY29sb3ItdGV4dDogI2ZmZjtcbiAgICAtLWNvbG9yLXByaW1hcnk6ICNjY2M7XG4gICAgLS1jb2xvci1jb250cm9sLWJvcmRlcjogIzU1NTtcbiAgICAtLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYmFja2dyb3VuZDogIzA2MDYwNjtcbiAgICAtLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYm9yZGVyOiAjNjY2O1xuICAgIC0tY29sb3Itc2VwYXJhdG9yOiAjNDQ0O1xuICB9XG5cbiAgYnV0dG9uLFxuICBhLmJ1dHRvbiB7XG4gICAgY29sb3I6IHZhcigtLXByb3ZpZGVyLWRhcmstY29sb3IsIHZhcigtLWNvbG9yLXByaW1hcnkpKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcm92aWRlci1kYXJrLWJnLCB2YXIoLS1jb2xvci1iYWNrZ3JvdW5kKSk7XG4gIH1cbiAgICA6aXMoYnV0dG9uLGEuYnV0dG9uKTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoXG4gICAgICAgIC0tcHJvdmlkZXItZGFyay1iZy1ob3ZlcixcbiAgICAgICAgdmFyKC0tY29sb3ItYmFja2dyb3VuZC1ob3ZlcilcbiAgICAgICkgIWltcG9ydGFudDtcbiAgICB9XG4gICNwcm92aWRlci1sb2dvIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgI3Byb3ZpZGVyLWxvZ28tZGFyayB7XG4gICAgd2lkdGg6IDI1cHg7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgfVxufVxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYmFja2dyb3VuZCk7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1mYW1pbHk6XG4gICAgdWktc2Fucy1zZXJpZixcbiAgICBzeXN0ZW0tdWksXG4gICAgLWFwcGxlLXN5c3RlbSxcbiAgICBCbGlua01hY1N5c3RlbUZvbnQsXG4gICAgXCJTZWdvZSBVSVwiLFxuICAgIFJvYm90byxcbiAgICBcIkhlbHZldGljYSBOZXVlXCIsXG4gICAgQXJpYWwsXG4gICAgXCJOb3RvIFNhbnNcIixcbiAgICBzYW5zLXNlcmlmLFxuICAgIFwiQXBwbGUgQ29sb3IgRW1vamlcIixcbiAgICBcIlNlZ29lIFVJIEVtb2ppXCIsXG4gICAgXCJTZWdvZSBVSSBTeW1ib2xcIixcbiAgICBcIk5vdG8gQ29sb3IgRW1vamlcIjtcbn1cblxuaDEge1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gIHBhZGRpbmc6IDAgMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgY29sb3I6IHZhcigtLWNvbG9yLXRleHQpO1xufVxuXG5wIHtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xuICBwYWRkaW5nOiAwIDFyZW07XG4gIGNvbG9yOiB2YXIoLS1jb2xvci10ZXh0KTtcbn1cblxuZm9ybSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxubGFiZWwge1xuICBmb250LXdlaWdodDogNTAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtYXJnaW4tYm90dG9tOiAwLjI1cmVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgY29sb3I6IHZhcigtLWNvbG9yLXRleHQpO1xufVxuXG5pbnB1dFt0eXBlXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XG4gIGJvcmRlcjogdmFyKC0tYm9yZGVyLXdpZHRoKSBzb2xpZCB2YXIoLS1jb2xvci1jb250cm9sLWJvcmRlcik7XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLWJhY2tncm91bmQtY2FyZCk7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci10ZXh0KTtcbn1cblxuaW5wdXRbdHlwZV06Zm9jdXMge1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gIH1cblxucCB7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xuICBsaW5lLWhlaWdodDogMnJlbTtcbn1cblxuYS5idXR0b24ge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiAxcmVtO1xufVxuXG5hLmJ1dHRvbjpsaW5rLFxuICBhLmJ1dHRvbjp2aXNpdGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1iYWNrZ3JvdW5kKTtcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItcHJpbWFyeSk7XG4gIH1cblxuYnV0dG9uIHNwYW4ge1xuICBmbGV4LWdyb3c6IDE7XG59XG5cbmJ1dHRvbixcbmEuYnV0dG9uIHtcbiAgcGFkZGluZzogMC43NXJlbSAxcmVtO1xuICBjb2xvcjogdmFyKC0tcHJvdmlkZXItY29sb3IsIHZhcigtLWNvbG9yLXByaW1hcnkpKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJvdmlkZXItYmcpO1xuICBmb250LXNpemU6IDEuMXJlbTtcbiAgbWluLWhlaWdodDogNjJweDtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlLWluLW91dDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuOmlzKGJ1dHRvbixhLmJ1dHRvbik6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByb3ZpZGVyLWJnLWhvdmVyLCB2YXIoLS1jb2xvci1iYWNrZ3JvdW5kLWhvdmVyKSk7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5cbjppcyhidXR0b24sYS5idXR0b24pOmFjdGl2ZSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5cbjppcyhidXR0b24sYS5idXR0b24pICNwcm92aWRlci1sb2dvIHtcbiAgICB3aWR0aDogMjVweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG46aXMoYnV0dG9uLGEuYnV0dG9uKSAjcHJvdmlkZXItbG9nby1kYXJrIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiNzdWJtaXRCdXR0b24ge1xuICBjb2xvcjogdmFyKC0tYnV0dG9uLXRleHQtY29sb3IsIHZhcigtLWNvbG9yLWluZm8tdGV4dCkpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1icmFuZC1jb2xvciwgdmFyKC0tY29sb3ItaW5mbykpO1xuICB3aWR0aDogMTAwJTtcbn1cblxuI3N1Ym1pdEJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKFxuICAgICAgLS1idXR0b24taG92ZXItYmcsXG4gICAgICB2YXIoLS1jb2xvci1pbmZvLWhvdmVyKVxuICAgICkgIWltcG9ydGFudDtcbiAgfVxuXG5hLnNpdGUge1xuICBjb2xvcjogdmFyKC0tY29sb3ItcHJpbWFyeSk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMnJlbTtcbn1cblxuYS5zaXRlOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuXG4ucGFnZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4ucGFnZSA+IGRpdiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbi5lcnJvciBhLmJ1dHRvbiB7XG4gICAgcGFkZGluZy1sZWZ0OiAycmVtO1xuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07XG4gICAgbWFyZ2luLXRvcDogMC41cmVtO1xuICB9XG5cbi5lcnJvciAubWVzc2FnZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xuICB9XG5cbi5zaWduaW4gaW5wdXRbdHlwZT1cInRleHRcIl0ge1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4uc2lnbmluIGhyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3JkZXI6IDA7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHZhcigtLWNvbG9yLXNlcGFyYXRvcik7XG4gICAgbWFyZ2luOiAycmVtIGF1dG8gMXJlbSBhdXRvO1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG5cbi5zaWduaW4gaHI6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIm9yXCI7XG4gICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jb2xvci1iYWNrZ3JvdW5kLWNhcmQpO1xuICAgICAgY29sb3I6ICM4ODg7XG4gICAgICBwYWRkaW5nOiAwIDAuNHJlbTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHRvcDogLTAuN3JlbTtcbiAgICB9XG5cbi5zaWduaW4gLmVycm9yIHtcbiAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgYm9yZGVyLXJhZGl1czogMC4zcmVtO1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLWVycm9yKTtcbiAgfVxuXG4uc2lnbmluIC5lcnJvciBwIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcbiAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMnJlbTtcbiAgICAgIGNvbG9yOiB2YXIoLS1jb2xvci1pbmZvLXRleHQpO1xuICAgIH1cblxuLnNpZ25pbiA+IGRpdixcbiAgLnNpZ25pbiBmb3JtIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4uc2lnbmluID4gZGl2IGlucHV0W3R5cGVdLCAuc2lnbmluIGZvcm0gaW5wdXRbdHlwZV0ge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xuICAgIH1cblxuLnNpZ25pbiA+IGRpdiBidXR0b24sIC5zaWduaW4gZm9ybSBidXR0b24ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4uc2lnbmluIC5wcm92aWRlciArIC5wcm92aWRlciB7XG4gICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgfVxuXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWF4LXdpZHRoOiAxNTBweDtcbiAgbWFyZ2luOiAxLjI1cmVtIDA7XG4gIG1heC1oZWlnaHQ6IDcwcHg7XG59XG5cbi5jYXJkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3ItYmFja2dyb3VuZC1jYXJkKTtcbiAgYm9yZGVyLXJhZGl1czogMnJlbTtcbiAgcGFkZGluZzogMS4yNXJlbSAycmVtO1xufVxuXG4uY2FyZCAuaGVhZGVyIHtcbiAgICBjb2xvcjogdmFyKC0tY29sb3ItcHJpbWFyeSk7XG4gIH1cblxuLnNlY3Rpb24taGVhZGVyIHtcbiAgY29sb3I6IHZhcigtLWNvbG9yLXRleHQpO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0NTBweCkge1xuICAuY2FyZCB7XG4gICAgbWFyZ2luOiAycmVtIDA7XG4gICAgd2lkdGg6IDM2OHB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0NTBweCkge1xuICAuY2FyZCB7XG4gICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgd2lkdGg6IDM0M3B4O1xuICB9XG59XG5gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/pages/styles.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/pages/verify-request.js":
/*!*************************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/verify-request.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VerifyRequestPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(action-browser)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\nfunction VerifyRequestPage(props) {\n    const { url, theme } = props;\n    return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        className: \"verify-request\",\n        children: [\n            theme.brandColor && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n                }\n            }),\n            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                className: \"card\",\n                children: [\n                    theme.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                        src: theme.logo,\n                        alt: \"Logo\",\n                        className: \"logo\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", {\n                        children: \"Check your email\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"A sign in link has been sent to your email address.\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                            className: \"site\",\n                            href: url.origin,\n                            children: url.host\n                        })\n                    })\n                ]\n            })\n        ]\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy92ZXJpZnktcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUNqRCxTQUFTSSxrQkFBa0JDLEtBQUs7SUFDM0MsTUFBTSxFQUFFQyxHQUFHLEVBQUVDLEtBQUssRUFBRSxHQUFHRjtJQUN2QixPQUFRRix3REFBS0EsQ0FBQyxPQUFPO1FBQUVLLFdBQVc7UUFBa0JDLFVBQVU7WUFBQ0YsTUFBTUcsVUFBVSxJQUFLVCx1REFBSUEsQ0FBQyxTQUFTO2dCQUFFVSx5QkFBeUI7b0JBQzdHQyxRQUFRLENBQUM7O3lCQUVKLEVBQUVMLE1BQU1HLFVBQVUsQ0FBQzs7TUFFdEMsQ0FBQztnQkFDUztZQUFFO1lBQUtQLHdEQUFLQSxDQUFDLE9BQU87Z0JBQUVLLFdBQVc7Z0JBQVFDLFVBQVU7b0JBQUNGLE1BQU1NLElBQUksSUFBSVosdURBQUlBLENBQUMsT0FBTzt3QkFBRWEsS0FBS1AsTUFBTU0sSUFBSTt3QkFBRUUsS0FBSzt3QkFBUVAsV0FBVztvQkFBTztvQkFBSVAsdURBQUlBLENBQUMsTUFBTTt3QkFBRVEsVUFBVTtvQkFBbUI7b0JBQUlSLHVEQUFJQSxDQUFDLEtBQUs7d0JBQUVRLFVBQVU7b0JBQXNEO29CQUFJUix1REFBSUEsQ0FBQyxLQUFLO3dCQUFFUSxVQUFVUix1REFBSUEsQ0FBQyxLQUFLOzRCQUFFTyxXQUFXOzRCQUFRUSxNQUFNVixJQUFJVyxNQUFNOzRCQUFFUixVQUFVSCxJQUFJWSxJQUFJO3dCQUFDO29CQUFHO2lCQUFHO1lBQUM7U0FBRztJQUFDO0FBQ3ZYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdXNlci1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy92ZXJpZnktcmVxdWVzdC5qcz82NmQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInByZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVmVyaWZ5UmVxdWVzdFBhZ2UocHJvcHMpIHtcbiAgICBjb25zdCB7IHVybCwgdGhlbWUgfSA9IHByb3BzO1xuICAgIHJldHVybiAoX2pzeHMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwidmVyaWZ5LXJlcXVlc3RcIiwgY2hpbGRyZW46IFt0aGVtZS5icmFuZENvbG9yICYmIChfanN4KFwic3R5bGVcIiwgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgICAgICBfX2h0bWw6IGBcbiAgICAgICAgOnJvb3Qge1xuICAgICAgICAgIC0tYnJhbmQtY29sb3I6ICR7dGhlbWUuYnJhbmRDb2xvcn1cbiAgICAgICAgfVxuICAgICAgYCxcbiAgICAgICAgICAgICAgICB9IH0pKSwgX2pzeHMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiY2FyZFwiLCBjaGlsZHJlbjogW3RoZW1lLmxvZ28gJiYgX2pzeChcImltZ1wiLCB7IHNyYzogdGhlbWUubG9nbywgYWx0OiBcIkxvZ29cIiwgY2xhc3NOYW1lOiBcImxvZ29cIiB9KSwgX2pzeChcImgxXCIsIHsgY2hpbGRyZW46IFwiQ2hlY2sgeW91ciBlbWFpbFwiIH0pLCBfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIkEgc2lnbiBpbiBsaW5rIGhhcyBiZWVuIHNlbnQgdG8geW91ciBlbWFpbCBhZGRyZXNzLlwiIH0pLCBfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBfanN4KFwiYVwiLCB7IGNsYXNzTmFtZTogXCJzaXRlXCIsIGhyZWY6IHVybC5vcmlnaW4sIGNoaWxkcmVuOiB1cmwuaG9zdCB9KSB9KV0gfSldIH0pKTtcbn1cbiJdLCJuYW1lcyI6WyJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiVmVyaWZ5UmVxdWVzdFBhZ2UiLCJwcm9wcyIsInVybCIsInRoZW1lIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJicmFuZENvbG9yIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJsb2dvIiwic3JjIiwiYWx0IiwiaHJlZiIsIm9yaWdpbiIsImhvc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/pages/verify-request.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/actions.js":
/*!******************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/actions.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAuthAction: () => (/* binding */ isAuthAction)\n/* harmony export */ });\nconst actions = [\n    \"providers\",\n    \"session\",\n    \"csrf\",\n    \"signin\",\n    \"signout\",\n    \"callback\",\n    \"verify-request\",\n    \"error\",\n    \"webauthn-options\"\n];\nfunction isAuthAction(action) {\n    return actions.includes(action);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9hY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxVQUFVO0lBQ1o7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0g7QUFDTSxTQUFTQyxhQUFhQyxNQUFNO0lBQy9CLE9BQU9GLFFBQVFHLFFBQVEsQ0FBQ0Q7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL3V0aWxzL2FjdGlvbnMuanM/YzRhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhY3Rpb25zID0gW1xuICAgIFwicHJvdmlkZXJzXCIsXG4gICAgXCJzZXNzaW9uXCIsXG4gICAgXCJjc3JmXCIsXG4gICAgXCJzaWduaW5cIixcbiAgICBcInNpZ25vdXRcIixcbiAgICBcImNhbGxiYWNrXCIsXG4gICAgXCJ2ZXJpZnktcmVxdWVzdFwiLFxuICAgIFwiZXJyb3JcIixcbiAgICBcIndlYmF1dGhuLW9wdGlvbnNcIixcbl07XG5leHBvcnQgZnVuY3Rpb24gaXNBdXRoQWN0aW9uKGFjdGlvbikge1xuICAgIHJldHVybiBhY3Rpb25zLmluY2x1ZGVzKGFjdGlvbik7XG59XG4iXSwibmFtZXMiOlsiYWN0aW9ucyIsImlzQXV0aEFjdGlvbiIsImFjdGlvbiIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/actions.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/assert.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/assert.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertConfig: () => (/* binding */ assertConfig)\n/* harmony export */ });\n/* harmony import */ var _cookie_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cookie.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n\n\nlet warned = false;\nfunction isValidHttpUrl(url, baseUrl) {\n    try {\n        return /^https?:/.test(new URL(url, url.startsWith(\"/\") ? baseUrl : undefined).protocol);\n    } catch  {\n        return false;\n    }\n}\nfunction isSemverString(version) {\n    return /^v\\d+(?:\\.\\d+){0,2}$/.test(version);\n}\nlet hasCredentials = false;\nlet hasEmail = false;\nlet hasWebAuthn = false;\nconst emailMethods = [\n    \"createVerificationToken\",\n    \"useVerificationToken\",\n    \"getUserByEmail\"\n];\nconst sessionMethods = [\n    \"createUser\",\n    \"getUser\",\n    \"getUserByEmail\",\n    \"getUserByAccount\",\n    \"updateUser\",\n    \"linkAccount\",\n    \"createSession\",\n    \"getSessionAndUser\",\n    \"updateSession\",\n    \"deleteSession\"\n];\nconst webauthnMethods = [\n    \"createUser\",\n    \"getUser\",\n    \"linkAccount\",\n    \"getAccount\",\n    \"getAuthenticator\",\n    \"createAuthenticator\",\n    \"listAuthenticatorsByUserId\",\n    \"updateAuthenticatorCounter\"\n];\n/**\n * Verify that the user configured Auth.js correctly.\n * Good place to mention deprecations as well.\n *\n * This is invoked before the init method, so default values are not available yet.\n */ function assertConfig(request, options) {\n    const { url } = request;\n    const warnings = [];\n    if (!warned && options.debug) warnings.push(\"debug-enabled\");\n    if (!options.trustHost) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UntrustedHost(`Host must be trusted. URL was: ${request.url}`);\n    }\n    if (!options.secret) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingSecret(\"Please define a `secret`.\");\n    }\n    const callbackUrlParam = request.query?.callbackUrl;\n    if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.origin)) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);\n    }\n    const { callbackUrl: defaultCallbackUrl } = (0,_cookie_js__WEBPACK_IMPORTED_MODULE_0__.defaultCookies)(options.useSecureCookies ?? url.protocol === \"https:\");\n    const callbackUrlCookie = request.cookies?.[options.cookies?.callbackUrl?.name ?? defaultCallbackUrl.name];\n    if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.origin)) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlCookie}`);\n    }\n    // Keep track of webauthn providers that use conditional UI\n    let hasConditionalUIProvider = false;\n    for (const p of options.providers){\n        const provider = typeof p === \"function\" ? p() : p;\n        if ((provider.type === \"oauth\" || provider.type === \"oidc\") && !(provider.issuer ?? provider.options?.issuer)) {\n            const { authorization: a, token: t, userinfo: u } = provider;\n            let key;\n            if (typeof a !== \"string\" && !a?.url) key = \"authorization\";\n            else if (typeof t !== \"string\" && !t?.url) key = \"token\";\n            else if (typeof u !== \"string\" && !u?.url) key = \"userinfo\";\n            if (key) {\n                return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidEndpoints(`Provider \"${provider.id}\" is missing both \\`issuer\\` and \\`${key}\\` endpoint config. At least one of them is required.`);\n            }\n        }\n        if (provider.type === \"credentials\") hasCredentials = true;\n        else if (provider.type === \"email\") hasEmail = true;\n        else if (provider.type === \"webauthn\") {\n            hasWebAuthn = true;\n            // Validate simpleWebAuthnBrowserVersion\n            if (provider.simpleWebAuthnBrowserVersion && !isSemverString(provider.simpleWebAuthnBrowserVersion)) {\n                return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthError(`Invalid provider config for \"${provider.id}\": simpleWebAuthnBrowserVersion \"${provider.simpleWebAuthnBrowserVersion}\" must be a valid semver string.`);\n            }\n            if (provider.enableConditionalUI) {\n                // Make sure only one webauthn provider has \"enableConditionalUI\" set to true\n                if (hasConditionalUIProvider) {\n                    return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.DuplicateConditionalUI(`Multiple webauthn providers have 'enableConditionalUI' set to True. Only one provider can have this option enabled at a time.`);\n                }\n                hasConditionalUIProvider = true;\n                // Make sure at least one formField has \"webauthn\" in its autocomplete param\n                const hasWebauthnFormField = Object.values(provider.formFields).some((f)=>f.autocomplete && f.autocomplete.toString().indexOf(\"webauthn\") > -1);\n                if (!hasWebauthnFormField) {\n                    return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingWebAuthnAutocomplete(`Provider \"${provider.id}\" has 'enableConditionalUI' set to True, but none of its formFields have 'webauthn' in their autocomplete param.`);\n                }\n            }\n        }\n    }\n    if (hasCredentials) {\n        const dbStrategy = options.session?.strategy === \"database\";\n        const onlyCredentials = !options.providers.some((p)=>(typeof p === \"function\" ? p() : p).type !== \"credentials\");\n        if (dbStrategy && onlyCredentials) {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnsupportedStrategy(\"Signing in with credentials only supported if JWT strategy is enabled\");\n        }\n        const credentialsNoAuthorize = options.providers.some((p)=>{\n            const provider = typeof p === \"function\" ? p() : p;\n            return provider.type === \"credentials\" && !provider.authorize;\n        });\n        if (credentialsNoAuthorize) {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAuthorize(\"Must define an authorize() handler to use credentials authentication provider\");\n        }\n    }\n    const { adapter, session } = options;\n    let requiredMethods = [];\n    if (hasEmail || session?.strategy === \"database\" || !session?.strategy && adapter) {\n        if (hasEmail) {\n            if (!adapter) return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapter(\"Email login requires an adapter.\");\n            requiredMethods.push(...emailMethods);\n        } else {\n            if (!adapter) return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapter(\"Database session requires an adapter.\");\n            requiredMethods.push(...sessionMethods);\n        }\n    }\n    if (hasWebAuthn) {\n        // Log experimental warning\n        if (options.experimental?.enableWebAuthn) {\n            warnings.push(\"experimental-webauthn\");\n        } else {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.ExperimentalFeatureNotEnabled(\"WebAuthn is an experimental feature. To enable it, set `experimental.enableWebAuthn` to `true` in your config.\");\n        }\n        if (!adapter) return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapter(\"WebAuthn requires an adapter.\");\n        requiredMethods.push(...webauthnMethods);\n    }\n    if (adapter) {\n        const missing = requiredMethods.filter((m)=>!(m in adapter));\n        if (missing.length) {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapterMethods(`Required adapter methods were missing: ${missing.join(\", \")}`);\n        }\n    }\n    if (!warned) warned = true;\n    return warnings;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/assert.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/callback-url.js":
/*!***********************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/callback-url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCallbackUrl: () => (/* binding */ createCallbackUrl)\n/* harmony export */ });\n/**\n * Get callback URL based on query param / cookie + validation,\n * and add it to `req.options.callbackUrl`.\n */ async function createCallbackUrl({ options, paramValue, cookieValue }) {\n    const { url, callbacks } = options;\n    let callbackUrl = url.origin;\n    if (paramValue) {\n        // If callbackUrl form field or query parameter is passed try to use it if allowed\n        callbackUrl = await callbacks.redirect({\n            url: paramValue,\n            baseUrl: url.origin\n        });\n    } else if (cookieValue) {\n        // If no callbackUrl specified, try using the value from the cookie if allowed\n        callbackUrl = await callbacks.redirect({\n            url: cookieValue,\n            baseUrl: url.origin\n        });\n    }\n    return {\n        callbackUrl,\n        // Save callback URL in a cookie so that it can be used for subsequent requests in signin/signout/callback flow\n        callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9jYWxsYmFjay11cmwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUNNLGVBQWVBLGtCQUFrQixFQUFFQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsV0FBVyxFQUFHO0lBQ3pFLE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxTQUFTLEVBQUUsR0FBR0o7SUFDM0IsSUFBSUssY0FBY0YsSUFBSUcsTUFBTTtJQUM1QixJQUFJTCxZQUFZO1FBQ1osa0ZBQWtGO1FBQ2xGSSxjQUFjLE1BQU1ELFVBQVVHLFFBQVEsQ0FBQztZQUNuQ0osS0FBS0Y7WUFDTE8sU0FBU0wsSUFBSUcsTUFBTTtRQUN2QjtJQUNKLE9BQ0ssSUFBSUosYUFBYTtRQUNsQiw4RUFBOEU7UUFDOUVHLGNBQWMsTUFBTUQsVUFBVUcsUUFBUSxDQUFDO1lBQ25DSixLQUFLRDtZQUNMTSxTQUFTTCxJQUFJRyxNQUFNO1FBQ3ZCO0lBQ0o7SUFDQSxPQUFPO1FBQ0hEO1FBQ0EsK0dBQStHO1FBQy9HSSxtQkFBbUJKLGdCQUFnQkgsY0FBY0csY0FBY0s7SUFDbkU7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3VzZXItZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvY2FsbGJhY2stdXJsLmpzPzY2N2IiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZXQgY2FsbGJhY2sgVVJMIGJhc2VkIG9uIHF1ZXJ5IHBhcmFtIC8gY29va2llICsgdmFsaWRhdGlvbixcbiAqIGFuZCBhZGQgaXQgdG8gYHJlcS5vcHRpb25zLmNhbGxiYWNrVXJsYC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNhbGxiYWNrVXJsKHsgb3B0aW9ucywgcGFyYW1WYWx1ZSwgY29va2llVmFsdWUsIH0pIHtcbiAgICBjb25zdCB7IHVybCwgY2FsbGJhY2tzIH0gPSBvcHRpb25zO1xuICAgIGxldCBjYWxsYmFja1VybCA9IHVybC5vcmlnaW47XG4gICAgaWYgKHBhcmFtVmFsdWUpIHtcbiAgICAgICAgLy8gSWYgY2FsbGJhY2tVcmwgZm9ybSBmaWVsZCBvciBxdWVyeSBwYXJhbWV0ZXIgaXMgcGFzc2VkIHRyeSB0byB1c2UgaXQgaWYgYWxsb3dlZFxuICAgICAgICBjYWxsYmFja1VybCA9IGF3YWl0IGNhbGxiYWNrcy5yZWRpcmVjdCh7XG4gICAgICAgICAgICB1cmw6IHBhcmFtVmFsdWUsXG4gICAgICAgICAgICBiYXNlVXJsOiB1cmwub3JpZ2luLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoY29va2llVmFsdWUpIHtcbiAgICAgICAgLy8gSWYgbm8gY2FsbGJhY2tVcmwgc3BlY2lmaWVkLCB0cnkgdXNpbmcgdGhlIHZhbHVlIGZyb20gdGhlIGNvb2tpZSBpZiBhbGxvd2VkXG4gICAgICAgIGNhbGxiYWNrVXJsID0gYXdhaXQgY2FsbGJhY2tzLnJlZGlyZWN0KHtcbiAgICAgICAgICAgIHVybDogY29va2llVmFsdWUsXG4gICAgICAgICAgICBiYXNlVXJsOiB1cmwub3JpZ2luLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2FsbGJhY2tVcmwsXG4gICAgICAgIC8vIFNhdmUgY2FsbGJhY2sgVVJMIGluIGEgY29va2llIHNvIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHN1YnNlcXVlbnQgcmVxdWVzdHMgaW4gc2lnbmluL3NpZ25vdXQvY2FsbGJhY2sgZmxvd1xuICAgICAgICBjYWxsYmFja1VybENvb2tpZTogY2FsbGJhY2tVcmwgIT09IGNvb2tpZVZhbHVlID8gY2FsbGJhY2tVcmwgOiB1bmRlZmluZWQsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDYWxsYmFja1VybCIsIm9wdGlvbnMiLCJwYXJhbVZhbHVlIiwiY29va2llVmFsdWUiLCJ1cmwiLCJjYWxsYmFja3MiLCJjYWxsYmFja1VybCIsIm9yaWdpbiIsInJlZGlyZWN0IiwiYmFzZVVybCIsImNhbGxiYWNrVXJsQ29va2llIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/callback-url.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/cookie.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/cookie.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionStore: () => (/* binding */ SessionStore),\n/* harmony export */   defaultCookies: () => (/* binding */ defaultCookies)\n/* harmony export */ });\nvar __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SessionStore_instances, _SessionStore_chunks, _SessionStore_option, _SessionStore_logger, _SessionStore_chunk, _SessionStore_clean;\n// Uncomment to recalculate the estimated size\n// of an empty session cookie\n// import { serialize } from \"cookie\"\n// console.log(\n//   \"Cookie estimated to be \",\n//   serialize(`__Secure.authjs.session-token.0`, \"\", {\n//     expires: new Date(),\n//     httpOnly: true,\n//     maxAge: Number.MAX_SAFE_INTEGER,\n//     path: \"/\",\n//     sameSite: \"strict\",\n//     secure: true,\n//     domain: \"example.com\",\n//   }).length,\n//   \" bytes\"\n// )\nconst ALLOWED_COOKIE_SIZE = 4096;\n// Based on commented out section above\nconst ESTIMATED_EMPTY_COOKIE_SIZE = 160;\nconst CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE;\n/**\n * Use secure cookies if the site uses HTTPS\n * This being conditional allows cookies to work non-HTTPS development URLs\n * Honour secure cookie option, which sets 'secure' and also adds '__Secure-'\n * prefix, but enable them by default if the site URL is HTTPS; but not for\n * non-HTTPS URLs like http://localhost which are used in development).\n * For more on prefixes see https://googlechrome.github.io/samples/cookie-prefixes/\n *\n * @TODO Review cookie settings (names, options)\n */ function defaultCookies(useSecureCookies) {\n    const cookiePrefix = useSecureCookies ? \"__Secure-\" : \"\";\n    return {\n        // default cookie options\n        sessionToken: {\n            name: `${cookiePrefix}authjs.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        callbackUrl: {\n            name: `${cookiePrefix}authjs.callback-url`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        csrfToken: {\n            // Default to __Host- for CSRF token for additional protection if using useSecureCookies\n            // NB: The `__Host-` prefix is stricter than the `__Secure-` prefix.\n            name: `${useSecureCookies ? \"__Host-\" : \"\"}authjs.csrf-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        pkceCodeVerifier: {\n            name: `${cookiePrefix}authjs.pkce.code_verifier`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        state: {\n            name: `${cookiePrefix}authjs.state`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        nonce: {\n            name: `${cookiePrefix}authjs.nonce`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        webauthnChallenge: {\n            name: `${cookiePrefix}authjs.challenge`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        }\n    };\n}\nclass SessionStore {\n    constructor(option, cookies, logger){\n        _SessionStore_instances.add(this);\n        _SessionStore_chunks.set(this, {});\n        _SessionStore_option.set(this, void 0);\n        _SessionStore_logger.set(this, void 0);\n        __classPrivateFieldSet(this, _SessionStore_logger, logger, \"f\");\n        __classPrivateFieldSet(this, _SessionStore_option, option, \"f\");\n        if (!cookies) return;\n        const { name: sessionCookiePrefix } = option;\n        for (const [name, value] of Object.entries(cookies)){\n            if (!name.startsWith(sessionCookiePrefix) || !value) continue;\n            __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = value;\n        }\n    }\n    /**\n     * The JWT Session or database Session ID\n     * constructed from the cookie chunks.\n     */ get value() {\n        // Sort the chunks by their keys before joining\n        const sortedKeys = Object.keys(__classPrivateFieldGet(this, _SessionStore_chunks, \"f\")).sort((a, b)=>{\n            const aSuffix = parseInt(a.split(\".\").pop() || \"0\");\n            const bSuffix = parseInt(b.split(\".\").pop() || \"0\");\n            return aSuffix - bSuffix;\n        });\n        // Use the sorted keys to join the chunks in the correct order\n        return sortedKeys.map((key)=>__classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[key]).join(\"\");\n    }\n    /**\n     * Given a cookie value, return new cookies, chunked, to fit the allowed cookie size.\n     * If the cookie has changed from chunked to unchunked or vice versa,\n     * it deletes the old cookies as well.\n     */ chunk(value, options) {\n        // Assume all cookies should be cleaned by default\n        const cookies = __classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_clean).call(this);\n        // Calculate new chunks\n        const chunked = __classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_chunk).call(this, {\n            name: __classPrivateFieldGet(this, _SessionStore_option, \"f\").name,\n            value,\n            options: {\n                ...__classPrivateFieldGet(this, _SessionStore_option, \"f\").options,\n                ...options\n            }\n        });\n        // Update stored chunks / cookies\n        for (const chunk of chunked){\n            cookies[chunk.name] = chunk;\n        }\n        return Object.values(cookies);\n    }\n    /** Returns a list of cookies that should be cleaned. */ clean() {\n        return Object.values(__classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_clean).call(this));\n    }\n}\n_SessionStore_chunks = new WeakMap(), _SessionStore_option = new WeakMap(), _SessionStore_logger = new WeakMap(), _SessionStore_instances = new WeakSet(), _SessionStore_chunk = function _SessionStore_chunk(cookie) {\n    const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE);\n    if (chunkCount === 1) {\n        __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[cookie.name] = cookie.value;\n        return [\n            cookie\n        ];\n    }\n    const cookies = [];\n    for(let i = 0; i < chunkCount; i++){\n        const name = `${cookie.name}.${i}`;\n        const value = cookie.value.substr(i * CHUNK_SIZE, CHUNK_SIZE);\n        cookies.push({\n            ...cookie,\n            name,\n            value\n        });\n        __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = value;\n    }\n    __classPrivateFieldGet(this, _SessionStore_logger, \"f\").debug(\"CHUNKING_SESSION_COOKIE\", {\n        message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,\n        emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,\n        valueSize: cookie.value.length,\n        chunks: cookies.map((c)=>c.value.length + ESTIMATED_EMPTY_COOKIE_SIZE)\n    });\n    return cookies;\n}, _SessionStore_clean = function _SessionStore_clean() {\n    const cleanedChunks = {};\n    for(const name in __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")){\n        delete __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")?.[name];\n        cleanedChunks[name] = {\n            name,\n            value: \"\",\n            options: {\n                ...__classPrivateFieldGet(this, _SessionStore_option, \"f\").options,\n                maxAge: 0\n            }\n        };\n    }\n    return cleanedChunks;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/cookie.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/date.js":
/*!***************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/date.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromDate: () => (/* binding */ fromDate)\n/* harmony export */ });\n/**\n * Takes a number in seconds and returns the date in the future.\n * Optionally takes a second date parameter. In that case\n * the date in the future will be calculated from that date instead of now.\n */ function fromDate(time, date = Date.now()) {\n    return new Date(date + time * 1000);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9kYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBQ00sU0FBU0EsU0FBU0MsSUFBSSxFQUFFQyxPQUFPQyxLQUFLQyxHQUFHLEVBQUU7SUFDNUMsT0FBTyxJQUFJRCxLQUFLRCxPQUFPRCxPQUFPO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdXNlci1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9kYXRlLmpzPzlkOTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWtlcyBhIG51bWJlciBpbiBzZWNvbmRzIGFuZCByZXR1cm5zIHRoZSBkYXRlIGluIHRoZSBmdXR1cmUuXG4gKiBPcHRpb25hbGx5IHRha2VzIGEgc2Vjb25kIGRhdGUgcGFyYW1ldGVyLiBJbiB0aGF0IGNhc2VcbiAqIHRoZSBkYXRlIGluIHRoZSBmdXR1cmUgd2lsbCBiZSBjYWxjdWxhdGVkIGZyb20gdGhhdCBkYXRlIGluc3RlYWQgb2Ygbm93LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbURhdGUodGltZSwgZGF0ZSA9IERhdGUubm93KCkpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoZGF0ZSArIHRpbWUgKiAxMDAwKTtcbn1cbiJdLCJuYW1lcyI6WyJmcm9tRGF0ZSIsInRpbWUiLCJkYXRlIiwiRGF0ZSIsIm5vdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/date.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/env.js":
/*!**************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/env.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createActionURL: () => (/* binding */ createActionURL),\n/* harmony export */   setEnvDefaults: () => (/* binding */ setEnvDefaults)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/logger.js\");\n\n\n/** Set default env variables on the config object */ function setEnvDefaults(envObject, config) {\n    try {\n        const url = envObject.AUTH_URL;\n        if (url && !config.basePath) config.basePath = new URL(url).pathname;\n    } catch  {} finally{\n        config.basePath ?? (config.basePath = `/auth`);\n    }\n    if (!config.secret?.length) {\n        config.secret = [];\n        const secret = envObject.AUTH_SECRET;\n        if (secret) config.secret.push(secret);\n        for (const i of [\n            1,\n            2,\n            3\n        ]){\n            const secret = envObject[`AUTH_SECRET_${i}`];\n            if (secret) config.secret.unshift(secret);\n        }\n    }\n    if (!config.secret?.length) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.MissingSecret(\"Missing secret, please set AUTH_SECRET or config.secret\");\n    }\n    config.redirectProxyUrl ?? (config.redirectProxyUrl = envObject.AUTH_REDIRECT_PROXY_URL);\n    config.trustHost ?? (config.trustHost = !!(envObject.AUTH_URL ?? envObject.AUTH_TRUST_HOST ?? envObject.VERCEL ?? envObject.CF_PAGES ?? envObject.NODE_ENV !== \"production\"));\n    config.providers = config.providers.map((p)=>{\n        const finalProvider = typeof p === \"function\" ? p({}) : p;\n        const ID = finalProvider.id.toUpperCase();\n        if (finalProvider.type === \"oauth\" || finalProvider.type === \"oidc\") {\n            finalProvider.clientId ?? (finalProvider.clientId = envObject[`AUTH_${ID}_ID`]);\n            finalProvider.clientSecret ?? (finalProvider.clientSecret = envObject[`AUTH_${ID}_SECRET`]);\n            if (finalProvider.type === \"oidc\") {\n                finalProvider.issuer ?? (finalProvider.issuer = envObject[`AUTH_${ID}_ISSUER`]);\n            }\n        } else if (finalProvider.type === \"email\") {\n            finalProvider.apiKey ?? (finalProvider.apiKey = envObject[`AUTH_${ID}_KEY`]);\n        }\n        return finalProvider;\n    });\n}\nfunction createActionURL(action, protocol, headers, envObject, basePath) {\n    let envUrl = envObject.AUTH_URL ?? envObject.NEXTAUTH_URL;\n    let url;\n    if (envUrl) {\n        url = new URL(envUrl);\n        if (basePath && basePath !== \"/\" && url.pathname !== \"/\") {\n            _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warn(url.pathname === basePath ? \"env-url-basepath-redundant\" : \"env-url-basepath-mismatch\");\n            url.pathname = \"/\";\n        }\n    } else {\n        const detectedHost = headers.get(\"x-forwarded-host\") ?? headers.get(\"host\");\n        const detectedProtocol = headers.get(\"x-forwarded-proto\") ?? protocol ?? \"https\";\n        url = new URL(`${detectedProtocol}://${detectedHost}`);\n    }\n    // remove trailing slash\n    const sanitizedUrl = url.toString().replace(/\\/$/, \"\");\n    if (basePath) {\n        // remove leading and trailing slash\n        const sanitizedBasePath = basePath?.replace(/(^\\/|\\/$)/g, \"\") ?? \"\";\n        return new URL(`${sanitizedUrl}/${sanitizedBasePath}/${action}`);\n    }\n    return new URL(`${sanitizedUrl}/${action}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/env.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/logger.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/logger.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   setLogger: () => (/* binding */ setLogger)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n\nconst red = \"\\x1b[31m\";\nconst yellow = \"\\x1b[33m\";\nconst grey = \"\\x1b[90m\";\nconst reset = \"\\x1b[0m\";\nconst logger = {\n    error (error) {\n        const name = error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError ? error.type : error.name;\n        console.error(`${red}[auth][error]${reset} ${name}: ${error.message}`);\n        if (error.cause && typeof error.cause === \"object\" && \"err\" in error.cause && error.cause.err instanceof Error) {\n            const { err, ...data } = error.cause;\n            console.error(`${red}[auth][cause]${reset}:`, err.stack);\n            if (data) console.error(`${red}[auth][details]${reset}:`, JSON.stringify(data, null, 2));\n        } else if (error.stack) {\n            console.error(error.stack.replace(/.*/, \"\").substring(1));\n        }\n    },\n    warn (code) {\n        const url = `https://warnings.authjs.dev#${code}`;\n        console.warn(`${yellow}[auth][warn][${code}]${reset}`, `Read more: ${url}`);\n    },\n    debug (message, metadata) {\n        console.log(`${grey}[auth][debug]:${reset} ${message}`, JSON.stringify(metadata, null, 2));\n    }\n};\n/**\n * Override the built-in logger with user's implementation.\n * Any `undefined` level will use the default logger.\n */ function setLogger(newLogger = {}, debug) {\n    // Turn off debug logging if `debug` isn't set to `true`\n    if (!debug) logger.debug = ()=>{};\n    if (newLogger.error) logger.error = newLogger.error;\n    if (newLogger.warn) logger.warn = newLogger.warn;\n    if (newLogger.debug) logger.debug = newLogger.debug;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9sb2dnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQzVDLE1BQU1DLE1BQU07QUFDWixNQUFNQyxTQUFTO0FBQ2YsTUFBTUMsT0FBTztBQUNiLE1BQU1DLFFBQVE7QUFDUCxNQUFNQyxTQUFTO0lBQ2xCQyxPQUFNQSxLQUFLO1FBQ1AsTUFBTUMsT0FBT0QsaUJBQWlCTixpREFBU0EsR0FBR00sTUFBTUUsSUFBSSxHQUFHRixNQUFNQyxJQUFJO1FBQ2pFRSxRQUFRSCxLQUFLLENBQUMsQ0FBQyxFQUFFTCxJQUFJLGFBQWEsRUFBRUcsTUFBTSxDQUFDLEVBQUVHLEtBQUssRUFBRSxFQUFFRCxNQUFNSSxPQUFPLENBQUMsQ0FBQztRQUNyRSxJQUFJSixNQUFNSyxLQUFLLElBQ1gsT0FBT0wsTUFBTUssS0FBSyxLQUFLLFlBQ3ZCLFNBQVNMLE1BQU1LLEtBQUssSUFDcEJMLE1BQU1LLEtBQUssQ0FBQ0MsR0FBRyxZQUFZQyxPQUFPO1lBQ2xDLE1BQU0sRUFBRUQsR0FBRyxFQUFFLEdBQUdFLE1BQU0sR0FBR1IsTUFBTUssS0FBSztZQUNwQ0YsUUFBUUgsS0FBSyxDQUFDLENBQUMsRUFBRUwsSUFBSSxhQUFhLEVBQUVHLE1BQU0sQ0FBQyxDQUFDLEVBQUVRLElBQUlHLEtBQUs7WUFDdkQsSUFBSUQsTUFDQUwsUUFBUUgsS0FBSyxDQUFDLENBQUMsRUFBRUwsSUFBSSxlQUFlLEVBQUVHLE1BQU0sQ0FBQyxDQUFDLEVBQUVZLEtBQUtDLFNBQVMsQ0FBQ0gsTUFBTSxNQUFNO1FBQ25GLE9BQ0ssSUFBSVIsTUFBTVMsS0FBSyxFQUFFO1lBQ2xCTixRQUFRSCxLQUFLLENBQUNBLE1BQU1TLEtBQUssQ0FBQ0csT0FBTyxDQUFDLE1BQU0sSUFBSUMsU0FBUyxDQUFDO1FBQzFEO0lBQ0o7SUFDQUMsTUFBS0MsSUFBSTtRQUNMLE1BQU1DLE1BQU0sQ0FBQyw0QkFBNEIsRUFBRUQsS0FBSyxDQUFDO1FBQ2pEWixRQUFRVyxJQUFJLENBQUMsQ0FBQyxFQUFFbEIsT0FBTyxhQUFhLEVBQUVtQixLQUFLLENBQUMsRUFBRWpCLE1BQU0sQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFa0IsSUFBSSxDQUFDO0lBQzlFO0lBQ0FDLE9BQU1iLE9BQU8sRUFBRWMsUUFBUTtRQUNuQmYsUUFBUWdCLEdBQUcsQ0FBQyxDQUFDLEVBQUV0QixLQUFLLGNBQWMsRUFBRUMsTUFBTSxDQUFDLEVBQUVNLFFBQVEsQ0FBQyxFQUFFTSxLQUFLQyxTQUFTLENBQUNPLFVBQVUsTUFBTTtJQUMzRjtBQUNKLEVBQUU7QUFDRjs7O0NBR0MsR0FDTSxTQUFTRSxVQUFVQyxZQUFZLENBQUMsQ0FBQyxFQUFFSixLQUFLO0lBQzNDLHdEQUF3RDtJQUN4RCxJQUFJLENBQUNBLE9BQ0RsQixPQUFPa0IsS0FBSyxHQUFHLEtBQVE7SUFDM0IsSUFBSUksVUFBVXJCLEtBQUssRUFDZkQsT0FBT0MsS0FBSyxHQUFHcUIsVUFBVXJCLEtBQUs7SUFDbEMsSUFBSXFCLFVBQVVQLElBQUksRUFDZGYsT0FBT2UsSUFBSSxHQUFHTyxVQUFVUCxJQUFJO0lBQ2hDLElBQUlPLFVBQVVKLEtBQUssRUFDZmxCLE9BQU9rQixLQUFLLEdBQUdJLFVBQVVKLEtBQUs7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91c2VyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL3V0aWxzL2xvZ2dlci5qcz9kOTRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gXCIuLi8uLi9lcnJvcnMuanNcIjtcbmNvbnN0IHJlZCA9IFwiXFx4MWJbMzFtXCI7XG5jb25zdCB5ZWxsb3cgPSBcIlxceDFiWzMzbVwiO1xuY29uc3QgZ3JleSA9IFwiXFx4MWJbOTBtXCI7XG5jb25zdCByZXNldCA9IFwiXFx4MWJbMG1cIjtcbmV4cG9ydCBjb25zdCBsb2dnZXIgPSB7XG4gICAgZXJyb3IoZXJyb3IpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGVycm9yIGluc3RhbmNlb2YgQXV0aEVycm9yID8gZXJyb3IudHlwZSA6IGVycm9yLm5hbWU7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYCR7cmVkfVthdXRoXVtlcnJvcl0ke3Jlc2V0fSAke25hbWV9OiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgICAgIGlmIChlcnJvci5jYXVzZSAmJlxuICAgICAgICAgICAgdHlwZW9mIGVycm9yLmNhdXNlID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICBcImVyclwiIGluIGVycm9yLmNhdXNlICYmXG4gICAgICAgICAgICBlcnJvci5jYXVzZS5lcnIgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgY29uc3QgeyBlcnIsIC4uLmRhdGEgfSA9IGVycm9yLmNhdXNlO1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgJHtyZWR9W2F1dGhdW2NhdXNlXSR7cmVzZXR9OmAsIGVyci5zdGFjayk7XG4gICAgICAgICAgICBpZiAoZGF0YSlcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGAke3JlZH1bYXV0aF1bZGV0YWlsc10ke3Jlc2V0fTpgLCBKU09OLnN0cmluZ2lmeShkYXRhLCBudWxsLCAyKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZXJyb3Iuc3RhY2spIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3Iuc3RhY2sucmVwbGFjZSgvLiovLCBcIlwiKS5zdWJzdHJpbmcoMSkpO1xuICAgICAgICB9XG4gICAgfSxcbiAgICB3YXJuKGNvZGUpIHtcbiAgICAgICAgY29uc3QgdXJsID0gYGh0dHBzOi8vd2FybmluZ3MuYXV0aGpzLmRldiMke2NvZGV9YDtcbiAgICAgICAgY29uc29sZS53YXJuKGAke3llbGxvd31bYXV0aF1bd2Fybl1bJHtjb2RlfV0ke3Jlc2V0fWAsIGBSZWFkIG1vcmU6ICR7dXJsfWApO1xuICAgIH0sXG4gICAgZGVidWcobWVzc2FnZSwgbWV0YWRhdGEpIHtcbiAgICAgICAgY29uc29sZS5sb2coYCR7Z3JleX1bYXV0aF1bZGVidWddOiR7cmVzZXR9ICR7bWVzc2FnZX1gLCBKU09OLnN0cmluZ2lmeShtZXRhZGF0YSwgbnVsbCwgMikpO1xuICAgIH0sXG59O1xuLyoqXG4gKiBPdmVycmlkZSB0aGUgYnVpbHQtaW4gbG9nZ2VyIHdpdGggdXNlcidzIGltcGxlbWVudGF0aW9uLlxuICogQW55IGB1bmRlZmluZWRgIGxldmVsIHdpbGwgdXNlIHRoZSBkZWZhdWx0IGxvZ2dlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldExvZ2dlcihuZXdMb2dnZXIgPSB7fSwgZGVidWcpIHtcbiAgICAvLyBUdXJuIG9mZiBkZWJ1ZyBsb2dnaW5nIGlmIGBkZWJ1Z2AgaXNuJ3Qgc2V0IHRvIGB0cnVlYFxuICAgIGlmICghZGVidWcpXG4gICAgICAgIGxvZ2dlci5kZWJ1ZyA9ICgpID0+IHsgfTtcbiAgICBpZiAobmV3TG9nZ2VyLmVycm9yKVxuICAgICAgICBsb2dnZXIuZXJyb3IgPSBuZXdMb2dnZXIuZXJyb3I7XG4gICAgaWYgKG5ld0xvZ2dlci53YXJuKVxuICAgICAgICBsb2dnZXIud2FybiA9IG5ld0xvZ2dlci53YXJuO1xuICAgIGlmIChuZXdMb2dnZXIuZGVidWcpXG4gICAgICAgIGxvZ2dlci5kZWJ1ZyA9IG5ld0xvZ2dlci5kZWJ1Zztcbn1cbiJdLCJuYW1lcyI6WyJBdXRoRXJyb3IiLCJyZWQiLCJ5ZWxsb3ciLCJncmV5IiwicmVzZXQiLCJsb2dnZXIiLCJlcnJvciIsIm5hbWUiLCJ0eXBlIiwiY29uc29sZSIsIm1lc3NhZ2UiLCJjYXVzZSIsImVyciIsIkVycm9yIiwiZGF0YSIsInN0YWNrIiwiSlNPTiIsInN0cmluZ2lmeSIsInJlcGxhY2UiLCJzdWJzdHJpbmciLCJ3YXJuIiwiY29kZSIsInVybCIsImRlYnVnIiwibWV0YWRhdGEiLCJsb2ciLCJzZXRMb2dnZXIiLCJuZXdMb2dnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/logger.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/merge.js":
/*!****************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/merge.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   merge: () => (/* binding */ merge)\n/* harmony export */ });\n// Source: https://stackoverflow.com/a/34749873/5364135\n/** Simple object check */ function isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\n/** Deep merge two objects */ function merge(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for(const key in source){\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, {\n                    [key]: {}\n                });\n                merge(target[key], source[key]);\n            } else {\n                Object.assign(target, {\n                    [key]: source[key]\n                });\n            }\n        }\n    }\n    return merge(target, ...sources);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9tZXJnZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsdURBQXVEO0FBQ3ZELHdCQUF3QixHQUN4QixTQUFTQSxTQUFTQyxJQUFJO0lBQ2xCLE9BQU9BLFFBQVEsT0FBT0EsU0FBUyxZQUFZLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0Y7QUFDOUQ7QUFDQSwyQkFBMkIsR0FDcEIsU0FBU0csTUFBTUMsTUFBTSxFQUFFLEdBQUdDLE9BQU87SUFDcEMsSUFBSSxDQUFDQSxRQUFRQyxNQUFNLEVBQ2YsT0FBT0Y7SUFDWCxNQUFNRyxTQUFTRixRQUFRRyxLQUFLO0lBQzVCLElBQUlULFNBQVNLLFdBQVdMLFNBQVNRLFNBQVM7UUFDdEMsSUFBSyxNQUFNRSxPQUFPRixPQUFRO1lBQ3RCLElBQUlSLFNBQVNRLE1BQU0sQ0FBQ0UsSUFBSSxHQUFHO2dCQUN2QixJQUFJLENBQUNMLE1BQU0sQ0FBQ0ssSUFBSSxFQUNaQyxPQUFPQyxNQUFNLENBQUNQLFFBQVE7b0JBQUUsQ0FBQ0ssSUFBSSxFQUFFLENBQUM7Z0JBQUU7Z0JBQ3RDTixNQUFNQyxNQUFNLENBQUNLLElBQUksRUFBRUYsTUFBTSxDQUFDRSxJQUFJO1lBQ2xDLE9BQ0s7Z0JBQ0RDLE9BQU9DLE1BQU0sQ0FBQ1AsUUFBUTtvQkFBRSxDQUFDSyxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0UsSUFBSTtnQkFBQztZQUMvQztRQUNKO0lBQ0o7SUFDQSxPQUFPTixNQUFNQyxXQUFXQztBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3VzZXItZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvbWVyZ2UuanM/OTI3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTb3VyY2U6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zNDc0OTg3My81MzY0MTM1XG4vKiogU2ltcGxlIG9iamVjdCBjaGVjayAqL1xuZnVuY3Rpb24gaXNPYmplY3QoaXRlbSkge1xuICAgIHJldHVybiBpdGVtICYmIHR5cGVvZiBpdGVtID09PSBcIm9iamVjdFwiICYmICFBcnJheS5pc0FycmF5KGl0ZW0pO1xufVxuLyoqIERlZXAgbWVyZ2UgdHdvIG9iamVjdHMgKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZSh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgICBpZiAoIXNvdXJjZXMubGVuZ3RoKVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIGNvbnN0IHNvdXJjZSA9IHNvdXJjZXMuc2hpZnQoKTtcbiAgICBpZiAoaXNPYmplY3QodGFyZ2V0KSAmJiBpc09iamVjdChzb3VyY2UpKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIHNvdXJjZSkge1xuICAgICAgICAgICAgaWYgKGlzT2JqZWN0KHNvdXJjZVtrZXldKSkge1xuICAgICAgICAgICAgICAgIGlmICghdGFyZ2V0W2tleV0pXG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiB7fSB9KTtcbiAgICAgICAgICAgICAgICBtZXJnZSh0YXJnZXRba2V5XSwgc291cmNlW2tleV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHNvdXJjZVtrZXldIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtZXJnZSh0YXJnZXQsIC4uLnNvdXJjZXMpO1xufVxuIl0sIm5hbWVzIjpbImlzT2JqZWN0IiwiaXRlbSIsIkFycmF5IiwiaXNBcnJheSIsIm1lcmdlIiwidGFyZ2V0Iiwic291cmNlcyIsImxlbmd0aCIsInNvdXJjZSIsInNoaWZ0Iiwia2V5IiwiT2JqZWN0IiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/merge.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/providers.js":
/*!********************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/providers.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parseProviders)\n/* harmony export */ });\n/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./merge.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/merge.js\");\n\n/**\n * Adds `signinUrl` and `callbackUrl` to each provider\n * and deep merge user-defined options.\n */ function parseProviders(params) {\n    const { providerId, options } = params;\n    const url = new URL(options.basePath ?? \"/auth\", params.url.origin);\n    const providers = params.providers.map((p)=>{\n        const provider = typeof p === \"function\" ? p() : p;\n        const { options: userOptions, ...defaults } = provider;\n        const id = userOptions?.id ?? defaults.id;\n        const merged = (0,_merge_js__WEBPACK_IMPORTED_MODULE_0__.merge)(defaults, userOptions, {\n            signinUrl: `${url}/signin/${id}`,\n            callbackUrl: `${url}/callback/${id}`\n        });\n        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n            merged.redirectProxyUrl ?? (merged.redirectProxyUrl = options.redirectProxyUrl);\n            return normalizeOAuth(merged);\n        }\n        return merged;\n    });\n    return {\n        providers,\n        provider: providers.find(({ id })=>id === providerId)\n    };\n}\n// TODO: Also add discovery here, if some endpoints/config are missing.\n// We should return both a client and authorization server config.\nfunction normalizeOAuth(c) {\n    if (c.issuer) c.wellKnown ?? (c.wellKnown = `${c.issuer}/.well-known/openid-configuration`);\n    const authorization = normalizeEndpoint(c.authorization, c.issuer);\n    if (authorization && !authorization.url?.searchParams.has(\"scope\")) {\n        authorization.url.searchParams.set(\"scope\", \"openid profile email\");\n    }\n    const token = normalizeEndpoint(c.token, c.issuer);\n    const userinfo = normalizeEndpoint(c.userinfo, c.issuer);\n    const checks = c.checks ?? [\n        \"pkce\"\n    ];\n    if (c.redirectProxyUrl) {\n        if (!checks.includes(\"state\")) checks.push(\"state\");\n        c.redirectProxyUrl = `${c.redirectProxyUrl}/callback/${c.id}`;\n    }\n    return {\n        ...c,\n        authorization,\n        token,\n        checks,\n        userinfo,\n        profile: c.profile ?? defaultProfile,\n        account: c.account ?? defaultAccount\n    };\n}\n/**\n * Returns basic user profile from the userinfo response/`id_token` claims.\n * The returned `id` will become the `account.providerAccountId`. `user.id`\n * and `account.id` are auto-generated UUID's.\n *\n * The result if this function is used to create the `User` in the database.\n * @see https://authjs.dev/reference/core/adapters#user\n * @see https://openid.net/specs/openid-connect-core-1_0.html#IDToken\n * @see https://openid.net/specs/openid-connect-core-1_0.html#\n */ const defaultProfile = (profile)=>{\n    return stripUndefined({\n        id: profile.sub ?? profile.id ?? crypto.randomUUID(),\n        name: profile.name ?? profile.nickname ?? profile.preferred_username,\n        email: profile.email,\n        image: profile.picture\n    });\n};\n/**\n * Returns basic OAuth/OIDC values from the token response.\n * @see https://www.ietf.org/rfc/rfc6749.html#section-5.1\n * @see https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\n * @see https://authjs.dev/reference/core/adapters#account\n */ const defaultAccount = (account)=>{\n    return stripUndefined({\n        access_token: account.access_token,\n        id_token: account.id_token,\n        refresh_token: account.refresh_token,\n        expires_at: account.expires_at,\n        scope: account.scope,\n        token_type: account.token_type,\n        session_state: account.session_state\n    });\n};\nfunction stripUndefined(o) {\n    const result = {};\n    for (let [k, v] of Object.entries(o))v !== undefined && (result[k] = v);\n    return result;\n}\nfunction normalizeEndpoint(e, issuer) {\n    if (!e && issuer) return;\n    if (typeof e === \"string\") {\n        return {\n            url: new URL(e)\n        };\n    }\n    // If e.url is undefined, it's because the provider config\n    // assumes that we will use the issuer endpoint.\n    // The existence of either e.url or provider.issuer is checked in\n    // assert.ts. We fallback to \"https://authjs.dev\" to be able to pass around\n    // a valid URL even if the user only provided params.\n    // NOTE: This need to be checked when constructing the URL\n    // for the authorization, token and userinfo endpoints.\n    const url = new URL(e?.url ?? \"https://authjs.dev\");\n    if (e?.params != null) {\n        for (let [key, value] of Object.entries(e.params)){\n            if (key === \"claims\") value = JSON.stringify(value);\n            url.searchParams.set(key, String(value));\n        }\n    }\n    return {\n        url,\n        request: e?.request,\n        conform: e?.conform\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/providers.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/session.js":
/*!******************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/session.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLoggedInUser: () => (/* binding */ getLoggedInUser)\n/* harmony export */ });\n/**\n * Returns the currently logged in user, if any.\n */ async function getLoggedInUser(options, sessionStore) {\n    const { adapter, jwt, session: { strategy: sessionStrategy } } = options;\n    const sessionToken = sessionStore.value;\n    if (!sessionToken) return null;\n    // Try to decode JWT\n    if (sessionStrategy === \"jwt\") {\n        const salt = options.cookies.sessionToken.name;\n        const payload = await jwt.decode({\n            ...jwt,\n            token: sessionToken,\n            salt\n        });\n        if (payload && payload.sub) {\n            return {\n                id: payload.sub,\n                name: payload.name,\n                email: payload.email,\n                image: payload.picture\n            };\n        }\n    } else {\n        const userAndSession = await adapter?.getSessionAndUser(sessionToken);\n        if (userAndSession) {\n            return userAndSession.user;\n        }\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Q0FFQyxHQUNNLGVBQWVBLGdCQUFnQkMsT0FBTyxFQUFFQyxZQUFZO0lBQ3ZELE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxHQUFHLEVBQUVDLFNBQVMsRUFBRUMsVUFBVUMsZUFBZSxFQUFFLEVBQUcsR0FBR047SUFDbEUsTUFBTU8sZUFBZU4sYUFBYU8sS0FBSztJQUN2QyxJQUFJLENBQUNELGNBQ0QsT0FBTztJQUNYLG9CQUFvQjtJQUNwQixJQUFJRCxvQkFBb0IsT0FBTztRQUMzQixNQUFNRyxPQUFPVCxRQUFRVSxPQUFPLENBQUNILFlBQVksQ0FBQ0ksSUFBSTtRQUM5QyxNQUFNQyxVQUFVLE1BQU1ULElBQUlVLE1BQU0sQ0FBQztZQUFFLEdBQUdWLEdBQUc7WUFBRVcsT0FBT1A7WUFBY0U7UUFBSztRQUNyRSxJQUFJRyxXQUFXQSxRQUFRRyxHQUFHLEVBQUU7WUFDeEIsT0FBTztnQkFDSEMsSUFBSUosUUFBUUcsR0FBRztnQkFDZkosTUFBTUMsUUFBUUQsSUFBSTtnQkFDbEJNLE9BQU9MLFFBQVFLLEtBQUs7Z0JBQ3BCQyxPQUFPTixRQUFRTyxPQUFPO1lBQzFCO1FBQ0o7SUFDSixPQUNLO1FBQ0QsTUFBTUMsaUJBQWlCLE1BQU1sQixTQUFTbUIsa0JBQWtCZDtRQUN4RCxJQUFJYSxnQkFBZ0I7WUFDaEIsT0FBT0EsZUFBZUUsSUFBSTtRQUM5QjtJQUNKO0lBQ0EsT0FBTztBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdXNlci1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9zZXNzaW9uLmpzP2JmNjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIHRoZSBjdXJyZW50bHkgbG9nZ2VkIGluIHVzZXIsIGlmIGFueS5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldExvZ2dlZEluVXNlcihvcHRpb25zLCBzZXNzaW9uU3RvcmUpIHtcbiAgICBjb25zdCB7IGFkYXB0ZXIsIGp3dCwgc2Vzc2lvbjogeyBzdHJhdGVneTogc2Vzc2lvblN0cmF0ZWd5IH0sIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHNlc3Npb25Ub2tlbiA9IHNlc3Npb25TdG9yZS52YWx1ZTtcbiAgICBpZiAoIXNlc3Npb25Ub2tlbilcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgLy8gVHJ5IHRvIGRlY29kZSBKV1RcbiAgICBpZiAoc2Vzc2lvblN0cmF0ZWd5ID09PSBcImp3dFwiKSB7XG4gICAgICAgIGNvbnN0IHNhbHQgPSBvcHRpb25zLmNvb2tpZXMuc2Vzc2lvblRva2VuLm5hbWU7XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSBhd2FpdCBqd3QuZGVjb2RlKHsgLi4uand0LCB0b2tlbjogc2Vzc2lvblRva2VuLCBzYWx0IH0pO1xuICAgICAgICBpZiAocGF5bG9hZCAmJiBwYXlsb2FkLnN1Yikge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBpZDogcGF5bG9hZC5zdWIsXG4gICAgICAgICAgICAgICAgbmFtZTogcGF5bG9hZC5uYW1lLFxuICAgICAgICAgICAgICAgIGVtYWlsOiBwYXlsb2FkLmVtYWlsLFxuICAgICAgICAgICAgICAgIGltYWdlOiBwYXlsb2FkLnBpY3R1cmUsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCB1c2VyQW5kU2Vzc2lvbiA9IGF3YWl0IGFkYXB0ZXI/LmdldFNlc3Npb25BbmRVc2VyKHNlc3Npb25Ub2tlbik7XG4gICAgICAgIGlmICh1c2VyQW5kU2Vzc2lvbikge1xuICAgICAgICAgICAgcmV0dXJuIHVzZXJBbmRTZXNzaW9uLnVzZXI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG4iXSwibmFtZXMiOlsiZ2V0TG9nZ2VkSW5Vc2VyIiwib3B0aW9ucyIsInNlc3Npb25TdG9yZSIsImFkYXB0ZXIiLCJqd3QiLCJzZXNzaW9uIiwic3RyYXRlZ3kiLCJzZXNzaW9uU3RyYXRlZ3kiLCJzZXNzaW9uVG9rZW4iLCJ2YWx1ZSIsInNhbHQiLCJjb29raWVzIiwibmFtZSIsInBheWxvYWQiLCJkZWNvZGUiLCJ0b2tlbiIsInN1YiIsImlkIiwiZW1haWwiLCJpbWFnZSIsInBpY3R1cmUiLCJ1c2VyQW5kU2Vzc2lvbiIsImdldFNlc3Npb25BbmRVc2VyIiwidXNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/session.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/web.js":
/*!**************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/web.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHash: () => (/* binding */ createHash),\n/* harmony export */   parseActionAndProviderId: () => (/* binding */ parseActionAndProviderId),\n/* harmony export */   randomString: () => (/* binding */ randomString),\n/* harmony export */   toInternalRequest: () => (/* binding */ toInternalRequest),\n/* harmony export */   toRequest: () => (/* binding */ toRequest),\n/* harmony export */   toResponse: () => (/* binding */ toResponse)\n/* harmony export */ });\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ \"(action-browser)/./node_modules/@auth/core/node_modules/cookie/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/logger.js\");\n/* harmony import */ var _actions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./actions.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/actions.js\");\n\n\n\n\nasync function getBody(req) {\n    if (!(\"body\" in req) || !req.body || req.method !== \"POST\") return;\n    const contentType = req.headers.get(\"content-type\");\n    if (contentType?.includes(\"application/json\")) {\n        return await req.json();\n    } else if (contentType?.includes(\"application/x-www-form-urlencoded\")) {\n        const params = new URLSearchParams(await req.text());\n        return Object.fromEntries(params);\n    }\n}\nasync function toInternalRequest(req, config) {\n    try {\n        if (req.method !== \"GET\" && req.method !== \"POST\") throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(\"Only GET and POST requests are supported.\");\n        // Defaults are usually set in the `init` function, but this is needed below\n        config.basePath ?? (config.basePath = \"/auth\");\n        const url = new URL(req.url);\n        const { action, providerId } = parseActionAndProviderId(url.pathname, config.basePath);\n        return {\n            url,\n            action,\n            providerId,\n            method: req.method,\n            headers: Object.fromEntries(req.headers),\n            body: req.body ? await getBody(req) : undefined,\n            cookies: (0,cookie__WEBPACK_IMPORTED_MODULE_0__.parse)(req.headers.get(\"cookie\") ?? \"\") ?? {},\n            error: url.searchParams.get(\"error\") ?? undefined,\n            query: Object.fromEntries(url.searchParams)\n        };\n    } catch (e) {\n        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.error(e);\n        _logger_js__WEBPACK_IMPORTED_MODULE_2__.logger.debug(\"request\", req);\n    }\n}\nfunction toRequest(request) {\n    return new Request(request.url, {\n        headers: request.headers,\n        method: request.method,\n        body: request.method === \"POST\" ? JSON.stringify(request.body ?? {}) : undefined\n    });\n}\nfunction toResponse(res) {\n    const headers = new Headers(res.headers);\n    res.cookies?.forEach((cookie)=>{\n        const { name, value, options } = cookie;\n        const cookieHeader = (0,cookie__WEBPACK_IMPORTED_MODULE_0__.serialize)(name, value, options);\n        if (headers.has(\"Set-Cookie\")) headers.append(\"Set-Cookie\", cookieHeader);\n        else headers.set(\"Set-Cookie\", cookieHeader);\n    });\n    let body = res.body;\n    if (headers.get(\"content-type\") === \"application/json\") body = JSON.stringify(res.body);\n    else if (headers.get(\"content-type\") === \"application/x-www-form-urlencoded\") body = new URLSearchParams(res.body).toString();\n    const status = res.redirect ? 302 : res.status ?? 200;\n    const response = new Response(body, {\n        headers,\n        status\n    });\n    if (res.redirect) response.headers.set(\"Location\", res.redirect);\n    return response;\n}\n/** Web compatible method to create a hash, using SHA256 */ async function createHash(message) {\n    const data = new TextEncoder().encode(message);\n    const hash = await crypto.subtle.digest(\"SHA-256\", data);\n    return Array.from(new Uint8Array(hash)).map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\").toString();\n}\n/** Web compatible method to create a random string of a given length */ function randomString(size) {\n    const i2hex = (i)=>(\"0\" + i.toString(16)).slice(-2);\n    const r = (a, i)=>a + i2hex(i);\n    const bytes = crypto.getRandomValues(new Uint8Array(size));\n    return Array.from(bytes).reduce(r, \"\");\n}\n/** @internal Parse the action and provider id from a URL pathname. */ function parseActionAndProviderId(pathname, base) {\n    const a = pathname.match(new RegExp(`^${base}(.+)`));\n    if (a === null) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(`Cannot parse action at ${pathname}`);\n    const [_, actionAndProviderId] = a;\n    const b = actionAndProviderId.replace(/^\\//, \"\").split(\"/\");\n    if (b.length !== 1 && b.length !== 2) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(`Cannot parse action at ${pathname}`);\n    const [action, providerId] = b;\n    if (!(0,_actions_js__WEBPACK_IMPORTED_MODULE_3__.isAuthAction)(action)) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(`Cannot parse action at ${pathname}`);\n    if (providerId && ![\n        \"signin\",\n        \"callback\",\n        \"webauthn-options\"\n    ].includes(action)) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(`Cannot parse action at ${pathname}`);\n    return {\n        action,\n        providerId\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/web.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/webauthn-client.js":
/*!**************************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/webauthn-client.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   webauthnScript: () => (/* binding */ webauthnScript)\n/* harmony export */ });\n//@ts-check\n// Declare a SimpleWebAuthnBrowser variable as part of \"window\"\n/** @typedef {\"authenticate\"} WebAuthnAuthenticate */ /** @typedef {\"register\"} WebAuthnRegister */ /** @typedef {WebAuthnRegister | WebAuthnAuthenticate} WebAuthnOptionsAction */ /**\n * @template {WebAuthnOptionsAction} T\n * @typedef {T extends WebAuthnAuthenticate ?\n *  { options: import(\"@simplewebauthn/server/script/deps\").PublicKeyCredentialRequestOptionsJSON; action: \"authenticate\" } :\n *  T extends WebAuthnRegister ?\n *  { options: import(\"@simplewebauthn/server/script/deps\").PublicKeyCredentialCreationOptionsJSON; action: \"register\" } :\n * never\n * } WebAuthnOptionsReturn\n */ /**\n * webauthnScript is the client-side script that handles the webauthn form\n *\n * @param {string} authURL is the URL of the auth API\n * @param {string} providerID is the ID of the webauthn provider\n */ async function webauthnScript(authURL, providerID) {\n    /** @type {typeof import(\"@simplewebauthn/browser\")} */ // @ts-ignore\n    const WebAuthnBrowser = window.SimpleWebAuthnBrowser;\n    /**\n     * Fetch webauthn options from the server\n     *\n     * @template {WebAuthnOptionsAction} T\n     * @param {T | undefined} action action to fetch options for\n     * @returns {Promise<WebAuthnOptionsReturn<T> | undefined>}\n     */ async function fetchOptions(action) {\n        // Create the options URL with the action and query parameters\n        const url = new URL(`${authURL}/webauthn-options/${providerID}`);\n        if (action) url.searchParams.append(\"action\", action);\n        const formFields = getFormFields();\n        formFields.forEach((field)=>{\n            url.searchParams.append(field.name, field.value);\n        });\n        const res = await fetch(url);\n        if (!res.ok) {\n            console.error(\"Failed to fetch options\", res);\n            return;\n        }\n        return res.json();\n    }\n    /**\n     * Get the webauthn form from the page\n     *\n     * @returns {HTMLFormElement}\n     */ function getForm() {\n        const formID = `#${providerID}-form`;\n        /** @type {HTMLFormElement | null} */ const form = document.querySelector(formID);\n        if (!form) throw new Error(`Form '${formID}' not found`);\n        return form;\n    }\n    /**\n     * Get formFields from the form\n     *\n     * @returns {HTMLInputElement[]}\n     */ function getFormFields() {\n        const form = getForm();\n        /** @type {HTMLInputElement[]} */ const formFields = Array.from(form.querySelectorAll(\"input[data-form-field]\"));\n        return formFields;\n    }\n    /**\n     * Passkey form submission handler.\n     * Takes the input from the form and a few other parameters and submits it to the server.\n     *\n     * @param {WebAuthnOptionsAction} action action to submit\n     * @param {unknown | undefined} data optional data to submit\n     * @returns {Promise<void>}\n     */ async function submitForm(action, data) {\n        const form = getForm();\n        // If a POST request, create hidden fields in the form\n        // and submit it so the browser redirects on login\n        if (action) {\n            const actionInput = document.createElement(\"input\");\n            actionInput.type = \"hidden\";\n            actionInput.name = \"action\";\n            actionInput.value = action;\n            form.appendChild(actionInput);\n        }\n        if (data) {\n            const dataInput = document.createElement(\"input\");\n            dataInput.type = \"hidden\";\n            dataInput.name = \"data\";\n            dataInput.value = JSON.stringify(data);\n            form.appendChild(dataInput);\n        }\n        return form.submit();\n    }\n    /**\n     * Executes the authentication flow by fetching options from the server,\n     * starting the authentication, and submitting the response to the server.\n     *\n     * @param {WebAuthnOptionsReturn<WebAuthnAuthenticate>['options']} options\n     * @param {boolean} autofill Whether or not to use the browser's autofill\n     * @returns {Promise<void>}\n     */ async function authenticationFlow(options, autofill) {\n        // Start authentication\n        const authResp = await WebAuthnBrowser.startAuthentication(options, autofill);\n        // Submit authentication response to server\n        return await submitForm(\"authenticate\", authResp);\n    }\n    /**\n     * @param {WebAuthnOptionsReturn<WebAuthnRegister>['options']} options\n     */ async function registrationFlow(options) {\n        // Check if all required formFields are set\n        const formFields = getFormFields();\n        formFields.forEach((field)=>{\n            if (field.required && !field.value) {\n                throw new Error(`Missing required field: ${field.name}`);\n            }\n        });\n        // Start registration\n        const regResp = await WebAuthnBrowser.startRegistration(options);\n        // Submit registration response to server\n        return await submitForm(\"register\", regResp);\n    }\n    /**\n     * Attempts to authenticate the user when the page loads\n     * using the browser's autofill popup.\n     *\n     * @returns {Promise<void>}\n     */ async function autofillAuthentication() {\n        // if the browser can't handle autofill, don't try\n        if (!WebAuthnBrowser.browserSupportsWebAuthnAutofill()) return;\n        const res = await fetchOptions(\"authenticate\");\n        if (!res) {\n            console.error(\"Failed to fetch option for autofill authentication\");\n            return;\n        }\n        try {\n            await authenticationFlow(res.options, true);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n    /**\n     * Sets up the passkey form by overriding the form submission handler\n     * so that it attempts to authenticate the user when the form is submitted.\n     * If the user is not registered, it will attempt to register them instead.\n     */ async function setupForm() {\n        const form = getForm();\n        // If the browser can't do WebAuthn, hide the form\n        if (!WebAuthnBrowser.browserSupportsWebAuthn()) {\n            form.style.display = \"none\";\n            return;\n        }\n        if (form) {\n            form.addEventListener(\"submit\", async (e)=>{\n                e.preventDefault();\n                // Fetch options from the server without assuming that\n                // the user is registered\n                const res = await fetchOptions(undefined);\n                if (!res) {\n                    console.error(\"Failed to fetch options for form submission\");\n                    return;\n                }\n                // Then execute the appropriate flow\n                if (res.action === \"authenticate\") {\n                    try {\n                        await authenticationFlow(res.options, false);\n                    } catch (e) {\n                        console.error(e);\n                    }\n                } else if (res.action === \"register\") {\n                    try {\n                        await registrationFlow(res.options);\n                    } catch (e) {\n                        console.error(e);\n                    }\n                }\n            });\n        }\n    }\n    // On page load, setup the form and attempt to authenticate the user.\n    setupForm();\n    autofillAuthentication();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/webauthn-client.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/lib/utils/webauthn-utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/webauthn-utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertInternalOptionsWebAuthn: () => (/* binding */ assertInternalOptionsWebAuthn),\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   getAuthenticationResponse: () => (/* binding */ getAuthenticationResponse),\n/* harmony export */   getRegistrationResponse: () => (/* binding */ getRegistrationResponse),\n/* harmony export */   inferWebAuthnOptions: () => (/* binding */ inferWebAuthnOptions),\n/* harmony export */   stringToTransports: () => (/* binding */ stringToTransports),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   transportsToString: () => (/* binding */ transportsToString),\n/* harmony export */   verifyAuthenticate: () => (/* binding */ verifyAuthenticate),\n/* harmony export */   verifyRegister: () => (/* binding */ verifyRegister)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(action-browser)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../actions/callback/oauth/checks.js */ \"(action-browser)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var _web_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./web.js */ \"(action-browser)/./node_modules/@auth/core/lib/utils/web.js\");\n\n\n\n/**\n * Infers the WebAuthn options based on the provided parameters.\n *\n * @param action - The WebAuthn action to perform (optional).\n * @param loggedInUser - The logged-in user (optional).\n * @param userInfoResponse - The response containing user information (optional).\n *\n * @returns The WebAuthn action to perform, or null if no inference could be made.\n */ function inferWebAuthnOptions(action, loggedIn, userInfoResponse) {\n    const { user, exists = false } = userInfoResponse ?? {};\n    switch(action){\n        case \"authenticate\":\n            {\n                /**\n             * Always allow explicit authentication requests.\n             */ return \"authenticate\";\n            }\n        case \"register\":\n            {\n                /**\n             * Registration is only allowed if:\n             * - The user is logged in, meaning the user wants to register a new authenticator.\n             * - The user is not logged in and provided user info that does NOT exist, meaning the user wants to register a new account.\n             */ if (user && loggedIn === exists) return \"register\";\n                break;\n            }\n        case undefined:\n            {\n                /**\n             * When no explicit action is provided, we try to infer it based on the user info provided. These are the possible cases:\n             * - Logged in users must always send an explit action, so we bail out in this case.\n             * - Otherwise, if no user info is provided, the desired action is authentication without pre-defined authenticators.\n             * - Otherwise, if the user info provided is of an existing user, the desired action is authentication with their pre-defined authenticators.\n             * - Finally, if the user info provided is of a non-existing user, the desired action is registration.\n             */ if (!loggedIn) {\n                    if (user) {\n                        if (exists) {\n                            return \"authenticate\";\n                        } else {\n                            return \"register\";\n                        }\n                    } else {\n                        return \"authenticate\";\n                    }\n                }\n                break;\n            }\n    }\n    // No decision could be made\n    return null;\n}\n/**\n * Retrieves the registration response for WebAuthn options request.\n *\n * @param options - The internal options for WebAuthn.\n * @param request - The request object.\n * @param user - The user information.\n * @param resCookies - Optional cookies to be included in the response.\n * @returns A promise that resolves to the WebAuthnOptionsResponse.\n */ async function getRegistrationResponse(options, request, user, resCookies) {\n    // Get registration options\n    const regOptions = await getRegistrationOptions(options, request, user);\n    // Get signed cookie\n    const { cookie } = await _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__.webauthnChallenge.create(options, regOptions.challenge, user);\n    return {\n        status: 200,\n        cookies: [\n            ...resCookies ?? [],\n            cookie\n        ],\n        body: {\n            action: \"register\",\n            options: regOptions\n        },\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n}\n/**\n * Retrieves the authentication response for WebAuthn options request.\n *\n * @param options - The internal options for WebAuthn.\n * @param request - The request object.\n * @param user - Optional user information.\n * @param resCookies - Optional array of cookies to be included in the response.\n * @returns A promise that resolves to a WebAuthnOptionsResponse object.\n */ async function getAuthenticationResponse(options, request, user, resCookies) {\n    // Get authentication options\n    const authOptions = await getAuthenticationOptions(options, request, user);\n    // Get signed cookie\n    const { cookie } = await _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__.webauthnChallenge.create(options, authOptions.challenge);\n    return {\n        status: 200,\n        cookies: [\n            ...resCookies ?? [],\n            cookie\n        ],\n        body: {\n            action: \"authenticate\",\n            options: authOptions\n        },\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n}\nasync function verifyAuthenticate(options, request, resCookies) {\n    const { adapter, provider } = options;\n    // Get WebAuthn response from request body\n    const data = request.body && typeof request.body.data === \"string\" ? JSON.parse(request.body.data) : undefined;\n    if (!data || typeof data !== \"object\" || !(\"id\" in data) || typeof data.id !== \"string\") {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Invalid WebAuthn Authentication response\");\n    }\n    // Reset the ID so we smooth out implementation differences\n    const credentialID = toBase64(fromBase64(data.id));\n    // Get authenticator from database\n    const authenticator = await adapter.getAuthenticator(credentialID);\n    if (!authenticator) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(`WebAuthn authenticator not found in database: ${JSON.stringify({\n            credentialID\n        })}`);\n    }\n    // Get challenge from request cookies\n    const { challenge: expectedChallenge } = await _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__.webauthnChallenge.use(options, request.cookies, resCookies);\n    // Verify the response\n    let verification;\n    try {\n        const relayingParty = provider.getRelayingParty(options, request);\n        verification = await provider.simpleWebAuthn.verifyAuthenticationResponse({\n            ...provider.verifyAuthenticationOptions,\n            expectedChallenge,\n            response: data,\n            authenticator: fromAdapterAuthenticator(authenticator),\n            expectedOrigin: relayingParty.origin,\n            expectedRPID: relayingParty.id\n        });\n    } catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.WebAuthnVerificationError(e);\n    }\n    const { verified, authenticationInfo } = verification;\n    // Make sure the response was verified\n    if (!verified) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.WebAuthnVerificationError(\"WebAuthn authentication response could not be verified.\");\n    }\n    // Update authenticator counter\n    try {\n        const { newCounter } = authenticationInfo;\n        await adapter.updateAuthenticatorCounter(authenticator.credentialID, newCounter);\n    } catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AdapterError(`Failed to update authenticator counter. This may cause future authentication attempts to fail. ${JSON.stringify({\n            credentialID,\n            oldCounter: authenticator.counter,\n            newCounter: authenticationInfo.newCounter\n        })}`, e);\n    }\n    // Get the account and user\n    const account = await adapter.getAccount(authenticator.providerAccountId, provider.id);\n    if (!account) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(`WebAuthn account not found in database: ${JSON.stringify({\n            credentialID,\n            providerAccountId: authenticator.providerAccountId\n        })}`);\n    }\n    const user = await adapter.getUser(account.userId);\n    if (!user) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(`WebAuthn user not found in database: ${JSON.stringify({\n            credentialID,\n            providerAccountId: authenticator.providerAccountId,\n            userID: account.userId\n        })}`);\n    }\n    return {\n        account,\n        user\n    };\n}\nasync function verifyRegister(options, request, resCookies) {\n    const { provider } = options;\n    // Get WebAuthn response from request body\n    const data = request.body && typeof request.body.data === \"string\" ? JSON.parse(request.body.data) : undefined;\n    if (!data || typeof data !== \"object\" || !(\"id\" in data) || typeof data.id !== \"string\") {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Invalid WebAuthn Registration response\");\n    }\n    // Get challenge from request cookies\n    const { challenge: expectedChallenge, registerData: user } = await _actions_callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_1__.webauthnChallenge.use(options, request.cookies, resCookies);\n    if (!user) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError(\"Missing user registration data in WebAuthn challenge cookie\");\n    }\n    // Verify the response\n    let verification;\n    try {\n        const relayingParty = provider.getRelayingParty(options, request);\n        verification = await provider.simpleWebAuthn.verifyRegistrationResponse({\n            ...provider.verifyRegistrationOptions,\n            expectedChallenge,\n            response: data,\n            expectedOrigin: relayingParty.origin,\n            expectedRPID: relayingParty.id\n        });\n    } catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.WebAuthnVerificationError(e);\n    }\n    // Make sure the response was verified\n    if (!verification.verified || !verification.registrationInfo) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.WebAuthnVerificationError(\"WebAuthn registration response could not be verified\");\n    }\n    // Build a new account\n    const account = {\n        providerAccountId: toBase64(verification.registrationInfo.credentialID),\n        provider: options.provider.id,\n        type: provider.type\n    };\n    // Build a new authenticator\n    const authenticator = {\n        providerAccountId: account.providerAccountId,\n        counter: verification.registrationInfo.counter,\n        credentialID: toBase64(verification.registrationInfo.credentialID),\n        credentialPublicKey: toBase64(verification.registrationInfo.credentialPublicKey),\n        credentialBackedUp: verification.registrationInfo.credentialBackedUp,\n        credentialDeviceType: verification.registrationInfo.credentialDeviceType,\n        transports: transportsToString(data.response.transports)\n    };\n    // Return created stuff\n    return {\n        user,\n        account,\n        authenticator\n    };\n}\n/**\n * Generates WebAuthn authentication options.\n *\n * @param options - The internal options for WebAuthn.\n * @param request - The request object.\n * @param user - Optional user information.\n * @returns The authentication options.\n */ async function getAuthenticationOptions(options, request, user) {\n    const { provider, adapter } = options;\n    // Get the user's authenticators.\n    const authenticators = user && user[\"id\"] ? await adapter.listAuthenticatorsByUserId(user.id) : null;\n    const relayingParty = provider.getRelayingParty(options, request);\n    // Return the authentication options.\n    return await provider.simpleWebAuthn.generateAuthenticationOptions({\n        ...provider.authenticationOptions,\n        rpID: relayingParty.id,\n        allowCredentials: authenticators?.map((a)=>({\n                id: fromBase64(a.credentialID),\n                type: \"public-key\",\n                transports: stringToTransports(a.transports)\n            }))\n    });\n}\n/**\n * Generates WebAuthn registration options.\n *\n * @param options - The internal options for WebAuthn.\n * @param request - The request object.\n * @param user - The user information.\n * @returns The registration options.\n */ async function getRegistrationOptions(options, request, user) {\n    const { provider, adapter } = options;\n    // Get the user's authenticators.\n    const authenticators = user[\"id\"] ? await adapter.listAuthenticatorsByUserId(user.id) : null;\n    // Generate a random user ID for the credential.\n    // We can do this because we don't use this user ID to link the\n    // credential to the user. Instead, we store actual userID in the\n    // Authenticator object and fetch it via it's credential ID.\n    const userID = (0,_web_js__WEBPACK_IMPORTED_MODULE_2__.randomString)(32);\n    const relayingParty = provider.getRelayingParty(options, request);\n    // Return the registration options.\n    return await provider.simpleWebAuthn.generateRegistrationOptions({\n        ...provider.registrationOptions,\n        userID,\n        userName: user.email,\n        userDisplayName: user.name ?? undefined,\n        rpID: relayingParty.id,\n        rpName: relayingParty.name,\n        excludeCredentials: authenticators?.map((a)=>({\n                id: fromBase64(a.credentialID),\n                type: \"public-key\",\n                transports: stringToTransports(a.transports)\n            }))\n    });\n}\nfunction assertInternalOptionsWebAuthn(options) {\n    const { provider, adapter } = options;\n    // Adapter is required for WebAuthn\n    if (!adapter) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.MissingAdapter(\"An adapter is required for the WebAuthn provider\");\n    // Provider must be WebAuthn\n    if (!provider || provider.type !== \"webauthn\") {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidProvider(\"Provider must be WebAuthn\");\n    }\n    // Narrow the options type for typed usage later\n    return {\n        ...options,\n        provider,\n        adapter\n    };\n}\nfunction fromAdapterAuthenticator(authenticator) {\n    return {\n        ...authenticator,\n        credentialDeviceType: authenticator.credentialDeviceType,\n        transports: stringToTransports(authenticator.transports),\n        credentialID: fromBase64(authenticator.credentialID),\n        credentialPublicKey: fromBase64(authenticator.credentialPublicKey)\n    };\n}\nfunction fromBase64(base64) {\n    return new Uint8Array(Buffer.from(base64, \"base64\"));\n}\nfunction toBase64(bytes) {\n    return Buffer.from(bytes).toString(\"base64\");\n}\nfunction transportsToString(transports) {\n    return transports?.join(\",\");\n}\nfunction stringToTransports(tstring) {\n    return tstring ? tstring.split(\",\") : undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/lib/utils/webauthn-utils.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/core/providers/credentials.js":
/*!**********************************************************!*\
  !*** ./node_modules/@auth/core/providers/credentials.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Credentials)\n/* harmony export */ });\n/**\n * The Credentials provider allows you to handle signing in with arbitrary credentials,\n * such as a username and password, domain, or two factor authentication or hardware device (e.g. YubiKey U2F / FIDO).\n *\n * It is intended to support use cases where you have an existing system you need to authenticate users against.\n *\n * It comes with the constraint that users authenticated in this manner are not persisted in the database,\n * and consequently that the Credentials provider can only be used if JSON Web Tokens are enabled for sessions.\n *\n * :::caution\n * The functionality provided for credentials-based authentication is intentionally limited to discourage the use of passwords due to the inherent security risks of the username-password model.\n *\n * OAuth providers spend significant amounts of money, time, and engineering effort to build:\n *\n * - abuse detection (bot-protection, rate-limiting)\n * - password management (password reset, credential stuffing, rotation)\n * - data security (encryption/salting, strength validation)\n *\n * and much more for authentication solutions. It is likely that your application would benefit from leveraging these battle-tested solutions rather than try to rebuild them from scratch.\n *\n * If you'd still like to build password-based authentication for your application despite these risks, Auth.js gives you full control to do so.\n *\n * :::\n *\n * See the [callbacks documentation](/reference/core#authconfig#callbacks) for more information on how to interact with the token. For example, you can add additional information to the token by returning an object from the `jwt()` callback:\n *\n * ```js\n * callbacks: {\n *   async jwt({ token, user, account, profile, isNewUser }) {\n *     if (user) {\n *       token.id = user.id\n *     }\n *     return token\n *   }\n * }\n * ```\n *\n * @example\n * ```js\n * import Auth from \"@auth/core\"\n * import Credentials from \"@auth/core/providers/credentials\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await AuthHandler(request, {\n *   providers: [\n *     Credentials({\n *       credentials: {\n *         username: { label: \"Username\" },\n *         password: {  label: \"Password\", type: \"password\" }\n *       },\n *       async authorize({ request }) {\n *         const response = await fetch(request)\n *         if(!response.ok) return null\n *         return await response.json() ?? null\n *       }\n *     })\n *   ],\n *   secret: \"...\",\n *   trustHost: true,\n * })\n * ```\n * @see [Username/Password Example](https://authjs.dev/guides/providers/credentials#example---username--password)\n * @see [Web3/Signin With Ethereum Example](https://authjs.dev/guides/providers/credentials#example---web3--signin-with-ethereum)\n */ function Credentials(config) {\n    return {\n        id: \"credentials\",\n        name: \"Credentials\",\n        type: \"credentials\",\n        credentials: {},\n        authorize: ()=>null,\n        // @ts-expect-error\n        options: config\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQStEQyxHQUNjLFNBQVNBLFlBQVlDLE1BQU07SUFDdEMsT0FBTztRQUNIQyxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsTUFBTTtRQUNOQyxhQUFhLENBQUM7UUFDZEMsV0FBVyxJQUFNO1FBQ2pCLG1CQUFtQjtRQUNuQkMsU0FBU047SUFDYjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdXNlci1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcz8yNmIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIENyZWRlbnRpYWxzIHByb3ZpZGVyIGFsbG93cyB5b3UgdG8gaGFuZGxlIHNpZ25pbmcgaW4gd2l0aCBhcmJpdHJhcnkgY3JlZGVudGlhbHMsXG4gKiBzdWNoIGFzIGEgdXNlcm5hbWUgYW5kIHBhc3N3b3JkLCBkb21haW4sIG9yIHR3byBmYWN0b3IgYXV0aGVudGljYXRpb24gb3IgaGFyZHdhcmUgZGV2aWNlIChlLmcuIFl1YmlLZXkgVTJGIC8gRklETykuXG4gKlxuICogSXQgaXMgaW50ZW5kZWQgdG8gc3VwcG9ydCB1c2UgY2FzZXMgd2hlcmUgeW91IGhhdmUgYW4gZXhpc3Rpbmcgc3lzdGVtIHlvdSBuZWVkIHRvIGF1dGhlbnRpY2F0ZSB1c2VycyBhZ2FpbnN0LlxuICpcbiAqIEl0IGNvbWVzIHdpdGggdGhlIGNvbnN0cmFpbnQgdGhhdCB1c2VycyBhdXRoZW50aWNhdGVkIGluIHRoaXMgbWFubmVyIGFyZSBub3QgcGVyc2lzdGVkIGluIHRoZSBkYXRhYmFzZSxcbiAqIGFuZCBjb25zZXF1ZW50bHkgdGhhdCB0aGUgQ3JlZGVudGlhbHMgcHJvdmlkZXIgY2FuIG9ubHkgYmUgdXNlZCBpZiBKU09OIFdlYiBUb2tlbnMgYXJlIGVuYWJsZWQgZm9yIHNlc3Npb25zLlxuICpcbiAqIDo6OmNhdXRpb25cbiAqIFRoZSBmdW5jdGlvbmFsaXR5IHByb3ZpZGVkIGZvciBjcmVkZW50aWFscy1iYXNlZCBhdXRoZW50aWNhdGlvbiBpcyBpbnRlbnRpb25hbGx5IGxpbWl0ZWQgdG8gZGlzY291cmFnZSB0aGUgdXNlIG9mIHBhc3N3b3JkcyBkdWUgdG8gdGhlIGluaGVyZW50IHNlY3VyaXR5IHJpc2tzIG9mIHRoZSB1c2VybmFtZS1wYXNzd29yZCBtb2RlbC5cbiAqXG4gKiBPQXV0aCBwcm92aWRlcnMgc3BlbmQgc2lnbmlmaWNhbnQgYW1vdW50cyBvZiBtb25leSwgdGltZSwgYW5kIGVuZ2luZWVyaW5nIGVmZm9ydCB0byBidWlsZDpcbiAqXG4gKiAtIGFidXNlIGRldGVjdGlvbiAoYm90LXByb3RlY3Rpb24sIHJhdGUtbGltaXRpbmcpXG4gKiAtIHBhc3N3b3JkIG1hbmFnZW1lbnQgKHBhc3N3b3JkIHJlc2V0LCBjcmVkZW50aWFsIHN0dWZmaW5nLCByb3RhdGlvbilcbiAqIC0gZGF0YSBzZWN1cml0eSAoZW5jcnlwdGlvbi9zYWx0aW5nLCBzdHJlbmd0aCB2YWxpZGF0aW9uKVxuICpcbiAqIGFuZCBtdWNoIG1vcmUgZm9yIGF1dGhlbnRpY2F0aW9uIHNvbHV0aW9ucy4gSXQgaXMgbGlrZWx5IHRoYXQgeW91ciBhcHBsaWNhdGlvbiB3b3VsZCBiZW5lZml0IGZyb20gbGV2ZXJhZ2luZyB0aGVzZSBiYXR0bGUtdGVzdGVkIHNvbHV0aW9ucyByYXRoZXIgdGhhbiB0cnkgdG8gcmVidWlsZCB0aGVtIGZyb20gc2NyYXRjaC5cbiAqXG4gKiBJZiB5b3UnZCBzdGlsbCBsaWtlIHRvIGJ1aWxkIHBhc3N3b3JkLWJhc2VkIGF1dGhlbnRpY2F0aW9uIGZvciB5b3VyIGFwcGxpY2F0aW9uIGRlc3BpdGUgdGhlc2Ugcmlza3MsIEF1dGguanMgZ2l2ZXMgeW91IGZ1bGwgY29udHJvbCB0byBkbyBzby5cbiAqXG4gKiA6OjpcbiAqXG4gKiBTZWUgdGhlIFtjYWxsYmFja3MgZG9jdW1lbnRhdGlvbl0oL3JlZmVyZW5jZS9jb3JlI2F1dGhjb25maWcjY2FsbGJhY2tzKSBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBob3cgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgdG9rZW4uIEZvciBleGFtcGxlLCB5b3UgY2FuIGFkZCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHRvIHRoZSB0b2tlbiBieSByZXR1cm5pbmcgYW4gb2JqZWN0IGZyb20gdGhlIGBqd3QoKWAgY2FsbGJhY2s6XG4gKlxuICogYGBganNcbiAqIGNhbGxiYWNrczoge1xuICogICBhc3luYyBqd3QoeyB0b2tlbiwgdXNlciwgYWNjb3VudCwgcHJvZmlsZSwgaXNOZXdVc2VyIH0pIHtcbiAqICAgICBpZiAodXNlcikge1xuICogICAgICAgdG9rZW4uaWQgPSB1c2VyLmlkXG4gKiAgICAgfVxuICogICAgIHJldHVybiB0b2tlblxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBganNcbiAqIGltcG9ydCBBdXRoIGZyb20gXCJAYXV0aC9jb3JlXCJcbiAqIGltcG9ydCBDcmVkZW50aWFscyBmcm9tIFwiQGF1dGgvY29yZS9wcm92aWRlcnMvY3JlZGVudGlhbHNcIlxuICpcbiAqIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChcImh0dHBzOi8vZXhhbXBsZS5jb21cIilcbiAqIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgQXV0aEhhbmRsZXIocmVxdWVzdCwge1xuICogICBwcm92aWRlcnM6IFtcbiAqICAgICBDcmVkZW50aWFscyh7XG4gKiAgICAgICBjcmVkZW50aWFsczoge1xuICogICAgICAgICB1c2VybmFtZTogeyBsYWJlbDogXCJVc2VybmFtZVwiIH0sXG4gKiAgICAgICAgIHBhc3N3b3JkOiB7ICBsYWJlbDogXCJQYXNzd29yZFwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfVxuICogICAgICAgfSxcbiAqICAgICAgIGFzeW5jIGF1dGhvcml6ZSh7IHJlcXVlc3QgfSkge1xuICogICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHJlcXVlc3QpXG4gKiAgICAgICAgIGlmKCFyZXNwb25zZS5vaykgcmV0dXJuIG51bGxcbiAqICAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKSA/PyBudWxsXG4gKiAgICAgICB9XG4gKiAgICAgfSlcbiAqICAgXSxcbiAqICAgc2VjcmV0OiBcIi4uLlwiLFxuICogICB0cnVzdEhvc3Q6IHRydWUsXG4gKiB9KVxuICogYGBgXG4gKiBAc2VlIFtVc2VybmFtZS9QYXNzd29yZCBFeGFtcGxlXShodHRwczovL2F1dGhqcy5kZXYvZ3VpZGVzL3Byb3ZpZGVycy9jcmVkZW50aWFscyNleGFtcGxlLS0tdXNlcm5hbWUtLXBhc3N3b3JkKVxuICogQHNlZSBbV2ViMy9TaWduaW4gV2l0aCBFdGhlcmV1bSBFeGFtcGxlXShodHRwczovL2F1dGhqcy5kZXYvZ3VpZGVzL3Byb3ZpZGVycy9jcmVkZW50aWFscyNleGFtcGxlLS0td2ViMy0tc2lnbmluLXdpdGgtZXRoZXJldW0pXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENyZWRlbnRpYWxzKGNvbmZpZykge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBcImNyZWRlbnRpYWxzXCIsXG4gICAgICAgIG5hbWU6IFwiQ3JlZGVudGlhbHNcIixcbiAgICAgICAgdHlwZTogXCJjcmVkZW50aWFsc1wiLFxuICAgICAgICBjcmVkZW50aWFsczoge30sXG4gICAgICAgIGF1dGhvcml6ZTogKCkgPT4gbnVsbCxcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgICAgICBvcHRpb25zOiBjb25maWcsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJDcmVkZW50aWFscyIsImNvbmZpZyIsImlkIiwibmFtZSIsInR5cGUiLCJjcmVkZW50aWFscyIsImF1dGhvcml6ZSIsIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/core/providers/credentials.js\n");

/***/ })

};
;